Shader version: 440
local_size = (8, 4, 1)
0:? Sequence
0:67  Function Definition: GetPoint(struct-Ray-vf3-vf31;f1; ( global highp 3-component vector of float)
0:67    Function Parameters: 
0:67      'ray' ( in structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:67      'Par' ( in highp float)
0:69    Sequence
0:69      Branch: Return with expression
0:69        add ( temp highp 3-component vector of float)
0:69          Origin: direct index for structure ( global highp 3-component vector of float)
0:69            'ray' ( in structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:69            Constant:
0:69              0 (const int)
0:69          vector-scale ( temp highp 3-component vector of float)
0:69            Direction: direct index for structure ( global highp 3-component vector of float)
0:69              'ray' ( in structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:69              Constant:
0:69                1 (const int)
0:69            'Par' ( in highp float)
0:284  Function Definition: SwapWithCondition(f1;f1;b1; ( global void)
0:284    Function Parameters: 
0:284      'a' ( inout highp float)
0:284      'b' ( inout highp float)
0:284      'condition' ( in bool)
0:286    Sequence
0:286      Sequence
0:286        move second child to first child ( temp highp float)
0:286          'Temp' ( temp highp float)
0:286          'b' ( inout highp float)
0:287      move second child to first child ( temp highp float)
0:287        'b' ( inout highp float)
0:287        Test condition and select ( temp highp float)
0:287          Condition
0:287          'condition' ( in bool)
0:287          true case
0:287          'a' ( inout highp float)
0:287          false case
0:287          'b' ( inout highp float)
0:288      move second child to first child ( temp highp float)
0:288        'a' ( inout highp float)
0:288        Test condition and select ( temp highp float)
0:288          Condition
0:288          'condition' ( in bool)
0:288          true case
0:288          'Temp' ( temp highp float)
0:288          false case
0:288          'a' ( inout highp float)
0:291  Function Definition: CheckRayTriangleCollision(struct-CollisionInfo-vf3-f1-vf3-f1-struct-Material-vf3-f1-f1-f1-f1-f11-struct-LightProperties-vf31-u1-b1-b11;struct-Ray-vf3-vf31;vf3;vf3;vf3; ( global void)
0:291    Function Parameters: 
0:291      'hitInfo' ( inout structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:291      'ray' ( in structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:291      'A' ( in highp 3-component vector of float)
0:291      'B' ( in highp 3-component vector of float)
0:291      'C' ( in highp 3-component vector of float)
0:293    Sequence
0:293      move second child to first child ( temp bool)
0:293        HitOccured: direct index for structure ( global bool)
0:293          'hitInfo' ( inout structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:293          Constant:
0:293            7 (const int)
0:293        Constant:
0:293          false (const bool)
0:295      Sequence
0:295        move second child to first child ( temp highp 3-component vector of float)
0:295          'Edge1' ( temp highp 3-component vector of float)
0:295          subtract ( temp highp 3-component vector of float)
0:295            'B' ( in highp 3-component vector of float)
0:295            'A' ( in highp 3-component vector of float)
0:296      Sequence
0:296        move second child to first child ( temp highp 3-component vector of float)
0:296          'Edge2' ( temp highp 3-component vector of float)
0:296          subtract ( temp highp 3-component vector of float)
0:296            'C' ( in highp 3-component vector of float)
0:296            'B' ( in highp 3-component vector of float)
0:297      Sequence
0:297        move second child to first child ( temp highp 3-component vector of float)
0:297          'Edge3' ( temp highp 3-component vector of float)
0:297          subtract ( temp highp 3-component vector of float)
0:297            'A' ( in highp 3-component vector of float)
0:297            'C' ( in highp 3-component vector of float)
0:299      Sequence
0:299        move second child to first child ( temp highp 3-component vector of float)
0:299          'Normal' ( temp highp 3-component vector of float)
0:299          normalize ( global highp 3-component vector of float)
0:299            cross-product ( global highp 3-component vector of float)
0:299              'Edge1' ( temp highp 3-component vector of float)
0:299              'Edge2' ( temp highp 3-component vector of float)
0:301      Sequence
0:301        move second child to first child ( temp highp float)
0:301          'Determinant' ( temp highp float)
0:301          dot-product ( global highp float)
0:301            'Normal' ( temp highp 3-component vector of float)
0:301            Direction: direct index for structure ( global highp 3-component vector of float)
0:301              'ray' ( in structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:301              Constant:
0:301                1 (const int)
0:303      Sequence
0:303        move second child to first child ( temp highp float)
0:303          'Alpha' ( temp highp float)
0:303          divide ( temp highp float)
0:303            dot-product ( global highp float)
0:303              'Normal' ( temp highp 3-component vector of float)
0:303              subtract ( temp highp 3-component vector of float)
0:303                'A' ( in highp 3-component vector of float)
0:303                Origin: direct index for structure ( global highp 3-component vector of float)
0:303                  'ray' ( in structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:303                  Constant:
0:303                    0 (const int)
0:303            'Determinant' ( temp highp float)
0:305      Sequence
0:305        move second child to first child ( temp highp 3-component vector of float)
0:305          'PlaneHitPoint' ( temp highp 3-component vector of float)
0:305          Function Call: GetPoint(struct-Ray-vf3-vf31;f1; ( global highp 3-component vector of float)
0:305            'ray' ( in structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:305            'Alpha' ( temp highp float)
0:307      Sequence
0:307        move second child to first child ( temp highp 3-component vector of float)
0:307          'Cross1' ( temp highp 3-component vector of float)
0:307          cross-product ( global highp 3-component vector of float)
0:307            'Edge1' ( temp highp 3-component vector of float)
0:307            subtract ( temp highp 3-component vector of float)
0:307              'PlaneHitPoint' ( temp highp 3-component vector of float)
0:307              'A' ( in highp 3-component vector of float)
0:308      Sequence
0:308        move second child to first child ( temp highp 3-component vector of float)
0:308          'Cross2' ( temp highp 3-component vector of float)
0:308          cross-product ( global highp 3-component vector of float)
0:308            'Edge2' ( temp highp 3-component vector of float)
0:308            subtract ( temp highp 3-component vector of float)
0:308              'PlaneHitPoint' ( temp highp 3-component vector of float)
0:308              'B' ( in highp 3-component vector of float)
0:309      Sequence
0:309        move second child to first child ( temp highp 3-component vector of float)
0:309          'Cross3' ( temp highp 3-component vector of float)
0:309          cross-product ( global highp 3-component vector of float)
0:309            'Edge3' ( temp highp 3-component vector of float)
0:309            subtract ( temp highp 3-component vector of float)
0:309              'PlaneHitPoint' ( temp highp 3-component vector of float)
0:309              'C' ( in highp 3-component vector of float)
0:311      Sequence
0:311        move second child to first child ( temp highp float)
0:311          'b1' ( temp highp float)
0:311          dot-product ( global highp float)
0:311            'Cross1' ( temp highp 3-component vector of float)
0:311            'Normal' ( temp highp 3-component vector of float)
0:312      Sequence
0:312        move second child to first child ( temp highp float)
0:312          'b2' ( temp highp float)
0:312          dot-product ( global highp float)
0:312            'Cross2' ( temp highp 3-component vector of float)
0:312            'Normal' ( temp highp 3-component vector of float)
0:313      Sequence
0:313        move second child to first child ( temp highp float)
0:313          'b3' ( temp highp float)
0:313          dot-product ( global highp float)
0:313            'Cross3' ( temp highp 3-component vector of float)
0:313            'Normal' ( temp highp 3-component vector of float)
0:315      move second child to first child ( temp highp 3-component vector of float)
0:315        IntersectionPoint: direct index for structure ( global highp 3-component vector of float)
0:315          'hitInfo' ( inout structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:315          Constant:
0:315            2 (const int)
0:315        'PlaneHitPoint' ( temp highp 3-component vector of float)
0:316      move second child to first child ( temp highp 3-component vector of float)
0:316        Normal: direct index for structure ( global highp 3-component vector of float)
0:316          'hitInfo' ( inout structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:316          Constant:
0:316            0 (const int)
0:316        'Normal' ( temp highp 3-component vector of float)
0:317      move second child to first child ( temp highp float)
0:317        RayDis: direct index for structure ( global highp float)
0:317          'hitInfo' ( inout structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:317          Constant:
0:317            1 (const int)
0:317        'Alpha' ( temp highp float)
0:318      move second child to first child ( temp bool)
0:318        HitOccured: direct index for structure ( global bool)
0:318          'hitInfo' ( inout structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:318          Constant:
0:318            7 (const int)
0:319        logical-and ( temp bool)
0:318          logical-and ( temp bool)
0:318            logical-and ( temp bool)
0:318              logical-and ( temp bool)
0:318                Compare Greater Than or Equal ( temp bool)
0:318                  'b1' ( temp highp float)
0:318                  Constant:
0:318                    0.000000
0:318                Compare Greater Than or Equal ( temp bool)
0:318                  'b2' ( temp highp float)
0:318                  Constant:
0:318                    0.000000
0:318              Compare Greater Than or Equal ( temp bool)
0:318                'b3' ( temp highp float)
0:318                Constant:
0:318                  0.000000
0:319            Compare Greater Than ( temp bool)
0:319              'Alpha' ( temp highp float)
0:319              Constant:
0:319                0.000010
0:319          Compare Greater Than ( temp bool)
0:319            Absolute value ( global highp float)
0:319              'Determinant' ( temp highp float)
0:319            Constant:
0:319              0.000010
0:321      move second child to first child ( temp highp float)
0:321        NormalInverted: direct index for structure ( global highp float)
0:321          'hitInfo' ( inout structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:321          Constant:
0:321            3 (const int)
0:321        Test condition and select ( temp highp float)
0:321          Condition
0:321          Compare Less Than ( temp bool)
0:321            dot-product ( global highp float)
0:321              'Normal' ( temp highp 3-component vector of float)
0:321              Direction: direct index for structure ( global highp 3-component vector of float)
0:321                'ray' ( in structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:321                Constant:
0:321                  1 (const int)
0:321            Constant:
0:321              0.000000
0:321          true case
0:321          Constant:
0:321            1.000000
0:321          false case
0:321          Constant:
0:321            -1.000000
0:322      vector scale second child into first child ( temp highp 3-component vector of float)
0:322        Normal: direct index for structure ( global highp 3-component vector of float)
0:322          'hitInfo' ( inout structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:322          Constant:
0:322            0 (const int)
0:322        NormalInverted: direct index for structure ( global highp float)
0:322          'hitInfo' ( inout structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:322          Constant:
0:322            3 (const int)
0:326  Function Definition: CheckRayAABB_Collision(struct-AABB_CollisionInfo-b1-f11;struct-Ray-vf3-vf31;vf3;vf3; ( global void)
0:326    Function Parameters: 
0:326      'hitInfo' ( inout structure{ global bool HitOccured,  global highp float RayDis})
0:326      'ray' ( in structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:326      'minCorner' ( in highp 3-component vector of float)
0:326      'maxCorner' ( in highp 3-component vector of float)
0:328    Sequence
0:328      move second child to first child ( temp bool)
0:328        HitOccured: direct index for structure ( global bool)
0:328          'hitInfo' ( inout structure{ global bool HitOccured,  global highp float RayDis})
0:328          Constant:
0:328            0 (const int)
0:328        Constant:
0:328          false (const bool)
0:330      Sequence
0:330        move second child to first child ( temp highp float)
0:330          'tMin' ( temp highp float)
0:330          divide ( temp highp float)
0:330            subtract ( temp highp float)
0:330              direct index ( temp highp float)
0:330                'minCorner' ( in highp 3-component vector of float)
0:330                Constant:
0:330                  0 (const int)
0:330              direct index ( temp highp float)
0:330                Origin: direct index for structure ( global highp 3-component vector of float)
0:330                  'ray' ( in structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:330                  Constant:
0:330                    0 (const int)
0:330                Constant:
0:330                  0 (const int)
0:330            direct index ( temp highp float)
0:330              Direction: direct index for structure ( global highp 3-component vector of float)
0:330                'ray' ( in structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:330                Constant:
0:330                  1 (const int)
0:330              Constant:
0:330                0 (const int)
0:331      Sequence
0:331        move second child to first child ( temp highp float)
0:331          'tMax' ( temp highp float)
0:331          divide ( temp highp float)
0:331            subtract ( temp highp float)
0:331              direct index ( temp highp float)
0:331                'maxCorner' ( in highp 3-component vector of float)
0:331                Constant:
0:331                  0 (const int)
0:331              direct index ( temp highp float)
0:331                Origin: direct index for structure ( global highp 3-component vector of float)
0:331                  'ray' ( in structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:331                  Constant:
0:331                    0 (const int)
0:331                Constant:
0:331                  0 (const int)
0:331            direct index ( temp highp float)
0:331              Direction: direct index for structure ( global highp 3-component vector of float)
0:331                'ray' ( in structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:331                Constant:
0:331                  1 (const int)
0:331              Constant:
0:331                0 (const int)
0:333      Function Call: SwapWithCondition(f1;f1;b1; ( global void)
0:333        'tMin' ( temp highp float)
0:333        'tMax' ( temp highp float)
0:333        Compare Greater Than ( temp bool)
0:333          'tMin' ( temp highp float)
0:333          'tMax' ( temp highp float)
0:335      Sequence
0:335        move second child to first child ( temp highp float)
0:335          'tyMin' ( temp highp float)
0:335          divide ( temp highp float)
0:335            subtract ( temp highp float)
0:335              direct index ( temp highp float)
0:335                'minCorner' ( in highp 3-component vector of float)
0:335                Constant:
0:335                  1 (const int)
0:335              direct index ( temp highp float)
0:335                Origin: direct index for structure ( global highp 3-component vector of float)
0:335                  'ray' ( in structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:335                  Constant:
0:335                    0 (const int)
0:335                Constant:
0:335                  1 (const int)
0:335            direct index ( temp highp float)
0:335              Direction: direct index for structure ( global highp 3-component vector of float)
0:335                'ray' ( in structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:335                Constant:
0:335                  1 (const int)
0:335              Constant:
0:335                1 (const int)
0:336      Sequence
0:336        move second child to first child ( temp highp float)
0:336          'tyMax' ( temp highp float)
0:336          divide ( temp highp float)
0:336            subtract ( temp highp float)
0:336              direct index ( temp highp float)
0:336                'maxCorner' ( in highp 3-component vector of float)
0:336                Constant:
0:336                  1 (const int)
0:336              direct index ( temp highp float)
0:336                Origin: direct index for structure ( global highp 3-component vector of float)
0:336                  'ray' ( in structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:336                  Constant:
0:336                    0 (const int)
0:336                Constant:
0:336                  1 (const int)
0:336            direct index ( temp highp float)
0:336              Direction: direct index for structure ( global highp 3-component vector of float)
0:336                'ray' ( in structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:336                Constant:
0:336                  1 (const int)
0:336              Constant:
0:336                1 (const int)
0:338      Function Call: SwapWithCondition(f1;f1;b1; ( global void)
0:338        'tyMin' ( temp highp float)
0:338        'tyMax' ( temp highp float)
0:338        Compare Greater Than ( temp bool)
0:338          'tyMin' ( temp highp float)
0:338          'tyMax' ( temp highp float)
0:340      Sequence
0:340        move second child to first child ( temp highp float)
0:340          'txMin' ( temp highp float)
0:340          'tMin' ( temp highp float)
0:341      Sequence
0:341        move second child to first child ( temp highp float)
0:341          'txMax' ( temp highp float)
0:341          'tMax' ( temp highp float)
0:343      move second child to first child ( temp highp float)
0:343        'tMin' ( temp highp float)
0:343        max ( global highp float)
0:343          'tMin' ( temp highp float)
0:343          'tyMin' ( temp highp float)
0:344      move second child to first child ( temp highp float)
0:344        'tMax' ( temp highp float)
0:344        min ( global highp float)
0:344          'tMax' ( temp highp float)
0:344          'tyMax' ( temp highp float)
0:346      Sequence
0:346        move second child to first child ( temp highp float)
0:346          'tzMin' ( temp highp float)
0:346          divide ( temp highp float)
0:346            subtract ( temp highp float)
0:346              direct index ( temp highp float)
0:346                'minCorner' ( in highp 3-component vector of float)
0:346                Constant:
0:346                  2 (const int)
0:346              direct index ( temp highp float)
0:346                Origin: direct index for structure ( global highp 3-component vector of float)
0:346                  'ray' ( in structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:346                  Constant:
0:346                    0 (const int)
0:346                Constant:
0:346                  2 (const int)
0:346            direct index ( temp highp float)
0:346              Direction: direct index for structure ( global highp 3-component vector of float)
0:346                'ray' ( in structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:346                Constant:
0:346                  1 (const int)
0:346              Constant:
0:346                2 (const int)
0:347      Sequence
0:347        move second child to first child ( temp highp float)
0:347          'tzMax' ( temp highp float)
0:347          divide ( temp highp float)
0:347            subtract ( temp highp float)
0:347              direct index ( temp highp float)
0:347                'maxCorner' ( in highp 3-component vector of float)
0:347                Constant:
0:347                  2 (const int)
0:347              direct index ( temp highp float)
0:347                Origin: direct index for structure ( global highp 3-component vector of float)
0:347                  'ray' ( in structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:347                  Constant:
0:347                    0 (const int)
0:347                Constant:
0:347                  2 (const int)
0:347            direct index ( temp highp float)
0:347              Direction: direct index for structure ( global highp 3-component vector of float)
0:347                'ray' ( in structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:347                Constant:
0:347                  1 (const int)
0:347              Constant:
0:347                2 (const int)
0:349      Function Call: SwapWithCondition(f1;f1;b1; ( global void)
0:349        'tzMin' ( temp highp float)
0:349        'tzMax' ( temp highp float)
0:349        Compare Greater Than ( temp bool)
0:349          'tzMin' ( temp highp float)
0:349          'tzMax' ( temp highp float)
0:351      move second child to first child ( temp highp float)
0:351        'tMin' ( temp highp float)
0:351        max ( global highp float)
0:351          'tMin' ( temp highp float)
0:351          'tzMin' ( temp highp float)
0:352      move second child to first child ( temp highp float)
0:352        'tMax' ( temp highp float)
0:352        min ( global highp float)
0:352          'tMax' ( temp highp float)
0:352          'tzMax' ( temp highp float)
0:354      move second child to first child ( temp bool)
0:354        HitOccured: direct index for structure ( global bool)
0:354          'hitInfo' ( inout structure{ global bool HitOccured,  global highp float RayDis})
0:354          Constant:
0:354            0 (const int)
0:356        logical-and ( temp bool)
0:356          logical-and ( temp bool)
0:355            logical-and ( temp bool)
0:355              logical-and ( temp bool)
0:355                Compare Less Than ( temp bool)
0:355                  'tMin' ( temp highp float)
0:355                  'tzMax' ( temp highp float)
0:355                Compare Less Than ( temp bool)
0:355                  'tzMin' ( temp highp float)
0:355                  'tMax' ( temp highp float)
0:356              Compare Less Than ( temp bool)
0:356                'tMin' ( temp highp float)
0:356                'tyMax' ( temp highp float)
0:356            Compare Less Than ( temp bool)
0:356              'tyMin' ( temp highp float)
0:356              'tMax' ( temp highp float)
0:357          logical-and ( temp bool)
0:357            Compare Less Than ( temp bool)
0:357              'tMin' ( temp highp float)
0:357              'tMax' ( temp highp float)
0:357            Compare Greater Than ( temp bool)
0:357              'tMax' ( temp highp float)
0:357              Constant:
0:357                0.000000
0:359      move second child to first child ( temp highp float)
0:359        RayDis: direct index for structure ( global highp float)
0:359          'hitInfo' ( inout structure{ global bool HitOccured,  global highp float RayDis})
0:359          Constant:
0:359            1 (const int)
0:359        Test condition and select ( temp highp float)
0:359          Condition
0:359          Compare Greater Than ( temp bool)
0:359            'tMin' ( temp highp float)
0:359            Constant:
0:359              0.000000
0:359          true case
0:359          'tMin' ( temp highp float)
0:359          false case
0:359          'tMax' ( temp highp float)
0:362  Function Definition: FindCollisionNode(struct-CollisionInfo-vf3-f1-vf3-f1-struct-Material-vf3-f1-f1-f1-f1-f11-struct-LightProperties-vf31-u1-b1-b11;struct-Ray-vf3-vf31;u1; ( global bool)
0:362    Function Parameters: 
0:362      'ClosestHit' ( inout structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:362      'ray' ( in structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:362      'rootIndex' ( in highp uint)
0:364    Sequence
0:364      Sequence
0:364        move second child to first child ( temp bool)
0:364          'FoundCloser' ( temp bool)
0:364          Constant:
0:364            false (const bool)
0:391      Sequence
0:391        move second child to first child ( temp highp uint)
0:391          'StackPtr' ( temp highp uint)
0:391          Constant:
0:391            0 (const uint)
0:393      move second child to first child ( temp highp uint)
0:393        indirect index ( temp highp uint)
0:393          'NodeStackIndices' ( temp 64-element array of highp uint)
0:393          Post-Increment ( temp highp uint)
0:393            'StackPtr' ( temp highp uint)
0:393        'rootIndex' ( in highp uint)
0:395      Loop with condition tested first
0:395        Loop Condition
0:395        Compare Not Equal ( temp bool)
0:395          'StackPtr' ( temp highp uint)
0:395          Constant:
0:395            0 (const uint)
0:395        Loop Body
0:397        Sequence
0:397          Sequence
0:397            move second child to first child ( temp highp uint)
0:397              'CurrentIndex' ( temp highp uint)
0:397              indirect index ( temp highp uint)
0:397                'NodeStackIndices' ( temp 64-element array of highp uint)
0:397                Pre-Decrement ( temp highp uint)
0:397                  'StackPtr' ( temp highp uint)
0:400          Function Call: CheckRayAABB_Collision(struct-AABB_CollisionInfo-b1-f11;struct-Ray-vf3-vf31;vf3;vf3; ( global void)
0:399            'hitInfoAABB' ( temp structure{ global bool HitOccured,  global highp float RayDis})
0:399            'ray' ( in structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:400            MinBound: direct index for structure ( readonly global highp 3-component vector of float)
0:400              indirect index (layout( column_major std430 offset=0) readonly temp structure{ global highp 3-component vector of float MinBound,  global highp uint BeginIndex,  global highp 3-component vector of float MaxBound,  global highp uint EndIndex,  global highp uint FirstChildIndex,  global highp uint Padding,  global highp uint SecondChildIndex})
0:400                Nodes: direct index for structure (layout( column_major std430 offset=0) readonly buffer runtime-sized array of structure{ global highp 3-component vector of float MinBound,  global highp uint BeginIndex,  global highp 3-component vector of float MaxBound,  global highp uint EndIndex,  global highp uint FirstChildIndex,  global highp uint Padding,  global highp uint SecondChildIndex})
0:400                  'sNodeBuffer' (layout( set=1 binding=3 column_major std430) readonly buffer block{layout( column_major std430 offset=0) readonly buffer runtime-sized array of structure{ global highp 3-component vector of float MinBound,  global highp uint BeginIndex,  global highp 3-component vector of float MaxBound,  global highp uint EndIndex,  global highp uint FirstChildIndex,  global highp uint Padding,  global highp uint SecondChildIndex} Nodes})
0:400                  Constant:
0:400                    0 (const int)
0:400                'CurrentIndex' ( temp highp uint)
0:400              Constant:
0:400                0 (const int)
0:400            MaxBound: direct index for structure ( readonly global highp 3-component vector of float)
0:400              indirect index (layout( column_major std430 offset=0) readonly temp structure{ global highp 3-component vector of float MinBound,  global highp uint BeginIndex,  global highp 3-component vector of float MaxBound,  global highp uint EndIndex,  global highp uint FirstChildIndex,  global highp uint Padding,  global highp uint SecondChildIndex})
0:400                Nodes: direct index for structure (layout( column_major std430 offset=0) readonly buffer runtime-sized array of structure{ global highp 3-component vector of float MinBound,  global highp uint BeginIndex,  global highp 3-component vector of float MaxBound,  global highp uint EndIndex,  global highp uint FirstChildIndex,  global highp uint Padding,  global highp uint SecondChildIndex})
0:400                  'sNodeBuffer' (layout( set=1 binding=3 column_major std430) readonly buffer block{layout( column_major std430 offset=0) readonly buffer runtime-sized array of structure{ global highp 3-component vector of float MinBound,  global highp uint BeginIndex,  global highp 3-component vector of float MaxBound,  global highp uint EndIndex,  global highp uint FirstChildIndex,  global highp uint Padding,  global highp uint SecondChildIndex} Nodes})
0:400                  Constant:
0:400                    0 (const int)
0:400                'CurrentIndex' ( temp highp uint)
0:400              Constant:
0:400                2 (const int)
0:402          move second child to first child ( temp highp uint)
0:402            indirect index ( temp highp uint)
0:402              'NodeStackIndices' ( temp 64-element array of highp uint)
0:402              Post-Increment ( temp highp uint)
0:402                'StackPtr' ( temp highp uint)
0:402            FirstChildIndex: direct index for structure ( readonly global highp uint)
0:402              indirect index (layout( column_major std430 offset=0) readonly temp structure{ global highp 3-component vector of float MinBound,  global highp uint BeginIndex,  global highp 3-component vector of float MaxBound,  global highp uint EndIndex,  global highp uint FirstChildIndex,  global highp uint Padding,  global highp uint SecondChildIndex})
0:402                Nodes: direct index for structure (layout( column_major std430 offset=0) readonly buffer runtime-sized array of structure{ global highp 3-component vector of float MinBound,  global highp uint BeginIndex,  global highp 3-component vector of float MaxBound,  global highp uint EndIndex,  global highp uint FirstChildIndex,  global highp uint Padding,  global highp uint SecondChildIndex})
0:402                  'sNodeBuffer' (layout( set=1 binding=3 column_major std430) readonly buffer block{layout( column_major std430 offset=0) readonly buffer runtime-sized array of structure{ global highp 3-component vector of float MinBound,  global highp uint BeginIndex,  global highp 3-component vector of float MaxBound,  global highp uint EndIndex,  global highp uint FirstChildIndex,  global highp uint Padding,  global highp uint SecondChildIndex} Nodes})
0:402                  Constant:
0:402                    0 (const int)
0:402                'CurrentIndex' ( temp highp uint)
0:402              Constant:
0:402                4 (const int)
0:403          move second child to first child ( temp highp uint)
0:403            indirect index ( temp highp uint)
0:403              'NodeStackIndices' ( temp 64-element array of highp uint)
0:403              Post-Increment ( temp highp uint)
0:403                'StackPtr' ( temp highp uint)
0:403            SecondChildIndex: direct index for structure ( readonly global highp uint)
0:403              indirect index (layout( column_major std430 offset=0) readonly temp structure{ global highp 3-component vector of float MinBound,  global highp uint BeginIndex,  global highp 3-component vector of float MaxBound,  global highp uint EndIndex,  global highp uint FirstChildIndex,  global highp uint Padding,  global highp uint SecondChildIndex})
0:403                Nodes: direct index for structure (layout( column_major std430 offset=0) readonly buffer runtime-sized array of structure{ global highp 3-component vector of float MinBound,  global highp uint BeginIndex,  global highp 3-component vector of float MaxBound,  global highp uint EndIndex,  global highp uint FirstChildIndex,  global highp uint Padding,  global highp uint SecondChildIndex})
0:403                  'sNodeBuffer' (layout( set=1 binding=3 column_major std430) readonly buffer block{layout( column_major std430 offset=0) readonly buffer runtime-sized array of structure{ global highp 3-component vector of float MinBound,  global highp uint BeginIndex,  global highp 3-component vector of float MaxBound,  global highp uint EndIndex,  global highp uint FirstChildIndex,  global highp uint Padding,  global highp uint SecondChildIndex} Nodes})
0:403                  Constant:
0:403                    0 (const int)
0:403                'CurrentIndex' ( temp highp uint)
0:403              Constant:
0:403                6 (const int)
0:405          Sequence
0:405            move second child to first child ( temp bool)
0:405              'Revert' ( temp bool)
0:405              logical-or ( temp bool)
0:405                logical-or ( temp bool)
0:405                  Negate conditional ( temp bool)
0:405                    HitOccured: direct index for structure ( global bool)
0:405                      'hitInfoAABB' ( temp structure{ global bool HitOccured,  global highp float RayDis})
0:405                      Constant:
0:405                        0 (const int)
0:405                  Compare Greater Than ( temp bool)
0:405                    RayDis: direct index for structure ( global highp float)
0:405                      'hitInfoAABB' ( temp structure{ global bool HitOccured,  global highp float RayDis})
0:405                      Constant:
0:405                        1 (const int)
0:405                    RayDis: direct index for structure ( global highp float)
0:405                      'ClosestHit' ( inout structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:405                      Constant:
0:405                        1 (const int)
0:406                Compare Equal ( temp bool)
0:406                  FirstChildIndex: direct index for structure ( readonly global highp uint)
0:406                    indirect index (layout( column_major std430 offset=0) readonly temp structure{ global highp 3-component vector of float MinBound,  global highp uint BeginIndex,  global highp 3-component vector of float MaxBound,  global highp uint EndIndex,  global highp uint FirstChildIndex,  global highp uint Padding,  global highp uint SecondChildIndex})
0:406                      Nodes: direct index for structure (layout( column_major std430 offset=0) readonly buffer runtime-sized array of structure{ global highp 3-component vector of float MinBound,  global highp uint BeginIndex,  global highp 3-component vector of float MaxBound,  global highp uint EndIndex,  global highp uint FirstChildIndex,  global highp uint Padding,  global highp uint SecondChildIndex})
0:406                        'sNodeBuffer' (layout( set=1 binding=3 column_major std430) readonly buffer block{layout( column_major std430 offset=0) readonly buffer runtime-sized array of structure{ global highp 3-component vector of float MinBound,  global highp uint BeginIndex,  global highp 3-component vector of float MaxBound,  global highp uint EndIndex,  global highp uint FirstChildIndex,  global highp uint Padding,  global highp uint SecondChildIndex} Nodes})
0:406                        Constant:
0:406                          0 (const int)
0:406                      'CurrentIndex' ( temp highp uint)
0:406                    Constant:
0:406                      4 (const int)
0:406                  'rootIndex' ( in highp uint)
0:408          subtract second child into first child ( temp highp uint)
0:408            'StackPtr' ( temp highp uint)
0:408            Convert int to uint ( temp highp uint)
0:408              Test condition and select ( temp highp int)
0:408                Condition
0:408                'Revert' ( temp bool)
0:408                true case
0:408                Constant:
0:408                  2 (const int)
0:408                false case
0:408                Constant:
0:408                  0 (const int)
0:410          Test condition and select ( temp void)
0:410            Condition
0:410            logical-and ( temp bool)
0:410              Compare Equal ( temp bool)
0:410                FirstChildIndex: direct index for structure ( readonly global highp uint)
0:410                  indirect index (layout( column_major std430 offset=0) readonly temp structure{ global highp 3-component vector of float MinBound,  global highp uint BeginIndex,  global highp 3-component vector of float MaxBound,  global highp uint EndIndex,  global highp uint FirstChildIndex,  global highp uint Padding,  global highp uint SecondChildIndex})
0:410                    Nodes: direct index for structure (layout( column_major std430 offset=0) readonly buffer runtime-sized array of structure{ global highp 3-component vector of float MinBound,  global highp uint BeginIndex,  global highp 3-component vector of float MaxBound,  global highp uint EndIndex,  global highp uint FirstChildIndex,  global highp uint Padding,  global highp uint SecondChildIndex})
0:410                      'sNodeBuffer' (layout( set=1 binding=3 column_major std430) readonly buffer block{layout( column_major std430 offset=0) readonly buffer runtime-sized array of structure{ global highp 3-component vector of float MinBound,  global highp uint BeginIndex,  global highp 3-component vector of float MaxBound,  global highp uint EndIndex,  global highp uint FirstChildIndex,  global highp uint Padding,  global highp uint SecondChildIndex} Nodes})
0:410                      Constant:
0:410                        0 (const int)
0:410                    'CurrentIndex' ( temp highp uint)
0:410                  Constant:
0:410                    4 (const int)
0:410                'rootIndex' ( in highp uint)
0:410              HitOccured: direct index for structure ( global bool)
0:410                'hitInfoAABB' ( temp structure{ global bool HitOccured,  global highp float RayDis})
0:410                Constant:
0:410                  0 (const int)
0:410            true case
0:412            Sequence
0:412              Sequence
0:412                Sequence
0:412                  move second child to first child ( temp highp uint)
0:412                    'j' ( temp highp uint)
0:412                    BeginIndex: direct index for structure ( readonly global highp uint)
0:412                      indirect index (layout( column_major std430 offset=0) readonly temp structure{ global highp 3-component vector of float MinBound,  global highp uint BeginIndex,  global highp 3-component vector of float MaxBound,  global highp uint EndIndex,  global highp uint FirstChildIndex,  global highp uint Padding,  global highp uint SecondChildIndex})
0:412                        Nodes: direct index for structure (layout( column_major std430 offset=0) readonly buffer runtime-sized array of structure{ global highp 3-component vector of float MinBound,  global highp uint BeginIndex,  global highp 3-component vector of float MaxBound,  global highp uint EndIndex,  global highp uint FirstChildIndex,  global highp uint Padding,  global highp uint SecondChildIndex})
0:412                          'sNodeBuffer' (layout( set=1 binding=3 column_major std430) readonly buffer block{layout( column_major std430 offset=0) readonly buffer runtime-sized array of structure{ global highp 3-component vector of float MinBound,  global highp uint BeginIndex,  global highp 3-component vector of float MaxBound,  global highp uint EndIndex,  global highp uint FirstChildIndex,  global highp uint Padding,  global highp uint SecondChildIndex} Nodes})
0:412                          Constant:
0:412                            0 (const int)
0:412                        'CurrentIndex' ( temp highp uint)
0:412                      Constant:
0:412                        1 (const int)
0:412                Loop with condition tested first
0:412                  Loop Condition
0:413                  Compare Less Than ( temp bool)
0:413                    'j' ( temp highp uint)
0:413                    EndIndex: direct index for structure ( readonly global highp uint)
0:413                      indirect index (layout( column_major std430 offset=0) readonly temp structure{ global highp 3-component vector of float MinBound,  global highp uint BeginIndex,  global highp 3-component vector of float MaxBound,  global highp uint EndIndex,  global highp uint FirstChildIndex,  global highp uint Padding,  global highp uint SecondChildIndex})
0:413                        Nodes: direct index for structure (layout( column_major std430 offset=0) readonly buffer runtime-sized array of structure{ global highp 3-component vector of float MinBound,  global highp uint BeginIndex,  global highp 3-component vector of float MaxBound,  global highp uint EndIndex,  global highp uint FirstChildIndex,  global highp uint Padding,  global highp uint SecondChildIndex})
0:413                          'sNodeBuffer' (layout( set=1 binding=3 column_major std430) readonly buffer block{layout( column_major std430 offset=0) readonly buffer runtime-sized array of structure{ global highp 3-component vector of float MinBound,  global highp uint BeginIndex,  global highp 3-component vector of float MaxBound,  global highp uint EndIndex,  global highp uint FirstChildIndex,  global highp uint Padding,  global highp uint SecondChildIndex} Nodes})
0:413                          Constant:
0:413                            0 (const int)
0:413                        'CurrentIndex' ( temp highp uint)
0:413                      Constant:
0:413                        3 (const int)
0:412                  Loop Body
0:418                  Sequence
0:418                    Function Call: CheckRayTriangleCollision(struct-CollisionInfo-vf3-f1-vf3-f1-struct-Material-vf3-f1-f1-f1-f1-f11-struct-LightProperties-vf31-u1-b1-b11;struct-Ray-vf3-vf31;vf3;vf3;vf3; ( global void)
0:415                      'hitInfo' ( temp structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:415                      'ray' ( in structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:416                      indirect index (layout( column_major std430 offset=0) readonly temp highp 3-component vector of float)
0:416                        Positions: direct index for structure (layout( column_major std430 offset=0) readonly buffer runtime-sized array of highp 3-component vector of float)
0:416                          'sVertexBuffer' (layout( set=1 binding=1 column_major std430) readonly buffer block{layout( column_major std430 offset=0) readonly buffer runtime-sized array of highp 3-component vector of float Positions})
0:416                          Constant:
0:416                            0 (const int)
0:416                        direct index ( temp highp uint)
0:416                          indirect index (layout( column_major std430 offset=0) readonly temp highp 4-component vector of uint)
0:416                            Indices: direct index for structure (layout( column_major std430 offset=0) readonly buffer runtime-sized array of highp 4-component vector of uint)
0:416                              'sIndexBuffer' (layout( set=1 binding=2 column_major std430) readonly buffer block{layout( column_major std430 offset=0) readonly buffer runtime-sized array of highp 4-component vector of uint Indices})
0:416                              Constant:
0:416                                0 (const int)
0:416                            'j' ( temp highp uint)
0:416                          Constant:
0:416                            0 (const int)
0:417                      indirect index (layout( column_major std430 offset=0) readonly temp highp 3-component vector of float)
0:417                        Positions: direct index for structure (layout( column_major std430 offset=0) readonly buffer runtime-sized array of highp 3-component vector of float)
0:417                          'sVertexBuffer' (layout( set=1 binding=1 column_major std430) readonly buffer block{layout( column_major std430 offset=0) readonly buffer runtime-sized array of highp 3-component vector of float Positions})
0:417                          Constant:
0:417                            0 (const int)
0:417                        direct index ( temp highp uint)
0:417                          indirect index (layout( column_major std430 offset=0) readonly temp highp 4-component vector of uint)
0:417                            Indices: direct index for structure (layout( column_major std430 offset=0) readonly buffer runtime-sized array of highp 4-component vector of uint)
0:417                              'sIndexBuffer' (layout( set=1 binding=2 column_major std430) readonly buffer block{layout( column_major std430 offset=0) readonly buffer runtime-sized array of highp 4-component vector of uint Indices})
0:417                              Constant:
0:417                                0 (const int)
0:417                            'j' ( temp highp uint)
0:417                          Constant:
0:417                            1 (const int)
0:418                      indirect index (layout( column_major std430 offset=0) readonly temp highp 3-component vector of float)
0:418                        Positions: direct index for structure (layout( column_major std430 offset=0) readonly buffer runtime-sized array of highp 3-component vector of float)
0:418                          'sVertexBuffer' (layout( set=1 binding=1 column_major std430) readonly buffer block{layout( column_major std430 offset=0) readonly buffer runtime-sized array of highp 3-component vector of float Positions})
0:418                          Constant:
0:418                            0 (const int)
0:418                        direct index ( temp highp uint)
0:418                          indirect index (layout( column_major std430 offset=0) readonly temp highp 4-component vector of uint)
0:418                            Indices: direct index for structure (layout( column_major std430 offset=0) readonly buffer runtime-sized array of highp 4-component vector of uint)
0:418                              'sIndexBuffer' (layout( set=1 binding=2 column_major std430) readonly buffer block{layout( column_major std430 offset=0) readonly buffer runtime-sized array of highp 4-component vector of uint Indices})
0:418                              Constant:
0:418                                0 (const int)
0:418                            'j' ( temp highp uint)
0:418                          Constant:
0:418                            2 (const int)
0:420                    move second child to first child ( temp highp uint)
0:420                      PrimitiveID: direct index for structure ( global highp uint)
0:420                        'hitInfo' ( temp structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:420                        Constant:
0:420                          6 (const int)
0:420                      'j' ( temp highp uint)
0:422                    Sequence
0:422                      move second child to first child ( temp bool)
0:422                        'Replaced' ( temp bool)
0:422                        logical-and ( temp bool)
0:422                          HitOccured: direct index for structure ( global bool)
0:422                            'hitInfo' ( temp structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:422                            Constant:
0:422                              7 (const int)
0:423                          Compare Less Than ( temp bool)
0:423                            RayDis: direct index for structure ( global highp float)
0:423                              'hitInfo' ( temp structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:423                              Constant:
0:423                                1 (const int)
0:423                            RayDis: direct index for structure ( global highp float)
0:423                              'ClosestHit' ( inout structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:423                              Constant:
0:423                                1 (const int)
0:425                    move second child to first child ( temp bool)
0:425                      'FoundCloser' ( temp bool)
0:425                      logical-or ( temp bool)
0:425                        'FoundCloser' ( temp bool)
0:425                        'Replaced' ( temp bool)
0:427                    move second child to first child ( temp structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:427                      'ClosestHit' ( inout structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:427                      Test condition and select ( temp structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:427                        Condition
0:427                        'Replaced' ( temp bool)
0:427                        true case
0:427                        'hitInfo' ( temp structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:427                        false case
0:427                        'ClosestHit' ( inout structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:412                  Loop Terminal Expression
0:413                  Post-Increment ( temp highp uint)
0:413                    'j' ( temp highp uint)
0:433      Branch: Return with expression
0:433        'FoundCloser' ( temp bool)
0:436  Function Definition: TestRayMeshCollisions(struct-CollisionInfo-vf3-f1-vf3-f1-struct-Material-vf3-f1-f1-f1-f1-f11-struct-LightProperties-vf31-u1-b1-b11;struct-Ray-vf3-vf31; ( global void)
0:436    Function Parameters: 
0:436      'ClosestHit' ( inout structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:436      'ray' ( in structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:440    Sequence
0:440      Sequence
0:440        Sequence
0:440          move second child to first child ( temp highp uint)
0:440            'i' ( temp highp uint)
0:440            Constant:
0:440              0 (const uint)
0:440        Loop with condition tested first
0:440          Loop Condition
0:440          Compare Less Than ( temp bool)
0:440            'i' ( temp highp uint)
0:440            MeshCount: direct index for structure (layout( column_major std140 offset=24) uniform highp uint)
0:440              'uSceneInfo' (layout( set=1 binding=6 column_major std140) uniform block{layout( column_major std140 offset=0) uniform highp 2-component vector of int MinBound, layout( column_major std140 offset=8) uniform highp 2-component vector of int MaxBound, layout( column_major std140 offset=16) uniform highp 2-component vector of int ImageResolution, layout( column_major std140 offset=24) uniform highp uint MeshCount, layout( column_major std140 offset=28) uniform highp uint LightCount, layout( column_major std140 offset=32) uniform highp uint MaxBounceLimit, layout( column_major std140 offset=36) uniform highp uint PixelSamples, layout( column_major std140 offset=40) uniform highp uint RandomSeed, layout( column_major std140 offset=44) uniform highp uint ResetImage, layout( column_major std140 offset=48) uniform highp uint FrameCount})
0:440              Constant:
0:440                3 (const int)
0:440          Loop Body
0:442          Sequence
0:442            Sequence
0:442              move second child to first child ( temp bool)
0:442                'FoundCloser' ( temp bool)
0:442                Function Call: FindCollisionNode(struct-CollisionInfo-vf3-f1-vf3-f1-struct-Material-vf3-f1-f1-f1-f1-f11-struct-LightProperties-vf31-u1-b1-b11;struct-Ray-vf3-vf31;u1; ( global bool)
0:442                  'ClosestHit' ( inout structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:442                  'ray' ( in structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:442                  BeginIndex: direct index for structure ( readonly global highp uint)
0:442                    indirect index (layout( column_major std430 offset=0) readonly temp structure{ global highp uint BeginIndex,  global highp uint Padding,  global highp uint EndIndex, layout( column_major std430) global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} SurfaceMaterial})
0:442                      Infos: direct index for structure (layout( column_major std430 offset=0) readonly buffer runtime-sized array of structure{ global highp uint BeginIndex,  global highp uint Padding,  global highp uint EndIndex, layout( column_major std430) global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} SurfaceMaterial})
0:442                        'sMeshInfos' (layout( set=1 binding=4 column_major std430) readonly buffer block{layout( column_major std430 offset=0) readonly buffer runtime-sized array of structure{ global highp uint BeginIndex,  global highp uint Padding,  global highp uint EndIndex, layout( column_major std430) global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} SurfaceMaterial} Infos})
0:442                        Constant:
0:442                          0 (const int)
0:442                      'i' ( temp highp uint)
0:442                    Constant:
0:442                      0 (const int)
0:443            move second child to first child ( temp bool)
0:443              IsLightSrc: direct index for structure ( global bool)
0:443                'ClosestHit' ( inout structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:443                Constant:
0:443                  8 (const int)
0:443              logical-and ( temp bool)
0:443                IsLightSrc: direct index for structure ( global bool)
0:443                  'ClosestHit' ( inout structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:443                  Constant:
0:443                    8 (const int)
0:443                Negate conditional ( temp bool)
0:443                  'FoundCloser' ( temp bool)
0:444            move second child to first child ( temp structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex})
0:444              ObjectMaterial: direct index for structure ( global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex})
0:444                'ClosestHit' ( inout structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:444                Constant:
0:444                  4 (const int)
0:444              Test condition and select ( temp structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex})
0:444                Condition
0:444                'FoundCloser' ( temp bool)
0:444                true case
0:444                SurfaceMaterial: direct index for structure (layout( column_major std430) readonly global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex})
0:444                  indirect index (layout( column_major std430 offset=0) readonly temp structure{ global highp uint BeginIndex,  global highp uint Padding,  global highp uint EndIndex, layout( column_major std430) global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} SurfaceMaterial})
0:444                    Infos: direct index for structure (layout( column_major std430 offset=0) readonly buffer runtime-sized array of structure{ global highp uint BeginIndex,  global highp uint Padding,  global highp uint EndIndex, layout( column_major std430) global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} SurfaceMaterial})
0:444                      'sMeshInfos' (layout( set=1 binding=4 column_major std430) readonly buffer block{layout( column_major std430 offset=0) readonly buffer runtime-sized array of structure{ global highp uint BeginIndex,  global highp uint Padding,  global highp uint EndIndex, layout( column_major std430) global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} SurfaceMaterial} Infos})
0:444                      Constant:
0:444                        0 (const int)
0:444                    'i' ( temp highp uint)
0:444                  Constant:
0:444                    3 (const int)
0:444                false case
0:445                ObjectMaterial: direct index for structure ( global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex})
0:445                  'ClosestHit' ( inout structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:445                  Constant:
0:445                    4 (const int)
0:440          Loop Terminal Expression
0:440          Post-Increment ( temp highp uint)
0:440            'i' ( temp highp uint)
0:449  Function Definition: TestRayLightCollisions(struct-CollisionInfo-vf3-f1-vf3-f1-struct-Material-vf3-f1-f1-f1-f1-f11-struct-LightProperties-vf31-u1-b1-b11;struct-Ray-vf3-vf31; ( global void)
0:449    Function Parameters: 
0:449      'ClosestHit' ( inout structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:449      'ray' ( in structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:453    Sequence
0:453      Sequence
0:453        Sequence
0:453          move second child to first child ( temp highp uint)
0:453            'i' ( temp highp uint)
0:453            Constant:
0:453              0 (const uint)
0:453        Loop with condition tested first
0:453          Loop Condition
0:453          Compare Less Than ( temp bool)
0:453            'i' ( temp highp uint)
0:453            LightCount: direct index for structure (layout( column_major std140 offset=28) uniform highp uint)
0:453              'uSceneInfo' (layout( set=1 binding=6 column_major std140) uniform block{layout( column_major std140 offset=0) uniform highp 2-component vector of int MinBound, layout( column_major std140 offset=8) uniform highp 2-component vector of int MaxBound, layout( column_major std140 offset=16) uniform highp 2-component vector of int ImageResolution, layout( column_major std140 offset=24) uniform highp uint MeshCount, layout( column_major std140 offset=28) uniform highp uint LightCount, layout( column_major std140 offset=32) uniform highp uint MaxBounceLimit, layout( column_major std140 offset=36) uniform highp uint PixelSamples, layout( column_major std140 offset=40) uniform highp uint RandomSeed, layout( column_major std140 offset=44) uniform highp uint ResetImage, layout( column_major std140 offset=48) uniform highp uint FrameCount})
0:453              Constant:
0:453                4 (const int)
0:453          Loop Body
0:455          Sequence
0:455            Sequence
0:455              move second child to first child ( temp bool)
0:455                'FoundCloser' ( temp bool)
0:455                Function Call: FindCollisionNode(struct-CollisionInfo-vf3-f1-vf3-f1-struct-Material-vf3-f1-f1-f1-f1-f11-struct-LightProperties-vf31-u1-b1-b11;struct-Ray-vf3-vf31;u1; ( global bool)
0:455                  'ClosestHit' ( inout structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:455                  'ray' ( in structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:455                  BeginIndex: direct index for structure ( readonly global highp uint)
0:455                    indirect index (layout( column_major std430 offset=0) readonly temp structure{ global highp uint BeginIndex,  global highp uint Padding,  global highp uint EndIndex, layout( column_major std430) global structure{ global highp 3-component vector of float Color} Props})
0:455                      Infos: direct index for structure (layout( column_major std430 offset=0) readonly buffer runtime-sized array of structure{ global highp uint BeginIndex,  global highp uint Padding,  global highp uint EndIndex, layout( column_major std430) global structure{ global highp 3-component vector of float Color} Props})
0:455                        'sLightInfos' (layout( set=1 binding=5 column_major std430) readonly buffer block{layout( column_major std430 offset=0) readonly buffer runtime-sized array of structure{ global highp uint BeginIndex,  global highp uint Padding,  global highp uint EndIndex, layout( column_major std430) global structure{ global highp 3-component vector of float Color} Props} Infos})
0:455                        Constant:
0:455                          0 (const int)
0:455                      'i' ( temp highp uint)
0:455                    Constant:
0:455                      0 (const int)
0:456            move second child to first child ( temp bool)
0:456              IsLightSrc: direct index for structure ( global bool)
0:456                'ClosestHit' ( inout structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:456                Constant:
0:456                  8 (const int)
0:456              logical-or ( temp bool)
0:456                IsLightSrc: direct index for structure ( global bool)
0:456                  'ClosestHit' ( inout structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:456                  Constant:
0:456                    8 (const int)
0:456                'FoundCloser' ( temp bool)
0:457            move second child to first child ( temp structure{ global highp 3-component vector of float Color})
0:457              LightProps: direct index for structure ( global structure{ global highp 3-component vector of float Color})
0:457                'ClosestHit' ( inout structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:457                Constant:
0:457                  5 (const int)
0:457              Test condition and select ( temp structure{ global highp 3-component vector of float Color})
0:457                Condition
0:457                'FoundCloser' ( temp bool)
0:457                true case
0:457                Props: direct index for structure (layout( column_major std430) readonly global structure{ global highp 3-component vector of float Color})
0:457                  indirect index (layout( column_major std430 offset=0) readonly temp structure{ global highp uint BeginIndex,  global highp uint Padding,  global highp uint EndIndex, layout( column_major std430) global structure{ global highp 3-component vector of float Color} Props})
0:457                    Infos: direct index for structure (layout( column_major std430 offset=0) readonly buffer runtime-sized array of structure{ global highp uint BeginIndex,  global highp uint Padding,  global highp uint EndIndex, layout( column_major std430) global structure{ global highp 3-component vector of float Color} Props})
0:457                      'sLightInfos' (layout( set=1 binding=5 column_major std430) readonly buffer block{layout( column_major std430 offset=0) readonly buffer runtime-sized array of structure{ global highp uint BeginIndex,  global highp uint Padding,  global highp uint EndIndex, layout( column_major std430) global structure{ global highp 3-component vector of float Color} Props} Infos})
0:457                      Constant:
0:457                        0 (const int)
0:457                    'i' ( temp highp uint)
0:457                  Constant:
0:457                    3 (const int)
0:457                false case
0:457                LightProps: direct index for structure ( global structure{ global highp 3-component vector of float Color})
0:457                  'ClosestHit' ( inout structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:457                  Constant:
0:457                    5 (const int)
0:453          Loop Terminal Expression
0:453          Post-Increment ( temp highp uint)
0:453            'i' ( temp highp uint)
0:461  Function Definition: CheckForRayCollisions(struct-CollisionInfo-vf3-f1-vf3-f1-struct-Material-vf3-f1-f1-f1-f1-f11-struct-LightProperties-vf31-u1-b1-b11;struct-Ray-vf3-vf31; ( global void)
0:461    Function Parameters: 
0:461      'ClosestHit' ( inout structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:461      'ray' ( in structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:463    Sequence
0:463      move second child to first child ( temp bool)
0:463        HitOccured: direct index for structure ( global bool)
0:463          'ClosestHit' ( inout structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:463          Constant:
0:463            7 (const int)
0:463        Constant:
0:463          false (const bool)
0:464      move second child to first child ( temp highp float)
0:464        RayDis: direct index for structure ( global highp float)
0:464          'ClosestHit' ( inout structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:464          Constant:
0:464            1 (const int)
0:464        Constant:
0:464          3.4028235000000e+38
0:466      Function Call: TestRayLightCollisions(struct-CollisionInfo-vf3-f1-vf3-f1-struct-Material-vf3-f1-f1-f1-f1-f11-struct-LightProperties-vf31-u1-b1-b11;struct-Ray-vf3-vf31; ( global void)
0:466        'ClosestHit' ( inout structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:466        'ray' ( in structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:467      Function Call: TestRayMeshCollisions(struct-CollisionInfo-vf3-f1-vf3-f1-struct-Material-vf3-f1-f1-f1-f1-f11-struct-LightProperties-vf31-u1-b1-b11;struct-Ray-vf3-vf31; ( global void)
0:467        'ClosestHit' ( inout structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:467        'ray' ( in structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:497  Function Definition: ToneMap(vf3;f1; ( global highp 3-component vector of float)
0:497    Function Parameters: 
0:497      'color' ( in highp 3-component vector of float)
0:497      'exposure' ( in highp float)
0:499    Sequence
0:499      Branch: Return with expression
0:499        subtract ( temp highp 3-component vector of float)
0:499          Constant:
0:499            1.000000
0:499            1.000000
0:499            1.000000
0:499          exp ( global highp 3-component vector of float)
0:499            vector-scale ( temp highp 3-component vector of float)
0:499              Negate value ( temp highp 3-component vector of float)
0:499                'color' ( in highp 3-component vector of float)
0:499              'exposure' ( in highp float)
0:502  Function Definition: GammaCorrection(vf3; ( global highp 3-component vector of float)
0:502    Function Parameters: 
0:502      'color' ( in highp 3-component vector of float)
0:504    Sequence
0:504      Branch: Return with expression
0:504        pow ( global highp 3-component vector of float)
0:504          'color' ( in highp 3-component vector of float)
0:504          Constant:
0:504            0.454545
0:504            0.454545
0:504            0.454545
0:507  Function Definition: GammaCorrectionInv(vf3; ( global highp 3-component vector of float)
0:507    Function Parameters: 
0:507      'color' ( in highp 3-component vector of float)
0:509    Sequence
0:509      Branch: Return with expression
0:509        pow ( global highp 3-component vector of float)
0:509          'color' ( in highp 3-component vector of float)
0:509          Constant:
0:509            2.200000
0:509            2.200000
0:509            2.200000
0:512  Function Definition: RefractionJacobian(f1;f1;f1; ( global highp float)
0:512    Function Parameters: 
0:512      'IdotH' ( in highp float)
0:512      'VdotH' ( in highp float)
0:512      'RefractiveIndex' ( in highp float)
0:514    Sequence
0:514      Sequence
0:514        move second child to first child ( temp highp float)
0:514          'Num' ( temp highp float)
0:514          component-wise multiply ( temp highp float)
0:514            component-wise multiply ( temp highp float)
0:514              'RefractiveIndex' ( in highp float)
0:514              'RefractiveIndex' ( in highp float)
0:514            'VdotH' ( in highp float)
0:515      Sequence
0:515        move second child to first child ( temp highp float)
0:515          'Denom' ( temp highp float)
0:515          max ( global highp float)
0:515            add ( temp highp float)
0:515              'IdotH' ( in highp float)
0:515              component-wise multiply ( temp highp float)
0:515                'RefractiveIndex' ( in highp float)
0:515                'VdotH' ( in highp float)
0:515            Constant:
0:515              0.000100
0:517      Sequence
0:517        move second child to first child ( temp highp float)
0:517          'Value' ( temp highp float)
0:517          divide ( temp highp float)
0:517            'Num' ( temp highp float)
0:517            component-wise multiply ( temp highp float)
0:517              'Denom' ( temp highp float)
0:517              'Denom' ( temp highp float)
0:519      Branch: Return with expression
0:519        max ( global highp float)
0:519          'Value' ( temp highp float)
0:519          Constant:
0:519            0.000100
0:523  Function Definition: SampleCubeMap(vf3;f1; ( global highp 3-component vector of float)
0:523    Function Parameters: 
0:523      'Direction' ( in highp 3-component vector of float)
0:523      'Rotation' ( in highp float)
0:526    Sequence
0:526      Sequence
0:526        move second child to first child ( temp highp float)
0:526          'ArcRadius' ( temp highp float)
0:526          sqrt ( global highp float)
0:526            subtract ( temp highp float)
0:526              Constant:
0:526                1.000000
0:526              component-wise multiply ( temp highp float)
0:526                direct index ( temp highp float)
0:526                  'Direction' ( in highp 3-component vector of float)
0:526                  Constant:
0:526                    1 (const int)
0:526                direct index ( temp highp float)
0:526                  'Direction' ( in highp 3-component vector of float)
0:526                  Constant:
0:526                    1 (const int)
0:527      Sequence
0:527        move second child to first child ( temp highp float)
0:527          'Theta' ( temp highp float)
0:527          arc cosine ( global highp float)
0:527            direct index ( temp highp float)
0:527              'Direction' ( in highp 3-component vector of float)
0:527              Constant:
0:527                1 (const int)
0:528      Sequence
0:528        move second child to first child ( temp highp float)
0:528          'Phi' ( temp highp float)
0:528          component-wise multiply ( temp highp float)
0:528            Sign ( global highp float)
0:528              direct index ( temp highp float)
0:528                'Direction' ( in highp 3-component vector of float)
0:528                Constant:
0:528                  2 (const int)
0:528            arc cosine ( global highp float)
0:528              divide ( temp highp float)
0:528                direct index ( temp highp float)
0:528                  'Direction' ( in highp 3-component vector of float)
0:528                  Constant:
0:528                    0 (const int)
0:528                'ArcRadius' ( temp highp float)
0:531      Sequence
0:531        move second child to first child ( temp highp float)
0:531          'u' ( temp highp float)
0:531          divide ( temp highp float)
0:531            add ( temp highp float)
0:531              add ( temp highp float)
0:531                'Phi' ( temp highp float)
0:531                'Rotation' ( in highp float)
0:531              Constant:
0:531                3.141593
0:531            Constant:
0:531              6.283185
0:532      Sequence
0:532        move second child to first child ( temp highp float)
0:532          'v' ( temp highp float)
0:532          divide ( temp highp float)
0:532            'Theta' ( temp highp float)
0:532            Constant:
0:532              3.141593
0:534      subtract second child into first child ( temp highp float)
0:534        'u' ( temp highp float)
0:534        Convert int to float ( temp highp float)
0:534          Convert float to int ( temp highp int)
0:534            'u' ( temp highp float)
0:536      Sequence
0:536        move second child to first child ( temp highp 3-component vector of float)
0:536          'ImageColor' ( temp highp 3-component vector of float)
0:536          vector swizzle ( temp highp 3-component vector of float)
0:536            texture ( global highp 4-component vector of float)
0:536              'uCubeMap' (layout( set=1 binding=7) uniform highp sampler2D)
0:536              Construct vec2 ( temp highp 2-component vector of float)
0:536                'u' ( temp highp float)
0:536                'v' ( temp highp float)
0:536            Sequence
0:536              Constant:
0:536                0 (const int)
0:536              Constant:
0:536                1 (const int)
0:536              Constant:
0:536                2 (const int)
0:538      Branch: Return with expression
0:538        Function Call: GammaCorrectionInv(vf3; ( global highp 3-component vector of float)
0:538          'ImageColor' ( temp highp 3-component vector of float)
0:543  Function Definition: BlinnPhongBRDF(vf3;vf3;vf3;struct-Material-vf3-f1-f1-f1-f1-f11; ( global highp 3-component vector of float)
0:543    Function Parameters: 
0:543      'L' ( in highp 3-component vector of float)
0:543      'V' ( in highp 3-component vector of float)
0:543      'N' ( in highp 3-component vector of float)
0:543      'SurfaceProps' ( in structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex})
0:545    Sequence
0:545      Sequence
0:545        move second child to first child ( temp highp 3-component vector of float)
0:545          'H' ( temp highp 3-component vector of float)
0:545          normalize ( global highp 3-component vector of float)
0:545            add ( temp highp 3-component vector of float)
0:545              'L' ( in highp 3-component vector of float)
0:545              'V' ( in highp 3-component vector of float)
0:547      Sequence
0:547        move second child to first child ( temp highp float)
0:547          'NdotH' ( temp highp float)
0:547          dot-product ( global highp float)
0:547            'N' ( in highp 3-component vector of float)
0:547            'H' ( temp highp 3-component vector of float)
0:548      Sequence
0:548        move second child to first child ( temp highp float)
0:548          'NdotL' ( temp highp float)
0:548          dot-product ( global highp float)
0:548            'N' ( in highp 3-component vector of float)
0:548            'L' ( in highp 3-component vector of float)
0:550      Sequence
0:550        move second child to first child ( temp highp float)
0:550          'Shininess' ( temp highp float)
0:550          component-wise multiply ( temp highp float)
0:550            Constant:
0:550              512.000000
0:550            subtract ( temp highp float)
0:550              Constant:
0:550                1.000000
0:550              Roughness: direct index for structure ( global highp float)
0:550                'SurfaceProps' ( in structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex})
0:550                Constant:
0:550                  2 (const int)
0:552      Sequence
0:552        move second child to first child ( temp highp float)
0:552          'RefractiveIndex' ( temp highp float)
0:552          RefractiveIndex: direct index for structure ( global highp float)
0:552            'SurfaceProps' ( in structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex})
0:552            Constant:
0:552              5 (const int)
0:554      Sequence
0:554        move second child to first child ( temp highp 3-component vector of float)
0:554          'Reflectivity' ( temp highp 3-component vector of float)
0:554          Construct vec3 ( temp highp 3-component vector of float)
0:554            divide ( temp highp float)
0:554              subtract ( temp highp float)
0:554                'RefractiveIndex' ( temp highp float)
0:554                Constant:
0:554                  1.000000
0:554              subtract ( temp highp float)
0:554                'RefractiveIndex' ( temp highp float)
0:554                Constant:
0:554                  1.000000
0:555      multiply second child into first child ( temp highp 3-component vector of float)
0:555        'Reflectivity' ( temp highp 3-component vector of float)
0:555        'Reflectivity' ( temp highp 3-component vector of float)
0:557      Sequence
0:557        move second child to first child ( temp highp 3-component vector of float)
0:557          'DiffuseAmplitude' ( temp highp 3-component vector of float)
0:557          subtract ( temp highp 3-component vector of float)
0:557            Constant:
0:557              1.000000
0:557              1.000000
0:557              1.000000
0:557            'Reflectivity' ( temp highp 3-component vector of float)
0:558      move second child to first child ( temp highp 3-component vector of float)
0:558        'DiffuseAmplitude' ( temp highp 3-component vector of float)
0:558        max ( global highp 3-component vector of float)
0:558          Constant:
0:558            0.000000
0:558            0.000000
0:558            0.000000
0:558          'DiffuseAmplitude' ( temp highp 3-component vector of float)
0:560      Sequence
0:560        move second child to first child ( temp highp float)
0:560          'Diffuse' ( temp highp float)
0:560          max ( global highp float)
0:560            'NdotL' ( temp highp float)
0:560            Constant:
0:560              0.000000
0:561      Sequence
0:561        move second child to first child ( temp highp float)
0:561          'Specular' ( temp highp float)
0:561          pow ( global highp float)
0:561            max ( global highp float)
0:561              'NdotH' ( temp highp float)
0:561              Constant:
0:561                0.000000
0:561            'Shininess' ( temp highp float)
0:563      Branch: Return with expression
0:563        add ( temp highp 3-component vector of float)
0:563          component-wise multiply ( temp highp 3-component vector of float)
0:563            vector-scale ( temp highp 3-component vector of float)
0:563              'Diffuse' ( temp highp float)
0:563              Albedo: direct index for structure ( global highp 3-component vector of float)
0:563                'SurfaceProps' ( in structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex})
0:563                Constant:
0:563                  0 (const int)
0:563            'DiffuseAmplitude' ( temp highp 3-component vector of float)
0:563          vector-scale ( temp highp 3-component vector of float)
0:563            'Specular' ( temp highp float)
0:563            'Reflectivity' ( temp highp 3-component vector of float)
0:569  Function Definition: FresnelSchlick(f1;vf3; ( global highp 3-component vector of float)
0:569    Function Parameters: 
0:569      'HdotV' ( in highp float)
0:569      'Reflectivity' ( in highp 3-component vector of float)
0:571    Sequence
0:571      Branch: Return with expression
0:571        add ( temp highp 3-component vector of float)
0:571          'Reflectivity' ( in highp 3-component vector of float)
0:571          vector-scale ( temp highp 3-component vector of float)
0:571            subtract ( temp highp 3-component vector of float)
0:571              Constant:
0:571                1.000000
0:571                1.000000
0:571                1.000000
0:571              'Reflectivity' ( in highp 3-component vector of float)
0:571            pow ( global highp float)
0:571              subtract ( temp highp float)
0:571                Constant:
0:571                  1.000000
0:571                'HdotV' ( in highp float)
0:571              Constant:
0:571                5.000000
0:574  Function Definition: GeometrySchlickGGX(f1;f1; ( global highp float)
0:574    Function Parameters: 
0:574      'DotProduct' ( in highp float)
0:574      'Roughness' ( in highp float)
0:576    Sequence
0:576      Sequence
0:576        move second child to first child ( temp highp float)
0:576          'RoughnessSq' ( temp highp float)
0:576          component-wise multiply ( temp highp float)
0:576            'Roughness' ( in highp float)
0:576            'Roughness' ( in highp float)
0:577      Sequence
0:577        move second child to first child ( temp highp float)
0:577          'DotProdClamped' ( temp highp float)
0:577          max ( global highp float)
0:577            'DotProduct' ( in highp float)
0:577            Constant:
0:577              0.000100
0:579      Branch: Return with expression
0:579        divide ( temp highp float)
0:579          component-wise multiply ( temp highp float)
0:579            Constant:
0:579              2.000000
0:579            'DotProdClamped' ( temp highp float)
0:579          add ( temp highp float)
0:579            'DotProdClamped' ( temp highp float)
0:579            sqrt ( global highp float)
0:579              add ( temp highp float)
0:579                'RoughnessSq' ( temp highp float)
0:580                component-wise multiply ( temp highp float)
0:580                  component-wise multiply ( temp highp float)
0:580                    subtract ( temp highp float)
0:580                      Constant:
0:580                        1.000000
0:580                      'RoughnessSq' ( temp highp float)
0:580                    'DotProdClamped' ( temp highp float)
0:580                  'DotProdClamped' ( temp highp float)
0:584  Function Definition: GeometrySmith(f1;f1;f1; ( global highp float)
0:584    Function Parameters: 
0:584      'NdotV' ( in highp float)
0:584      'NdotL' ( in highp float)
0:584      'Roughness' ( in highp float)
0:586    Sequence
0:586      Sequence
0:586        move second child to first child ( temp highp float)
0:586          'ggx2' ( temp highp float)
0:586          Function Call: GeometrySchlickGGX(f1;f1; ( global highp float)
0:586            'NdotV' ( in highp float)
0:586            'Roughness' ( in highp float)
0:587      Sequence
0:587        move second child to first child ( temp highp float)
0:587          'ggx1' ( temp highp float)
0:587          Function Call: GeometrySchlickGGX(f1;f1; ( global highp float)
0:587            'NdotL' ( in highp float)
0:587            'Roughness' ( in highp float)
0:588      Branch: Return with expression
0:588        component-wise multiply ( temp highp float)
0:588          'ggx1' ( temp highp float)
0:588          'ggx2' ( temp highp float)
0:592  Function Definition: DistributionGGX(f1;f1; ( global highp float)
0:592    Function Parameters: 
0:592      'NdotH' ( in highp float)
0:592      'Roughness' ( in highp float)
0:594    Sequence
0:594      move second child to first child ( temp highp float)
0:594        'NdotH' ( in highp float)
0:594        max ( global highp float)
0:594          'NdotH' ( in highp float)
0:594          Constant:
0:594            0.000100
0:596      Sequence
0:596        move second child to first child ( temp highp float)
0:596          'a2' ( temp highp float)
0:596          component-wise multiply ( temp highp float)
0:596            'Roughness' ( in highp float)
0:596            'Roughness' ( in highp float)
0:597      Sequence
0:597        move second child to first child ( temp highp float)
0:597          'NdotH2' ( temp highp float)
0:597          component-wise multiply ( temp highp float)
0:597            'NdotH' ( in highp float)
0:597            'NdotH' ( in highp float)
0:599      Sequence
0:599        move second child to first child ( temp highp float)
0:599          'num' ( temp highp float)
0:599          'a2' ( temp highp float)
0:600      Sequence
0:600        move second child to first child ( temp highp float)
0:600          'denom' ( temp highp float)
0:600          add ( temp highp float)
0:600            component-wise multiply ( temp highp float)
0:600              'NdotH2' ( temp highp float)
0:600              subtract ( temp highp float)
0:600                'a2' ( temp highp float)
0:600                Constant:
0:600                  1.000000
0:600            Constant:
0:600              1.000000
0:601      move second child to first child ( temp highp float)
0:601        'denom' ( temp highp float)
0:601        component-wise multiply ( temp highp float)
0:601          component-wise multiply ( temp highp float)
0:601            Constant:
0:601              3.141593
0:601            'denom' ( temp highp float)
0:601          'denom' ( temp highp float)
0:603      Sequence
0:603        move second child to first child ( temp highp float)
0:603          'Value' ( temp highp float)
0:603          divide ( temp highp float)
0:603            'num' ( temp highp float)
0:603            'denom' ( temp highp float)
0:607      Branch: Return with expression
0:607        clamp ( global highp float)
0:607          'Value' ( temp highp float)
0:607          Constant:
0:607            0.000100
0:607          Constant:
0:607            50000.000000
0:610  Function Definition: PDF_GGXVNDF_Reflection(vf3;vf3;vf3;f1; ( global highp float)
0:610    Function Parameters: 
0:610      'Normal' ( in highp 3-component vector of float)
0:610      'ViewDir' ( in highp 3-component vector of float)
0:610      'HalfVec' ( in highp 3-component vector of float)
0:610      'Roughness' ( in highp float)
0:612    Sequence
0:612      Sequence
0:612        move second child to first child ( temp highp float)
0:612          'NdotH' ( temp highp float)
0:612          max ( global highp float)
0:612            dot-product ( global highp float)
0:612              'Normal' ( in highp 3-component vector of float)
0:612              'HalfVec' ( in highp 3-component vector of float)
0:612            Constant:
0:612              0.000100
0:613      Sequence
0:613        move second child to first child ( temp highp float)
0:613          'VdotH' ( temp highp float)
0:613          max ( global highp float)
0:613            dot-product ( global highp float)
0:613              'ViewDir' ( in highp 3-component vector of float)
0:613              'HalfVec' ( in highp 3-component vector of float)
0:613            Constant:
0:613              0.000100
0:614      Sequence
0:614        move second child to first child ( temp highp float)
0:614          'NdotV' ( temp highp float)
0:614          max ( global highp float)
0:614            dot-product ( global highp float)
0:614              'Normal' ( in highp 3-component vector of float)
0:614              'ViewDir' ( in highp 3-component vector of float)
0:614            Constant:
0:614              0.000100
0:616      Sequence
0:616        move second child to first child ( temp highp float)
0:616          'G1' ( temp highp float)
0:616          Function Call: GeometrySchlickGGX(f1;f1; ( global highp float)
0:616            'NdotV' ( temp highp float)
0:616            'Roughness' ( in highp float)
0:617      Sequence
0:617        move second child to first child ( temp highp float)
0:617          'D_w' ( temp highp float)
0:617          Function Call: DistributionGGX(f1;f1; ( global highp float)
0:617            'NdotH' ( temp highp float)
0:617            'Roughness' ( in highp float)
0:619      Branch: Return with expression
0:619        divide ( temp highp float)
0:619          component-wise multiply ( temp highp float)
0:619            'G1' ( temp highp float)
0:619            'D_w' ( temp highp float)
0:619          component-wise multiply ( temp highp float)
0:619            Constant:
0:619              4.000000
0:619            'NdotV' ( temp highp float)
0:623  Function Definition: PDF_GGXVNDF_Refraction(vf3;vf3;vf3;vf3;f1;f1; ( global highp float)
0:623    Function Parameters: 
0:623      'Normal' ( in highp 3-component vector of float)
0:623      'ViewDir' ( in highp 3-component vector of float)
0:623      'HalfVec' ( in highp 3-component vector of float)
0:623      'IncidentDir' ( in highp 3-component vector of float)
0:623      'Roughness' ( in highp float)
0:623      'RefractiveIndex' ( in highp float)
0:625    Sequence
0:625      Sequence
0:625        move second child to first child ( temp highp float)
0:625          'NdotH' ( temp highp float)
0:625          dot-product ( global highp float)
0:625            'Normal' ( in highp 3-component vector of float)
0:625            'HalfVec' ( in highp 3-component vector of float)
0:626      Sequence
0:626        move second child to first child ( temp highp float)
0:626          'VdotH' ( temp highp float)
0:626          dot-product ( global highp float)
0:626            'ViewDir' ( in highp 3-component vector of float)
0:626            'HalfVec' ( in highp 3-component vector of float)
0:627      Sequence
0:627        move second child to first child ( temp highp float)
0:627          'NdotV' ( temp highp float)
0:627          dot-product ( global highp float)
0:627            'ViewDir' ( in highp 3-component vector of float)
0:627            'Normal' ( in highp 3-component vector of float)
0:628      Sequence
0:628        move second child to first child ( temp highp float)
0:628          'IdotH' ( temp highp float)
0:628          dot-product ( global highp float)
0:628            'IncidentDir' ( in highp 3-component vector of float)
0:628            'HalfVec' ( in highp 3-component vector of float)
0:630      Sequence
0:630        move second child to first child ( temp highp float)
0:630          'G1' ( temp highp float)
0:630          Function Call: GeometrySchlickGGX(f1;f1; ( global highp float)
0:630            Absolute value ( global highp float)
0:630              'NdotV' ( temp highp float)
0:630            'Roughness' ( in highp float)
0:631      Sequence
0:631        move second child to first child ( temp highp float)
0:631          'D_w' ( temp highp float)
0:631          Function Call: DistributionGGX(f1;f1; ( global highp float)
0:631            'NdotH' ( temp highp float)
0:631            'Roughness' ( in highp float)
0:633      Branch: Return with expression
0:633        divide ( temp highp float)
0:633          component-wise multiply ( temp highp float)
0:633            component-wise multiply ( temp highp float)
0:633              'G1' ( temp highp float)
0:633              'D_w' ( temp highp float)
0:633            max ( global highp float)
0:633              Absolute value ( global highp float)
0:633                'VdotH' ( temp highp float)
0:633              Constant:
0:633                0.000100
0:634          max ( global highp float)
0:634            Absolute value ( global highp float)
0:634              'NdotV' ( temp highp float)
0:634            Constant:
0:634              0.000100
0:637  Function Definition: CookTorranceBRDF(struct-BSDF_Input-vf3-f1-vf3-f1-vf3-f1-vf3-f11; ( global highp 3-component vector of float)
0:637    Function Parameters: 
0:637      'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:647    Sequence
0:647      Sequence
0:647        move second child to first child ( temp highp 3-component vector of float)
0:647          'ViewDir' ( temp highp 3-component vector of float)
0:647          reflect ( global highp 3-component vector of float)
0:647            Negate value ( temp highp 3-component vector of float)
0:647              LightDir: direct index for structure ( global highp 3-component vector of float)
0:647                'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:647                Constant:
0:647                  0 (const int)
0:647            HalfVec: direct index for structure ( global highp 3-component vector of float)
0:647              'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:647              Constant:
0:647                4 (const int)
0:649      Sequence
0:649        move second child to first child ( temp highp float)
0:649          'NdotH' ( temp highp float)
0:649          max ( global highp float)
0:649            dot-product ( global highp float)
0:649              Normal: direct index for structure ( global highp 3-component vector of float)
0:649                'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:649                Constant:
0:649                  2 (const int)
0:649              HalfVec: direct index for structure ( global highp 3-component vector of float)
0:649                'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:649                Constant:
0:649                  4 (const int)
0:649            Constant:
0:649              0.000100
0:650      Sequence
0:650        move second child to first child ( temp highp float)
0:650          'NdotV' ( temp highp float)
0:650          max ( global highp float)
0:650            dot-product ( global highp float)
0:650              Normal: direct index for structure ( global highp 3-component vector of float)
0:650                'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:650                Constant:
0:650                  2 (const int)
0:650              'ViewDir' ( temp highp 3-component vector of float)
0:650            Constant:
0:650              0.000100
0:651      Sequence
0:651        move second child to first child ( temp highp float)
0:651          'NdotL' ( temp highp float)
0:651          max ( global highp float)
0:651            dot-product ( global highp float)
0:651              Normal: direct index for structure ( global highp 3-component vector of float)
0:651                'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:651                Constant:
0:651                  2 (const int)
0:651              LightDir: direct index for structure ( global highp 3-component vector of float)
0:651                'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:651                Constant:
0:651                  0 (const int)
0:651            Constant:
0:651              0.000100
0:653      Sequence
0:653        move second child to first child ( temp highp 3-component vector of float)
0:653          'Reflectivity' ( temp highp 3-component vector of float)
0:653          Construct vec3 ( temp highp 3-component vector of float)
0:653            divide ( temp highp float)
0:653              subtract ( temp highp float)
0:653                RefractiveIndexRatio: direct index for structure ( global highp float)
0:653                  'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:653                  Constant:
0:653                    7 (const int)
0:653                Constant:
0:653                  1.000000
0:654              add ( temp highp float)
0:654                RefractiveIndexRatio: direct index for structure ( global highp float)
0:654                  'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:654                  Constant:
0:654                    7 (const int)
0:654                Constant:
0:654                  1.000000
0:656      multiply second child into first child ( temp highp 3-component vector of float)
0:656        'Reflectivity' ( temp highp 3-component vector of float)
0:656        'Reflectivity' ( temp highp 3-component vector of float)
0:658      move second child to first child ( temp highp 3-component vector of float)
0:658        'Reflectivity' ( temp highp 3-component vector of float)
0:658        mix ( global highp 3-component vector of float)
0:658          'Reflectivity' ( temp highp 3-component vector of float)
0:658          BaseColor: direct index for structure ( global highp 3-component vector of float)
0:658            'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:658            Constant:
0:658              6 (const int)
0:658          InterfaceMetallic: direct index for structure ( global highp float)
0:658            'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:658            Constant:
0:658              3 (const int)
0:660      Sequence
0:660        move second child to first child ( temp highp float)
0:660          'NDF' ( temp highp float)
0:660          Function Call: DistributionGGX(f1;f1; ( global highp float)
0:660            'NdotH' ( temp highp float)
0:660            InterfaceRoughness: direct index for structure ( global highp float)
0:660              'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:660              Constant:
0:660                1 (const int)
0:661      Sequence
0:661        move second child to first child ( temp highp float)
0:661          'G' ( temp highp float)
0:661          Function Call: GeometrySmith(f1;f1;f1; ( global highp float)
0:661            'NdotL' ( temp highp float)
0:661            'NdotV' ( temp highp float)
0:661            InterfaceRoughness: direct index for structure ( global highp float)
0:661              'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:661              Constant:
0:661                1 (const int)
0:662      Sequence
0:662        move second child to first child ( temp highp 3-component vector of float)
0:662          'F' ( temp highp 3-component vector of float)
0:662          Function Call: FresnelSchlick(f1;vf3; ( global highp 3-component vector of float)
0:662            'NdotH' ( temp highp float)
0:662            'Reflectivity' ( temp highp 3-component vector of float)
0:664      Sequence
0:664        move second child to first child ( temp highp 3-component vector of float)
0:664          'numerator' ( temp highp 3-component vector of float)
0:664          vector-scale ( temp highp 3-component vector of float)
0:664            component-wise multiply ( temp highp float)
0:664              'NDF' ( temp highp float)
0:664              'G' ( temp highp float)
0:664            'F' ( temp highp 3-component vector of float)
0:665      Sequence
0:665        move second child to first child ( temp highp float)
0:665          'denominator' ( temp highp float)
0:665          component-wise multiply ( temp highp float)
0:665            component-wise multiply ( temp highp float)
0:665              Constant:
0:665                4.000000
0:665              'NdotV' ( temp highp float)
0:665            'NdotL' ( temp highp float)
0:667      Sequence
0:667        move second child to first child ( temp highp 3-component vector of float)
0:667          'specular' ( temp highp 3-component vector of float)
0:667          divide ( temp highp 3-component vector of float)
0:667            'numerator' ( temp highp 3-component vector of float)
0:667            'denominator' ( temp highp float)
0:669      Sequence
0:669        move second child to first child ( temp highp 3-component vector of float)
0:669          'kS' ( temp highp 3-component vector of float)
0:669          'F' ( temp highp 3-component vector of float)
0:670      Sequence
0:670        move second child to first child ( temp highp 3-component vector of float)
0:670          'kD' ( temp highp 3-component vector of float)
0:670          Construct vec3 ( temp highp 3-component vector of float)
0:670            subtract ( temp highp float)
0:670              Constant:
0:670                1.000000
0:670              TransmissionWeight: direct index for structure ( global highp float)
0:670                'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:670                Constant:
0:670                  5 (const int)
0:671      multiply second child into first child ( temp highp 3-component vector of float)
0:671        'kD' ( temp highp 3-component vector of float)
0:671        component-wise multiply ( temp highp 3-component vector of float)
0:671          'kD' ( temp highp 3-component vector of float)
0:671          subtract ( temp highp 3-component vector of float)
0:671            Constant:
0:671              1.000000
0:671              1.000000
0:671              1.000000
0:671            'kS' ( temp highp 3-component vector of float)
0:672      vector scale second child into first child ( temp highp 3-component vector of float)
0:672        'kD' ( temp highp 3-component vector of float)
0:672        subtract ( temp highp float)
0:672          Constant:
0:672            1.000000
0:672          InterfaceMetallic: direct index for structure ( global highp float)
0:672            'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:672            Constant:
0:672              3 (const int)
0:674      Sequence
0:674        move second child to first child ( temp highp 3-component vector of float)
0:674          'Lo' ( temp highp 3-component vector of float)
0:674          vector-scale ( temp highp 3-component vector of float)
0:674            add ( temp highp 3-component vector of float)
0:674              divide ( temp highp 3-component vector of float)
0:674                component-wise multiply ( temp highp 3-component vector of float)
0:674                  'kD' ( temp highp 3-component vector of float)
0:674                  BaseColor: direct index for structure ( global highp 3-component vector of float)
0:674                    'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:674                    Constant:
0:674                      6 (const int)
0:674                Constant:
0:674                  3.141593
0:674              'specular' ( temp highp 3-component vector of float)
0:674            'NdotL' ( temp highp float)
0:676      Branch: Return with expression
0:676        'Lo' ( temp highp 3-component vector of float)
0:679  Function Definition: CookTorranceBTDF(struct-BSDF_Input-vf3-f1-vf3-f1-vf3-f1-vf3-f11; ( global highp 3-component vector of float)
0:679    Function Parameters: 
0:679      'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:686    Sequence
0:686      Sequence
0:686        move second child to first child ( temp highp float)
0:686          'RefractiveIndex' ( temp highp float)
0:686          RefractiveIndexRatio: direct index for structure ( global highp float)
0:686            'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:686            Constant:
0:686              7 (const int)
0:688      Sequence
0:688        move second child to first child ( temp highp 3-component vector of float)
0:688          'T' ( temp highp 3-component vector of float)
0:688          refract ( global highp 3-component vector of float)
0:688            Negate value ( temp highp 3-component vector of float)
0:688              LightDir: direct index for structure ( global highp 3-component vector of float)
0:688                'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:688                Constant:
0:688                  0 (const int)
0:688            Negate value ( temp highp 3-component vector of float)
0:688              HalfVec: direct index for structure ( global highp 3-component vector of float)
0:688                'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:688                Constant:
0:688                  4 (const int)
0:688            'RefractiveIndex' ( temp highp float)
0:690      Test condition and select ( temp void)
0:690        Condition
0:690        Compare Equal ( temp bool)
0:690          length ( global highp float)
0:690            'T' ( temp highp 3-component vector of float)
0:690          Constant:
0:690            0.000000
0:690        true case
0:691        Branch: Return with expression
0:691          Constant:
0:691            0.000000
0:691            0.000000
0:691            0.000000
0:693      move second child to first child ( temp highp 3-component vector of float)
0:693        'T' ( temp highp 3-component vector of float)
0:693        normalize ( global highp 3-component vector of float)
0:693          'T' ( temp highp 3-component vector of float)
0:695      Sequence
0:695        move second child to first child ( temp highp float)
0:695          'NdotH' ( temp highp float)
0:695          max ( global highp float)
0:695            dot-product ( global highp float)
0:695              Normal: direct index for structure ( global highp 3-component vector of float)
0:695                'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:695                Constant:
0:695                  2 (const int)
0:695              HalfVec: direct index for structure ( global highp 3-component vector of float)
0:695                'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:695                Constant:
0:695                  4 (const int)
0:695            Constant:
0:695              0.000100
0:696      Sequence
0:696        move second child to first child ( temp highp float)
0:696          'NdotL' ( temp highp float)
0:696          max ( global highp float)
0:696            dot-product ( global highp float)
0:696              Negate value ( temp highp 3-component vector of float)
0:696                Normal: direct index for structure ( global highp 3-component vector of float)
0:696                  'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:696                  Constant:
0:696                    2 (const int)
0:696              LightDir: direct index for structure ( global highp 3-component vector of float)
0:696                'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:696                Constant:
0:696                  0 (const int)
0:696            Constant:
0:696              0.000100
0:697      Sequence
0:697        move second child to first child ( temp highp float)
0:697          'NdotT' ( temp highp float)
0:697          dot-product ( global highp float)
0:697            Negate value ( temp highp 3-component vector of float)
0:697              Normal: direct index for structure ( global highp 3-component vector of float)
0:697                'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:697                Constant:
0:697                  2 (const int)
0:697            'T' ( temp highp 3-component vector of float)
0:699      Sequence
0:699        move second child to first child ( temp highp float)
0:699          'LdotH' ( temp highp float)
0:699          max ( global highp float)
0:699            dot-product ( global highp float)
0:699              LightDir: direct index for structure ( global highp 3-component vector of float)
0:699                'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:699                Constant:
0:699                  0 (const int)
0:699              Negate value ( temp highp 3-component vector of float)
0:699                HalfVec: direct index for structure ( global highp 3-component vector of float)
0:699                  'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:699                  Constant:
0:699                    4 (const int)
0:699            Constant:
0:699              0.000100
0:700      Sequence
0:700        move second child to first child ( temp highp float)
0:700          'TdotH' ( temp highp float)
0:700          dot-product ( global highp float)
0:700            'T' ( temp highp 3-component vector of float)
0:700            Negate value ( temp highp 3-component vector of float)
0:700              HalfVec: direct index for structure ( global highp 3-component vector of float)
0:700                'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:700                Constant:
0:700                  4 (const int)
0:702      Sequence
0:702        move second child to first child ( temp highp 3-component vector of float)
0:702          'Reflectivity' ( temp highp 3-component vector of float)
0:702          Construct vec3 ( temp highp 3-component vector of float)
0:702            divide ( temp highp float)
0:702              subtract ( temp highp float)
0:702                'RefractiveIndex' ( temp highp float)
0:702                Constant:
0:702                  1.000000
0:702              add ( temp highp float)
0:702                'RefractiveIndex' ( temp highp float)
0:702                Constant:
0:702                  1.000000
0:703      multiply second child into first child ( temp highp 3-component vector of float)
0:703        'Reflectivity' ( temp highp 3-component vector of float)
0:703        'Reflectivity' ( temp highp 3-component vector of float)
0:705      move second child to first child ( temp highp 3-component vector of float)
0:705        'Reflectivity' ( temp highp 3-component vector of float)
0:705        mix ( global highp 3-component vector of float)
0:705          'Reflectivity' ( temp highp 3-component vector of float)
0:705          BaseColor: direct index for structure ( global highp 3-component vector of float)
0:705            'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:705            Constant:
0:705              6 (const int)
0:705          InterfaceMetallic: direct index for structure ( global highp float)
0:705            'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:705            Constant:
0:705              3 (const int)
0:707      Sequence
0:707        move second child to first child ( temp highp float)
0:707          'NDF' ( temp highp float)
0:707          Function Call: DistributionGGX(f1;f1; ( global highp float)
0:707            'NdotH' ( temp highp float)
0:707            InterfaceRoughness: direct index for structure ( global highp float)
0:707              'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:707              Constant:
0:707                1 (const int)
0:708      Sequence
0:708        move second child to first child ( temp highp float)
0:708          'G2' ( temp highp float)
0:708          Function Call: GeometrySmith(f1;f1;f1; ( global highp float)
0:708            Absolute value ( global highp float)
0:708              'NdotT' ( temp highp float)
0:708            'NdotL' ( temp highp float)
0:708            InterfaceRoughness: direct index for structure ( global highp float)
0:708              'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:708              Constant:
0:708                1 (const int)
0:710      Sequence
0:710        move second child to first child ( temp highp 3-component vector of float)
0:710          'F' ( temp highp 3-component vector of float)
0:710          Function Call: FresnelSchlick(f1;vf3; ( global highp 3-component vector of float)
0:710            'NdotH' ( temp highp float)
0:710            'Reflectivity' ( temp highp 3-component vector of float)
0:712      Sequence
0:712        move second child to first child ( temp highp 3-component vector of float)
0:712          'R' ( temp highp 3-component vector of float)
0:712          vector-scale ( temp highp 3-component vector of float)
0:712            subtract ( temp highp 3-component vector of float)
0:712              Constant:
0:712                1.000000
0:712                1.000000
0:712                1.000000
0:712              'F' ( temp highp 3-component vector of float)
0:712            TransmissionWeight: direct index for structure ( global highp float)
0:712              'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:712              Constant:
0:712                5 (const int)
0:714      vector scale second child into first child ( temp highp 3-component vector of float)
0:714        'R' ( temp highp 3-component vector of float)
0:714        subtract ( temp highp float)
0:714          Constant:
0:714            1.000000
0:714          InterfaceMetallic: direct index for structure ( global highp float)
0:714            'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:714            Constant:
0:714              3 (const int)
0:716      Sequence
0:716        move second child to first child ( temp highp 3-component vector of float)
0:716          'kD' ( temp highp 3-component vector of float)
0:716          'R' ( temp highp 3-component vector of float)
0:717      vector scale second child into first child ( temp highp 3-component vector of float)
0:717        'kD' ( temp highp 3-component vector of float)
0:717        subtract ( temp highp float)
0:717          Constant:
0:717            1.000000
0:717          TransmissionWeight: direct index for structure ( global highp float)
0:717            'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:717            Constant:
0:717              5 (const int)
0:719      Sequence
0:719        move second child to first child ( temp highp 3-component vector of float)
0:719          'numerator' ( temp highp 3-component vector of float)
0:719          vector-scale ( temp highp 3-component vector of float)
0:719            component-wise multiply ( temp highp float)
0:719              component-wise multiply ( temp highp float)
0:719                'LdotH' ( temp highp float)
0:719                'NDF' ( temp highp float)
0:719              'G2' ( temp highp float)
0:719            'R' ( temp highp 3-component vector of float)
0:720      Sequence
0:720        move second child to first child ( temp highp float)
0:720          'denominator' ( temp highp float)
0:720          component-wise multiply ( temp highp float)
0:720            max ( global highp float)
0:720              Absolute value ( global highp float)
0:720                'NdotT' ( temp highp float)
0:720              Constant:
0:720                0.000100
0:720            'NdotL' ( temp highp float)
0:721      move second child to first child ( temp highp float)
0:721        'denominator' ( temp highp float)
0:721        'NdotL' ( temp highp float)
0:723      Sequence
0:723        move second child to first child ( temp highp 3-component vector of float)
0:723          'radiance' ( temp highp 3-component vector of float)
0:723          divide ( temp highp 3-component vector of float)
0:723            'numerator' ( temp highp 3-component vector of float)
0:723            'denominator' ( temp highp float)
0:725      Sequence
0:725        move second child to first child ( temp highp 3-component vector of float)
0:725          'Lo' ( temp highp 3-component vector of float)
0:725          vector-scale ( temp highp 3-component vector of float)
0:725            add ( temp highp 3-component vector of float)
0:725              divide ( temp highp 3-component vector of float)
0:725                component-wise multiply ( temp highp 3-component vector of float)
0:725                  'kD' ( temp highp 3-component vector of float)
0:725                  BaseColor: direct index for structure ( global highp 3-component vector of float)
0:725                    'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:725                    Constant:
0:725                      6 (const int)
0:725                Constant:
0:725                  3.141593
0:725              'radiance' ( temp highp 3-component vector of float)
0:725            'NdotL' ( temp highp float)
0:727      Test condition and select ( temp void)
0:727        Condition
0:727        Compare Equal ( temp bool)
0:727          'RefractiveIndex' ( temp highp float)
0:727          Constant:
0:727            1.000000
0:727        true case
0:728        Branch: Return with expression
0:728          Constant:
0:728            100.000000
0:728            0.000000
0:728            0.000000
0:730      Branch: Return with expression
0:730        'Lo' ( temp highp 3-component vector of float)
0:733  Function Definition: CookTorranceBSDF(struct-BSDF_Input-vf3-f1-vf3-f1-vf3-f1-vf3-f11;f1; ( global highp 3-component vector of float)
0:733    Function Parameters: 
0:733      'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:733      'alpha' ( in highp float)
0:735    Sequence
0:735      Branch: Return with expression
0:735        mix ( global highp 3-component vector of float)
0:735          Function Call: CookTorranceBRDF(struct-BSDF_Input-vf3-f1-vf3-f1-vf3-f1-vf3-f11; ( global highp 3-component vector of float)
0:735            'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:735          Function Call: CookTorranceBTDF(struct-BSDF_Input-vf3-f1-vf3-f1-vf3-f1-vf3-f11; ( global highp 3-component vector of float)
0:735            'bsdfInput' ( in structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:735          'alpha' ( in highp float)
0:1361  Function Definition: GetRandom(u1; ( global highp float)
0:1361    Function Parameters: 
0:1361      'state' ( inout highp uint)
0:1363    Sequence
0:1363      multiply second child into first child ( temp highp uint)
0:1363        'state' ( inout highp uint)
0:1363        add ( temp highp uint)
0:1363          component-wise multiply ( temp highp uint)
0:1363            'state' ( inout highp uint)
0:1363            Constant:
0:1363              747796405 (const uint)
0:1363          Constant:
0:1363            2891336453 (const uint)
0:1364      Sequence
0:1364        move second child to first child ( temp highp uint)
0:1364          'result' ( temp highp uint)
0:1364          component-wise multiply ( temp highp uint)
0:1364            exclusive-or ( temp highp uint)
0:1364              right-shift ( temp highp uint)
0:1364                'state' ( inout highp uint)
0:1364                add ( temp highp uint)
0:1364                  right-shift ( temp highp uint)
0:1364                    'state' ( inout highp uint)
0:1364                    Constant:
0:1364                      28 (const int)
0:1364                  Constant:
0:1364                    4 (const uint)
0:1364              'state' ( inout highp uint)
0:1364            Constant:
0:1364              277803737 (const uint)
0:1365      move second child to first child ( temp highp uint)
0:1365        'result' ( temp highp uint)
0:1365        exclusive-or ( temp highp uint)
0:1365          right-shift ( temp highp uint)
0:1365            'result' ( temp highp uint)
0:1365            Constant:
0:1365              22 (const int)
0:1365          'result' ( temp highp uint)
0:1366      Branch: Return with expression
0:1366        divide ( temp highp float)
0:1366          Convert uint to float ( temp highp float)
0:1366            'result' ( temp highp uint)
0:1366          Constant:
0:1366            4294967295.000000
0:1370  Function Definition: SampleUnitVecUniform(vf3;u1; ( global highp 3-component vector of float)
0:1370    Function Parameters: 
0:1370      'Normal' ( in highp 3-component vector of float)
0:1370      'state' ( inout highp uint)
0:1372    Sequence
0:1372      Sequence
0:1372        move second child to first child ( temp highp float)
0:1372          'u' ( temp highp float)
0:1372          Function Call: GetRandom(u1; ( global highp float)
0:1372            'state' ( inout highp uint)
0:1373      Sequence
0:1373        move second child to first child ( temp highp float)
0:1373          'v' ( temp highp float)
0:1373          Function Call: GetRandom(u1; ( global highp float)
0:1373            'state' ( inout highp uint)
0:1374      Sequence
0:1374        move second child to first child ( temp highp float)
0:1374          'phi' ( temp highp float)
0:1374          component-wise multiply ( temp highp float)
0:1374            component-wise multiply ( temp highp float)
0:1374              'u' ( temp highp float)
0:1374              Constant:
0:1374                2.000000
0:1374            Constant:
0:1374              3.141593
0:1375      Sequence
0:1375        move second child to first child ( temp highp float)
0:1375          'cosTheta' ( temp highp float)
0:1375          component-wise multiply ( temp highp float)
0:1375            Constant:
0:1375              2.000000
0:1375            subtract ( temp highp float)
0:1375              'v' ( temp highp float)
0:1375              Constant:
0:1375                0.500000
0:1376      Sequence
0:1376        move second child to first child ( temp highp float)
0:1376          'sinTheta' ( temp highp float)
0:1376          sqrt ( global highp float)
0:1376            subtract ( temp highp float)
0:1376              Constant:
0:1376                1.000000
0:1376              component-wise multiply ( temp highp float)
0:1376                'cosTheta' ( temp highp float)
0:1376                'cosTheta' ( temp highp float)
0:1379      Sequence
0:1379        move second child to first child ( temp highp float)
0:1379          'x' ( temp highp float)
0:1379          component-wise multiply ( temp highp float)
0:1379            'sinTheta' ( temp highp float)
0:1379            cosine ( global highp float)
0:1379              'phi' ( temp highp float)
0:1380      Sequence
0:1380        move second child to first child ( temp highp float)
0:1380          'y' ( temp highp float)
0:1380          component-wise multiply ( temp highp float)
0:1380            'sinTheta' ( temp highp float)
0:1380            sine ( global highp float)
0:1380              'phi' ( temp highp float)
0:1381      Sequence
0:1381        move second child to first child ( temp highp float)
0:1381          'z' ( temp highp float)
0:1381          'cosTheta' ( temp highp float)
0:1383      Sequence
0:1383        move second child to first child ( temp highp 3-component vector of float)
0:1383          'RandomUnit' ( temp highp 3-component vector of float)
0:1383          Construct vec3 ( temp highp 3-component vector of float)
0:1383            'x' ( temp highp float)
0:1383            'y' ( temp highp float)
0:1383            'z' ( temp highp float)
0:1386      Branch: Return with expression
0:1386        Test condition and select ( temp highp 3-component vector of float)
0:1386          Condition
0:1386          Compare Less Than ( temp bool)
0:1386            dot-product ( global highp float)
0:1386              'RandomUnit' ( temp highp 3-component vector of float)
0:1386              'Normal' ( in highp 3-component vector of float)
0:1386            Constant:
0:1386              0.000000
0:1386          true case
0:1386          Negate value ( temp highp 3-component vector of float)
0:1386            'RandomUnit' ( temp highp 3-component vector of float)
0:1386          false case
0:1386          'RandomUnit' ( temp highp 3-component vector of float)
0:1390  Function Definition: SampleUnitVecCosineWeighted(vf3;u1; ( global highp 3-component vector of float)
0:1390    Function Parameters: 
0:1390      'Normal' ( in highp 3-component vector of float)
0:1390      'state' ( inout highp uint)
0:1392    Sequence
0:1392      Sequence
0:1392        move second child to first child ( temp highp float)
0:1392          'u' ( temp highp float)
0:1392          Function Call: GetRandom(u1; ( global highp float)
0:1392            'state' ( inout highp uint)
0:1393      Sequence
0:1393        move second child to first child ( temp highp float)
0:1393          'v' ( temp highp float)
0:1393          Function Call: GetRandom(u1; ( global highp float)
0:1393            'state' ( inout highp uint)
0:1394      Sequence
0:1394        move second child to first child ( temp highp float)
0:1394          'phi' ( temp highp float)
0:1394          component-wise multiply ( temp highp float)
0:1394            component-wise multiply ( temp highp float)
0:1394              'u' ( temp highp float)
0:1394              Constant:
0:1394                2.000000
0:1394            Constant:
0:1394              3.141593
0:1395      Sequence
0:1395        move second child to first child ( temp highp float)
0:1395          'sqrtV' ( temp highp float)
0:1395          sqrt ( global highp float)
0:1395            'v' ( temp highp float)
0:1398      Sequence
0:1398        move second child to first child ( temp highp float)
0:1398          'x' ( temp highp float)
0:1398          component-wise multiply ( temp highp float)
0:1398            sqrt ( global highp float)
0:1398              subtract ( temp highp float)
0:1398                Constant:
0:1398                  1.000000
0:1398                'v' ( temp highp float)
0:1398            cosine ( global highp float)
0:1398              'phi' ( temp highp float)
0:1399      Sequence
0:1399        move second child to first child ( temp highp float)
0:1399          'y' ( temp highp float)
0:1399          component-wise multiply ( temp highp float)
0:1399            sqrt ( global highp float)
0:1399              subtract ( temp highp float)
0:1399                Constant:
0:1399                  1.000000
0:1399                'v' ( temp highp float)
0:1399            sine ( global highp float)
0:1399              'phi' ( temp highp float)
0:1400      Sequence
0:1400        move second child to first child ( temp highp float)
0:1400          'z' ( temp highp float)
0:1400          'sqrtV' ( temp highp float)
0:1402      Sequence
0:1402        move second child to first child ( temp highp 3-component vector of float)
0:1402          'Tangent' ( temp highp 3-component vector of float)
0:1402          Test condition and select ( temp highp 3-component vector of float)
0:1402            Condition
0:1402            Compare Greater Than ( temp bool)
0:1402              Absolute value ( global highp float)
0:1402                direct index ( temp highp float)
0:1402                  'Normal' ( in highp 3-component vector of float)
0:1402                  Constant:
0:1402                    0 (const int)
0:1402              Absolute value ( global highp float)
0:1402                direct index ( temp highp float)
0:1402                  'Normal' ( in highp 3-component vector of float)
0:1402                  Constant:
0:1402                    2 (const int)
0:1402            true case
0:1403            normalize ( global highp 3-component vector of float)
0:1403              Construct vec3 ( temp highp 3-component vector of float)
0:1403                direct index ( temp highp float)
0:1403                  'Normal' ( in highp 3-component vector of float)
0:1403                  Constant:
0:1403                    2 (const int)
0:1403                Constant:
0:1403                  0.000000
0:1403                Negate value ( temp highp float)
0:1403                  direct index ( temp highp float)
0:1403                    'Normal' ( in highp 3-component vector of float)
0:1403                    Constant:
0:1403                      0 (const int)
0:1402            false case
0:1403            normalize ( global highp 3-component vector of float)
0:1403              Construct vec3 ( temp highp 3-component vector of float)
0:1403                Constant:
0:1403                  0.000000
0:1403                Negate value ( temp highp float)
0:1403                  direct index ( temp highp float)
0:1403                    'Normal' ( in highp 3-component vector of float)
0:1403                    Constant:
0:1403                      2 (const int)
0:1403                direct index ( temp highp float)
0:1403                  'Normal' ( in highp 3-component vector of float)
0:1403                  Constant:
0:1403                    1 (const int)
0:1405      Sequence
0:1405        move second child to first child ( temp highp 3-component vector of float)
0:1405          'Bitangent' ( temp highp 3-component vector of float)
0:1405          cross-product ( global highp 3-component vector of float)
0:1405            'Normal' ( in highp 3-component vector of float)
0:1405            'Tangent' ( temp highp 3-component vector of float)
0:1407      Sequence
0:1407        move second child to first child ( temp highp 3X3 matrix of float)
0:1407          'TBN' ( temp highp 3X3 matrix of float)
0:1407          Construct mat3 ( temp highp 3X3 matrix of float)
0:1407            'Tangent' ( temp highp 3-component vector of float)
0:1407            'Bitangent' ( temp highp 3-component vector of float)
0:1407            'Normal' ( in highp 3-component vector of float)
0:1409      Branch: Return with expression
0:1409        normalize ( global highp 3-component vector of float)
0:1409          matrix-times-vector ( temp highp 3-component vector of float)
0:1409            'TBN' ( temp highp 3X3 matrix of float)
0:1409            Construct vec3 ( temp highp 3-component vector of float)
0:1409              'x' ( temp highp float)
0:1409              'y' ( temp highp float)
0:1409              'z' ( temp highp float)
0:1413  Function Definition: SampleHalfVecGGXVNDF_Distribution(vf3;vf3;f1;u1; ( global highp 3-component vector of float)
0:1413    Function Parameters: 
0:1413      'View' ( in highp 3-component vector of float)
0:1413      'Normal' ( in highp 3-component vector of float)
0:1413      'Roughness' ( in highp float)
0:1413      'state' ( inout highp uint)
0:1415    Sequence
0:1415      Sequence
0:1415        move second child to first child ( temp highp float)
0:1415          'u1' ( temp highp float)
0:1415          Function Call: GetRandom(u1; ( global highp float)
0:1415            'state' ( inout highp uint)
0:1416      Sequence
0:1416        move second child to first child ( temp highp float)
0:1416          'u2' ( temp highp float)
0:1416          Function Call: GetRandom(u1; ( global highp float)
0:1416            'state' ( inout highp uint)
0:1418      Sequence
0:1418        move second child to first child ( temp highp 3-component vector of float)
0:1418          'Tangent' ( temp highp 3-component vector of float)
0:1418          Test condition and select ( temp highp 3-component vector of float)
0:1418            Condition
0:1418            Compare Greater Than ( temp bool)
0:1418              Absolute value ( global highp float)
0:1418                direct index ( temp highp float)
0:1418                  'Normal' ( in highp 3-component vector of float)
0:1418                  Constant:
0:1418                    0 (const int)
0:1418              Absolute value ( global highp float)
0:1418                direct index ( temp highp float)
0:1418                  'Normal' ( in highp 3-component vector of float)
0:1418                  Constant:
0:1418                    2 (const int)
0:1418            true case
0:1419            normalize ( global highp 3-component vector of float)
0:1419              Construct vec3 ( temp highp 3-component vector of float)
0:1419                direct index ( temp highp float)
0:1419                  'Normal' ( in highp 3-component vector of float)
0:1419                  Constant:
0:1419                    2 (const int)
0:1419                Constant:
0:1419                  0.000000
0:1419                Negate value ( temp highp float)
0:1419                  direct index ( temp highp float)
0:1419                    'Normal' ( in highp 3-component vector of float)
0:1419                    Constant:
0:1419                      0 (const int)
0:1418            false case
0:1419            normalize ( global highp 3-component vector of float)
0:1419              Construct vec3 ( temp highp 3-component vector of float)
0:1419                Constant:
0:1419                  0.000000
0:1419                Negate value ( temp highp float)
0:1419                  direct index ( temp highp float)
0:1419                    'Normal' ( in highp 3-component vector of float)
0:1419                    Constant:
0:1419                      2 (const int)
0:1419                direct index ( temp highp float)
0:1419                  'Normal' ( in highp 3-component vector of float)
0:1419                  Constant:
0:1419                    1 (const int)
0:1421      Sequence
0:1421        move second child to first child ( temp highp 3-component vector of float)
0:1421          'Bitangent' ( temp highp 3-component vector of float)
0:1421          cross-product ( global highp 3-component vector of float)
0:1421            'Normal' ( in highp 3-component vector of float)
0:1421            'Tangent' ( temp highp 3-component vector of float)
0:1423      Sequence
0:1423        move second child to first child ( temp highp 3X3 matrix of float)
0:1423          'TBN' ( temp highp 3X3 matrix of float)
0:1423          Construct mat3 ( temp highp 3X3 matrix of float)
0:1423            'Tangent' ( temp highp 3-component vector of float)
0:1423            'Bitangent' ( temp highp 3-component vector of float)
0:1423            'Normal' ( in highp 3-component vector of float)
0:1424      Sequence
0:1424        move second child to first child ( temp highp 3X3 matrix of float)
0:1424          'TBNInv' ( temp highp 3X3 matrix of float)
0:1424          transpose ( global highp 3X3 matrix of float)
0:1424            'TBN' ( temp highp 3X3 matrix of float)
0:1426      Sequence
0:1426        move second child to first child ( temp highp 3-component vector of float)
0:1426          'ViewLocal' ( temp highp 3-component vector of float)
0:1426          matrix-times-vector ( temp highp 3-component vector of float)
0:1426            'TBNInv' ( temp highp 3X3 matrix of float)
0:1426            'View' ( in highp 3-component vector of float)
0:1429      Sequence
0:1429        move second child to first child ( temp highp 3-component vector of float)
0:1429          'StretchedView' ( temp highp 3-component vector of float)
0:1430          normalize ( global highp 3-component vector of float)
0:1430            Construct vec3 ( temp highp 3-component vector of float)
0:1429              component-wise multiply ( temp highp float)
0:1429                'Roughness' ( in highp float)
0:1429                direct index ( temp highp float)
0:1429                  'ViewLocal' ( temp highp 3-component vector of float)
0:1429                  Constant:
0:1429                    0 (const int)
0:1430              component-wise multiply ( temp highp float)
0:1430                'Roughness' ( in highp float)
0:1430                direct index ( temp highp float)
0:1430                  'ViewLocal' ( temp highp 3-component vector of float)
0:1430                  Constant:
0:1430                    1 (const int)
0:1430              direct index ( temp highp float)
0:1430                'ViewLocal' ( temp highp 3-component vector of float)
0:1430                Constant:
0:1430                  2 (const int)
0:1434      Sequence
0:1434        move second child to first child ( temp highp 3-component vector of float)
0:1434          'T1' ( temp highp 3-component vector of float)
0:1434          Test condition and select ( temp highp 3-component vector of float)
0:1434            Condition
0:1434            Compare Less Than ( temp bool)
0:1434              direct index ( temp highp float)
0:1434                'StretchedView' ( temp highp 3-component vector of float)
0:1434                Constant:
0:1434                  2 (const int)
0:1434              Constant:
0:1434                0.999000
0:1434            true case
0:1434            normalize ( global highp 3-component vector of float)
0:1434              cross-product ( global highp 3-component vector of float)
0:1434                'StretchedView' ( temp highp 3-component vector of float)
0:1434                Constant:
0:1434                  0.000000
0:1434                  0.000000
0:1434                  1.000000
0:1434            false case
0:1435            Constant:
0:1435              1.000000
0:1435              0.000000
0:1435              0.000000
0:1437      Sequence
0:1437        move second child to first child ( temp highp 3-component vector of float)
0:1437          'T2' ( temp highp 3-component vector of float)
0:1437          cross-product ( global highp 3-component vector of float)
0:1437            'T1' ( temp highp 3-component vector of float)
0:1437            'StretchedView' ( temp highp 3-component vector of float)
0:1441      Sequence
0:1441        move second child to first child ( temp highp float)
0:1441          'a' ( temp highp float)
0:1441          divide ( temp highp float)
0:1441            Constant:
0:1441              1.000000
0:1441            add ( temp highp float)
0:1441              Constant:
0:1441                1.000000
0:1441              direct index ( temp highp float)
0:1441                'StretchedView' ( temp highp 3-component vector of float)
0:1441                Constant:
0:1441                  2 (const int)
0:1442      Sequence
0:1442        move second child to first child ( temp highp float)
0:1442          'r' ( temp highp float)
0:1442          sqrt ( global highp float)
0:1442            'u1' ( temp highp float)
0:1443      Sequence
0:1443        move second child to first child ( temp highp float)
0:1443          'phi' ( temp highp float)
0:1443          Test condition and select ( temp highp float)
0:1443            Condition
0:1443            Compare Less Than ( temp bool)
0:1443              'u2' ( temp highp float)
0:1443              'a' ( temp highp float)
0:1443            true case
0:1443            component-wise multiply ( temp highp float)
0:1443              divide ( temp highp float)
0:1443                'u2' ( temp highp float)
0:1443                'a' ( temp highp float)
0:1443              Constant:
0:1443                3.141593
0:1443            false case
0:1443            component-wise multiply ( temp highp float)
0:1443              Constant:
0:1443                3.141593
0:1443              add ( temp highp float)
0:1443                Constant:
0:1443                  1.000000
0:1443                divide ( temp highp float)
0:1443                  subtract ( temp highp float)
0:1443                    'u2' ( temp highp float)
0:1443                    'a' ( temp highp float)
0:1443                  subtract ( temp highp float)
0:1443                    Constant:
0:1443                      1.000000
0:1443                    'a' ( temp highp float)
0:1444      Sequence
0:1444        move second child to first child ( temp highp float)
0:1444          'P1' ( temp highp float)
0:1444          component-wise multiply ( temp highp float)
0:1444            'r' ( temp highp float)
0:1444            cosine ( global highp float)
0:1444              'phi' ( temp highp float)
0:1445      Sequence
0:1445        move second child to first child ( temp highp float)
0:1445          'P2' ( temp highp float)
0:1445          component-wise multiply ( temp highp float)
0:1445            component-wise multiply ( temp highp float)
0:1445              'r' ( temp highp float)
0:1445              sine ( global highp float)
0:1445                'phi' ( temp highp float)
0:1445            Test condition and select ( temp highp float)
0:1445              Condition
0:1445              Compare Less Than ( temp bool)
0:1445                'u2' ( temp highp float)
0:1445                'a' ( temp highp float)
0:1445              true case
0:1445              Constant:
0:1445                1.000000
0:1445              false case
0:1445              direct index ( temp highp float)
0:1445                'StretchedView' ( temp highp 3-component vector of float)
0:1445                Constant:
0:1445                  2 (const int)
0:1449      Sequence
0:1449        move second child to first child ( temp highp 3-component vector of float)
0:1449          'HalfVec' ( temp highp 3-component vector of float)
0:1449          add ( temp highp 3-component vector of float)
0:1449            add ( temp highp 3-component vector of float)
0:1449              vector-scale ( temp highp 3-component vector of float)
0:1449                'P1' ( temp highp float)
0:1449                'T1' ( temp highp 3-component vector of float)
0:1449              vector-scale ( temp highp 3-component vector of float)
0:1449                'P2' ( temp highp float)
0:1449                'T2' ( temp highp 3-component vector of float)
0:1449            vector-scale ( temp highp 3-component vector of float)
0:1449              sqrt ( global highp float)
0:1449                max ( global highp float)
0:1449                  Constant:
0:1449                    0.000000
0:1449                  subtract ( temp highp float)
0:1449                    subtract ( temp highp float)
0:1449                      Constant:
0:1449                        1.000000
0:1449                      component-wise multiply ( temp highp float)
0:1449                        'P1' ( temp highp float)
0:1449                        'P1' ( temp highp float)
0:1449                    component-wise multiply ( temp highp float)
0:1449                      'P2' ( temp highp float)
0:1449                      'P2' ( temp highp float)
0:1449              'StretchedView' ( temp highp 3-component vector of float)
0:1453      move second child to first child ( temp highp 3-component vector of float)
0:1453        'HalfVec' ( temp highp 3-component vector of float)
0:1453        normalize ( global highp 3-component vector of float)
0:1453          Construct vec3 ( temp highp 3-component vector of float)
0:1453            component-wise multiply ( temp highp float)
0:1453              'Roughness' ( in highp float)
0:1453              direct index ( temp highp float)
0:1453                'HalfVec' ( temp highp 3-component vector of float)
0:1453                Constant:
0:1453                  0 (const int)
0:1453            component-wise multiply ( temp highp float)
0:1453              'Roughness' ( in highp float)
0:1453              direct index ( temp highp float)
0:1453                'HalfVec' ( temp highp 3-component vector of float)
0:1453                Constant:
0:1453                  1 (const int)
0:1453            max ( global highp float)
0:1453              Constant:
0:1453                0.000000
0:1453              direct index ( temp highp float)
0:1453                'HalfVec' ( temp highp 3-component vector of float)
0:1453                Constant:
0:1453                  2 (const int)
0:1454      move second child to first child ( temp highp 3-component vector of float)
0:1454        'HalfVec' ( temp highp 3-component vector of float)
0:1454        matrix-times-vector ( temp highp 3-component vector of float)
0:1454          'TBN' ( temp highp 3X3 matrix of float)
0:1454          'HalfVec' ( temp highp 3-component vector of float)
0:1456      Branch: Return with expression
0:1456        normalize ( global highp 3-component vector of float)
0:1456          'HalfVec' ( temp highp 3-component vector of float)
0:1465  Function Definition: GetDiffuseSpecularSamplingSeparation(f1;f1; ( global highp float)
0:1465    Function Parameters: 
0:1465      'Roughness' ( in highp float)
0:1465      'Metallic' ( in highp float)
0:1467    Sequence
0:1467      Branch: Return with expression
0:1467        clamp ( global highp float)
0:1467          divide ( temp highp float)
0:1467            subtract ( temp highp float)
0:1467              add ( temp highp float)
0:1467                component-wise multiply ( temp highp float)
0:1467                  'Roughness' ( in highp float)
0:1467                  'Roughness' ( in highp float)
0:1467                Constant:
0:1467                  1.000000
0:1467              'Metallic' ( in highp float)
0:1467            Constant:
0:1467              2.000000
0:1467          Constant:
0:1467            0.000000
0:1467          Constant:
0:1467            1.000000
0:1471  Function Definition: GetTransmissionProbability(f1;f1;f1;f1;vf3; ( global highp 2-component vector of float)
0:1471    Function Parameters: 
0:1471      'TransmissionWeight' ( in highp float)
0:1471      'Metallic' ( in highp float)
0:1471      'RefractiveIndex' ( in highp float)
0:1471      'NdotV' ( in highp float)
0:1471      'RefractionDir' ( in highp 3-component vector of float)
0:1473    Sequence
0:1473      Sequence
0:1473        move second child to first child ( temp highp float)
0:1473          'Reflectivity' ( temp highp float)
0:1473          divide ( temp highp float)
0:1473            subtract ( temp highp float)
0:1473              'RefractiveIndex' ( in highp float)
0:1473              Constant:
0:1473                1.000000
0:1473            add ( temp highp float)
0:1473              'RefractiveIndex' ( in highp float)
0:1473              Constant:
0:1473                1.000000
0:1474      multiply second child into first child ( temp highp float)
0:1474        'Reflectivity' ( temp highp float)
0:1474        'Reflectivity' ( temp highp float)
0:1476      Sequence
0:1476        move second child to first child ( temp highp 3-component vector of float)
0:1476          'ReflectionFresnel' ( temp highp 3-component vector of float)
0:1476          Function Call: FresnelSchlick(f1;vf3; ( global highp 3-component vector of float)
0:1476            'NdotV' ( in highp float)
0:1476            Construct vec3 ( temp 3-component vector of float)
0:1476              'Reflectivity' ( temp highp float)
0:1477      Sequence
0:1477        move second child to first child ( temp highp float)
0:1477          'ReflectionProb' ( temp highp float)
0:1477          length ( global highp float)
0:1477            'ReflectionFresnel' ( temp highp 3-component vector of float)
0:1478      Sequence
0:1478        move second child to first child ( temp highp float)
0:1478          'TransmissionProb' ( temp highp float)
0:1478          component-wise multiply ( temp highp float)
0:1478            component-wise multiply ( temp highp float)
0:1478              clamp ( global highp float)
0:1478                subtract ( temp highp float)
0:1478                  Constant:
0:1478                    1.000000
0:1478                  'ReflectionProb' ( temp highp float)
0:1478                Constant:
0:1478                  0.000000
0:1478                Constant:
0:1478                  1.000000
0:1478              'TransmissionWeight' ( in highp float)
0:1478            subtract ( temp highp float)
0:1478              Constant:
0:1478                1.000000
0:1478              'Metallic' ( in highp float)
0:1480      move second child to first child ( temp highp float)
0:1480        'TransmissionProb' ( temp highp float)
0:1480        Test condition and select ( temp highp float)
0:1480          Condition
0:1480          Compare Equal ( temp bool)
0:1480            length ( global highp float)
0:1480              'RefractionDir' ( in highp 3-component vector of float)
0:1480            Constant:
0:1480              0.000000
0:1480          true case
0:1480          Constant:
0:1480            0.000000
0:1480          false case
0:1480          'TransmissionProb' ( temp highp float)
0:1484      Branch: Return with expression
0:1484        Construct vec2 ( temp highp 2-component vector of float)
0:1484          subtract ( temp highp float)
0:1484            Constant:
0:1484              1.000000
0:1484            'TransmissionProb' ( temp highp float)
0:1484          'TransmissionProb' ( temp highp float)
0:1488  Function Definition: GetSampleProbablities(f1;f1;f1;f1;f1;vf3; ( global highp 3-component vector of float)
0:1488    Function Parameters: 
0:1488      'Roughness' ( in highp float)
0:1488      'Metallic' ( in highp float)
0:1488      'NdotV' ( in highp float)
0:1488      'TransmissionWeight' ( in highp float)
0:1488      'RefractiveIndex' ( in highp float)
0:1488      'RefractionDir' ( in highp 3-component vector of float)
0:1492    Sequence
0:1492      Sequence
0:1492        move second child to first child ( temp highp float)
0:1492          'ScatteringSplit' ( temp highp float)
0:1492          Function Call: GetDiffuseSpecularSamplingSeparation(f1;f1; ( global highp float)
0:1492            'Roughness' ( in highp float)
0:1492            'Metallic' ( in highp float)
0:1493      Sequence
0:1493        move second child to first child ( temp highp 2-component vector of float)
0:1493          'TransmissionSplit' ( temp highp 2-component vector of float)
0:1494          Function Call: GetTransmissionProbability(f1;f1;f1;f1;vf3; ( global highp 2-component vector of float)
0:1493            'TransmissionWeight' ( in highp float)
0:1493            'Metallic' ( in highp float)
0:1494            'RefractiveIndex' ( in highp float)
0:1494            'NdotV' ( in highp float)
0:1494            'RefractionDir' ( in highp 3-component vector of float)
0:1496      Sequence
0:1496        move second child to first child ( temp highp 3-component vector of float)
0:1496          'Probs' ( temp highp 3-component vector of float)
0:1496          Constant:
0:1496            0.000000
0:1496            0.000000
0:1496            0.000000
0:1498      move second child to first child ( temp highp float)
0:1498        direct index ( temp highp float)
0:1498          'Probs' ( temp highp 3-component vector of float)
0:1498          Constant:
0:1498            0 (const int)
0:1498        component-wise multiply ( temp highp float)
0:1498          subtract ( temp highp float)
0:1498            Constant:
0:1498              1.000000
0:1498            'ScatteringSplit' ( temp highp float)
0:1498          direct index ( temp highp float)
0:1498            'TransmissionSplit' ( temp highp 2-component vector of float)
0:1498            Constant:
0:1498              0 (const int)
0:1499      move second child to first child ( temp highp float)
0:1499        direct index ( temp highp float)
0:1499          'Probs' ( temp highp 3-component vector of float)
0:1499          Constant:
0:1499            1 (const int)
0:1499        component-wise multiply ( temp highp float)
0:1499          'ScatteringSplit' ( temp highp float)
0:1499          direct index ( temp highp float)
0:1499            'TransmissionSplit' ( temp highp 2-component vector of float)
0:1499            Constant:
0:1499              0 (const int)
0:1500      move second child to first child ( temp highp float)
0:1500        direct index ( temp highp float)
0:1500          'Probs' ( temp highp 3-component vector of float)
0:1500          Constant:
0:1500            2 (const int)
0:1500        direct index ( temp highp float)
0:1500          'TransmissionSplit' ( temp highp 2-component vector of float)
0:1500          Constant:
0:1500            1 (const int)
0:1502      Branch: Return with expression
0:1502        'Probs' ( temp highp 3-component vector of float)
0:1505  Function Definition: GetSampleIndex(vf3; ( global highp 2-component vector of int)
0:1505    Function Parameters: 
0:1505      'SampleProbablities' ( in highp 3-component vector of float)
0:1507    Sequence
0:1507      Sequence
0:1507        move second child to first child ( temp highp float)
0:1507          'SampleCoin' ( temp highp float)
0:1507          Function Call: GetRandom(u1; ( global highp float)
0:1507            'sRandomGeneratorSeed' ( global highp uint)
0:1510      Sequence
0:1510        move second child to first child ( temp highp float)
0:1510          'p0' ( temp highp float)
0:1510          direct index ( temp highp float)
0:1510            'SampleProbablities' ( in highp 3-component vector of float)
0:1510            Constant:
0:1510              0 (const int)
0:1511      Sequence
0:1511        move second child to first child ( temp highp float)
0:1511          'p1' ( temp highp float)
0:1511          add ( temp highp float)
0:1511            'p0' ( temp highp float)
0:1511            direct index ( temp highp float)
0:1511              'SampleProbablities' ( in highp 3-component vector of float)
0:1511              Constant:
0:1511                1 (const int)
0:1512      Sequence
0:1512        move second child to first child ( temp highp float)
0:1512          'p2' ( temp highp float)
0:1512          add ( temp highp float)
0:1512            'p1' ( temp highp float)
0:1512            direct index ( temp highp float)
0:1512              'SampleProbablities' ( in highp 3-component vector of float)
0:1512              Constant:
0:1512                2 (const int)
0:1515      Sequence
0:1515        move second child to first child ( temp highp int)
0:1515          's1' ( temp highp int)
0:1515          Convert float to int ( temp highp int)
0:1515            step ( global highp float)
0:1515              'p0' ( temp highp float)
0:1515              'SampleCoin' ( temp highp float)
0:1516      Sequence
0:1516        move second child to first child ( temp highp int)
0:1516          's2' ( temp highp int)
0:1516          Convert float to int ( temp highp int)
0:1516            step ( global highp float)
0:1516              'p1' ( temp highp float)
0:1516              'SampleCoin' ( temp highp float)
0:1517      Sequence
0:1517        move second child to first child ( temp highp int)
0:1517          's3' ( temp highp int)
0:1517          Convert float to int ( temp highp int)
0:1517            step ( global highp float)
0:1517              'p2' ( temp highp float)
0:1517              'SampleCoin' ( temp highp float)
0:1520      Sequence
0:1520        move second child to first child ( temp highp int)
0:1520          'SampleIndex' ( temp highp int)
0:1520          add ( temp highp int)
0:1520            add ( temp highp int)
0:1520              's1' ( temp highp int)
0:1520              's2' ( temp highp int)
0:1520            's3' ( temp highp int)
0:1521      Sequence
0:1521        move second child to first child ( temp highp int)
0:1521          'Hemisphere' ( temp highp int)
0:1521          Test condition and select ( temp highp int)
0:1521            Condition
0:1521            Compare Equal ( temp bool)
0:1521              'SampleIndex' ( temp highp int)
0:1521              Constant:
0:1521                2 (const int)
0:1521            true case
0:1521            Constant:
0:1521              -1 (const int)
0:1521            false case
0:1521            Constant:
0:1521              1 (const int)
0:1523      Branch: Return with expression
0:1523        Construct ivec2 ( temp highp 2-component vector of int)
0:1523          'SampleIndex' ( temp highp int)
0:1523          'Hemisphere' ( temp highp int)
0:1526  Function Definition: SampleUnitVec(struct-StackEntry-struct-CollisionInfo-vf3-f1-vf3-f1-struct-Material-vf3-f1-f1-f1-f1-f11-struct-LightProperties-vf31-u1-b1-b11-struct-Ray-vf3-vf31-struct-Ray-vf3-vf31-vf3-f1-f11;f1; ( global bool)
0:1526    Function Parameters: 
0:1526      'Entry' ( inout structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1526      'RefractiveIndex' ( in highp float)
0:1528    Sequence
0:1528      Sequence
0:1528        move second child to first child ( temp highp 3-component vector of float)
0:1528          'Normal' ( temp highp 3-component vector of float)
0:1528          Normal: direct index for structure ( global highp 3-component vector of float)
0:1528            HitInfo: direct index for structure ( global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:1528              'Entry' ( inout structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1528              Constant:
0:1528                0 (const int)
0:1528            Constant:
0:1528              0 (const int)
0:1529      Sequence
0:1529        move second child to first child ( temp highp 3-component vector of float)
0:1529          'ViewDir' ( temp highp 3-component vector of float)
0:1529          Negate value ( temp highp 3-component vector of float)
0:1529            Direction: direct index for structure ( global highp 3-component vector of float)
0:1529              OutgoingRay: direct index for structure ( global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:1529                'Entry' ( inout structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1529                Constant:
0:1529                  2 (const int)
0:1529              Constant:
0:1529                1 (const int)
0:1530      Sequence
0:1530        move second child to first child ( temp highp float)
0:1530          'Roughness' ( temp highp float)
0:1530          Roughness: direct index for structure ( global highp float)
0:1530            ObjectMaterial: direct index for structure ( global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex})
0:1530              HitInfo: direct index for structure ( global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:1530                'Entry' ( inout structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1530                Constant:
0:1530                  0 (const int)
0:1530              Constant:
0:1530                4 (const int)
0:1530            Constant:
0:1530              2 (const int)
0:1531      Sequence
0:1531        move second child to first child ( temp highp float)
0:1531          'Metallic' ( temp highp float)
0:1531          Metallic: direct index for structure ( global highp float)
0:1531            ObjectMaterial: direct index for structure ( global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex})
0:1531              HitInfo: direct index for structure ( global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:1531                'Entry' ( inout structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1531                Constant:
0:1531                  0 (const int)
0:1531              Constant:
0:1531                4 (const int)
0:1531            Constant:
0:1531              1 (const int)
0:1532      Sequence
0:1532        move second child to first child ( temp highp float)
0:1532          'TransmissionWeight' ( temp highp float)
0:1532          Transmission: direct index for structure ( global highp float)
0:1532            ObjectMaterial: direct index for structure ( global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex})
0:1532              HitInfo: direct index for structure ( global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:1532                'Entry' ( inout structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1532                Constant:
0:1532                  0 (const int)
0:1532              Constant:
0:1532                4 (const int)
0:1532            Constant:
0:1532              3 (const int)
0:1534      Sequence
0:1534        move second child to first child ( temp highp float)
0:1534          'NdotV' ( temp highp float)
0:1534          dot-product ( global highp float)
0:1534            'Normal' ( temp highp 3-component vector of float)
0:1534            'ViewDir' ( temp highp 3-component vector of float)
0:1540      move second child to first child ( temp highp 3-component vector of float)
0:1540        direct index ( temp highp 3-component vector of float)
0:1540          'HalfVecs' ( temp 3-element array of highp 3-component vector of float)
0:1540          Constant:
0:1540            0 (const int)
0:1540        Function Call: SampleHalfVecGGXVNDF_Distribution(vf3;vf3;f1;u1; ( global highp 3-component vector of float)
0:1540          'ViewDir' ( temp highp 3-component vector of float)
0:1540          'Normal' ( temp highp 3-component vector of float)
0:1540          'Roughness' ( temp highp float)
0:1540          'sRandomGeneratorSeed' ( global highp uint)
0:1541      move second child to first child ( temp highp 3-component vector of float)
0:1541        direct index ( temp highp 3-component vector of float)
0:1541          'Directions' ( temp 3-element array of highp 3-component vector of float)
0:1541          Constant:
0:1541            1 (const int)
0:1541        Function Call: SampleUnitVecCosineWeighted(vf3;u1; ( global highp 3-component vector of float)
0:1541          'Normal' ( temp highp 3-component vector of float)
0:1541          'sRandomGeneratorSeed' ( global highp uint)
0:1543      move second child to first child ( temp highp 3-component vector of float)
0:1543        direct index ( temp highp 3-component vector of float)
0:1543          'HalfVecs' ( temp 3-element array of highp 3-component vector of float)
0:1543          Constant:
0:1543            2 (const int)
0:1543        direct index ( temp highp 3-component vector of float)
0:1543          'HalfVecs' ( temp 3-element array of highp 3-component vector of float)
0:1543          Constant:
0:1543            0 (const int)
0:1545      move second child to first child ( temp highp 3-component vector of float)
0:1545        direct index ( temp highp 3-component vector of float)
0:1545          'HalfVecs' ( temp 3-element array of highp 3-component vector of float)
0:1545          Constant:
0:1545            1 (const int)
0:1545        normalize ( global highp 3-component vector of float)
0:1545          add ( temp highp 3-component vector of float)
0:1545            'ViewDir' ( temp highp 3-component vector of float)
0:1545            direct index ( temp highp 3-component vector of float)
0:1545              'Directions' ( temp 3-element array of highp 3-component vector of float)
0:1545              Constant:
0:1545                1 (const int)
0:1547      move second child to first child ( temp highp 3-component vector of float)
0:1547        direct index ( temp highp 3-component vector of float)
0:1547          'Directions' ( temp 3-element array of highp 3-component vector of float)
0:1547          Constant:
0:1547            0 (const int)
0:1547        reflect ( global highp 3-component vector of float)
0:1547          Negate value ( temp highp 3-component vector of float)
0:1547            'ViewDir' ( temp highp 3-component vector of float)
0:1547          direct index ( temp highp 3-component vector of float)
0:1547            'HalfVecs' ( temp 3-element array of highp 3-component vector of float)
0:1547            Constant:
0:1547              0 (const int)
0:1548      move second child to first child ( temp highp 3-component vector of float)
0:1548        direct index ( temp highp 3-component vector of float)
0:1548          'Directions' ( temp 3-element array of highp 3-component vector of float)
0:1548          Constant:
0:1548            2 (const int)
0:1548        refract ( global highp 3-component vector of float)
0:1548          Negate value ( temp highp 3-component vector of float)
0:1548            'ViewDir' ( temp highp 3-component vector of float)
0:1548          direct index ( temp highp 3-component vector of float)
0:1548            'HalfVecs' ( temp 3-element array of highp 3-component vector of float)
0:1548            Constant:
0:1548              0 (const int)
0:1548          'RefractiveIndex' ( in highp float)
0:1550      Sequence
0:1550        move second child to first child ( temp highp 3-component vector of float)
0:1550          'SampleProbabilities' ( temp highp 3-component vector of float)
0:1551          Function Call: GetSampleProbablities(f1;f1;f1;f1;f1;vf3; ( global highp 3-component vector of float)
0:1550            'Roughness' ( temp highp float)
0:1550            'Metallic' ( temp highp float)
0:1550            'NdotV' ( temp highp float)
0:1551            'TransmissionWeight' ( temp highp float)
0:1551            'RefractiveIndex' ( in highp float)
0:1551            direct index ( temp highp 3-component vector of float)
0:1551              'Directions' ( temp 3-element array of highp 3-component vector of float)
0:1551              Constant:
0:1551                0 (const int)
0:1553      Sequence
0:1553        move second child to first child ( temp highp 2-component vector of int)
0:1553          'SampleIndexInfo' ( temp highp 2-component vector of int)
0:1553          Function Call: GetSampleIndex(vf3; ( global highp 2-component vector of int)
0:1553            'SampleProbabilities' ( temp highp 3-component vector of float)
0:1554      Sequence
0:1554        move second child to first child ( temp highp int)
0:1554          'SampleIndex' ( temp highp int)
0:1554          direct index ( temp highp int)
0:1554            'SampleIndexInfo' ( temp highp 2-component vector of int)
0:1554            Constant:
0:1554              0 (const int)
0:1555      Sequence
0:1555        move second child to first child ( temp highp float)
0:1555          'HemisphereSide' ( temp highp float)
0:1555          Convert int to float ( temp highp float)
0:1555            direct index ( temp highp int)
0:1555              'SampleIndexInfo' ( temp highp 2-component vector of int)
0:1555              Constant:
0:1555                1 (const int)
0:1557      Sequence
0:1557        move second child to first child ( temp highp 3-component vector of float)
0:1557          'LightDir' ( temp highp 3-component vector of float)
0:1557          normalize ( global highp 3-component vector of float)
0:1557            indirect index ( temp highp 3-component vector of float)
0:1557              'Directions' ( temp 3-element array of highp 3-component vector of float)
0:1557              'SampleIndex' ( temp highp int)
0:1558      Sequence
0:1558        move second child to first child ( temp highp 3-component vector of float)
0:1558          'H' ( temp highp 3-component vector of float)
0:1558          indirect index ( temp highp 3-component vector of float)
0:1558            'HalfVecs' ( temp 3-element array of highp 3-component vector of float)
0:1558            'SampleIndex' ( temp highp int)
0:1560      Sequence
0:1560        move second child to first child ( temp highp float)
0:1560          'VNDF_SampleWeightReflection' ( temp highp float)
0:1560          Function Call: PDF_GGXVNDF_Reflection(vf3;vf3;vf3;f1; ( global highp float)
0:1560            'Normal' ( temp highp 3-component vector of float)
0:1560            'ViewDir' ( temp highp 3-component vector of float)
0:1560            'H' ( temp highp 3-component vector of float)
0:1560            'Roughness' ( temp highp float)
0:1561      Sequence
0:1561        move second child to first child ( temp highp float)
0:1561          'VNDF_SampleWeightRefraction' ( temp highp float)
0:1562          Function Call: PDF_GGXVNDF_Refraction(vf3;vf3;vf3;vf3;f1;f1; ( global highp float)
0:1561            Negate value ( temp highp 3-component vector of float)
0:1561              'Normal' ( temp highp 3-component vector of float)
0:1561            'ViewDir' ( temp highp 3-component vector of float)
0:1561            Negate value ( temp highp 3-component vector of float)
0:1561              'H' ( temp highp 3-component vector of float)
0:1562            'LightDir' ( temp highp 3-component vector of float)
0:1562            'Roughness' ( temp highp float)
0:1562            'RefractiveIndex' ( in highp float)
0:1564      Sequence
0:1564        move second child to first child ( temp highp float)
0:1564          'CosineSampleWeight' ( temp highp float)
0:1564          divide ( temp highp float)
0:1564            max ( global highp float)
0:1564              Absolute value ( global highp float)
0:1564                dot-product ( global highp float)
0:1564                  'Normal' ( temp highp 3-component vector of float)
0:1564                  'LightDir' ( temp highp 3-component vector of float)
0:1564              Constant:
0:1564                0.000100
0:1564            Constant:
0:1564              3.141593
0:1566      move second child to first child ( temp highp float)
0:1566        direct index ( temp highp float)
0:1566          'SampleWeights' ( temp 3-element array of highp float)
0:1566          Constant:
0:1566            0 (const int)
0:1566        'VNDF_SampleWeightReflection' ( temp highp float)
0:1567      move second child to first child ( temp highp float)
0:1567        direct index ( temp highp float)
0:1567          'SampleWeights' ( temp 3-element array of highp float)
0:1567          Constant:
0:1567            1 (const int)
0:1567        'CosineSampleWeight' ( temp highp float)
0:1568      move second child to first child ( temp highp float)
0:1568        direct index ( temp highp float)
0:1568          'SampleWeights' ( temp 3-element array of highp float)
0:1568          Constant:
0:1568            2 (const int)
0:1568        'VNDF_SampleWeightRefraction' ( temp highp float)
0:1570      Sequence
0:1570        move second child to first child ( temp highp float)
0:1570          'SampleWeightInvReflection' ( temp highp float)
0:1571          divide ( temp highp float)
0:1570            add ( temp highp float)
0:1570              pow ( global highp float)
0:1570                component-wise multiply ( temp highp float)
0:1570                  direct index ( temp highp float)
0:1570                    'SampleProbabilities' ( temp highp 3-component vector of float)
0:1570                    Constant:
0:1570                      0 (const int)
0:1570                  direct index ( temp highp float)
0:1570                    'SampleWeights' ( temp 3-element array of highp float)
0:1570                    Constant:
0:1570                      0 (const int)
0:1570                Constant:
0:1570                  2.000000
0:1571              pow ( global highp float)
0:1571                component-wise multiply ( temp highp float)
0:1571                  direct index ( temp highp float)
0:1571                    'SampleProbabilities' ( temp highp 3-component vector of float)
0:1571                    Constant:
0:1571                      1 (const int)
0:1571                  direct index ( temp highp float)
0:1571                    'SampleWeights' ( temp 3-element array of highp float)
0:1571                    Constant:
0:1571                      1 (const int)
0:1571                Constant:
0:1571                  2.000000
0:1572            pow ( global highp float)
0:1572              component-wise multiply ( temp highp float)
0:1572                indirect index ( temp highp float)
0:1572                  'SampleProbabilities' ( temp highp 3-component vector of float)
0:1572                  'SampleIndex' ( temp highp int)
0:1572                indirect index ( temp highp float)
0:1572                  'SampleWeights' ( temp 3-element array of highp float)
0:1572                  'SampleIndex' ( temp highp int)
0:1572              Constant:
0:1572                1.000000
0:1577      Sequence
0:1577        move second child to first child ( temp highp float)
0:1577          'SampleWeightInvRefraction' ( temp highp float)
0:1577          component-wise multiply ( temp highp float)
0:1577            direct index ( temp highp float)
0:1577              'SampleProbabilities' ( temp highp 3-component vector of float)
0:1577              Constant:
0:1577                2 (const int)
0:1577            direct index ( temp highp float)
0:1577              'SampleWeights' ( temp 3-element array of highp float)
0:1577              Constant:
0:1577                2 (const int)
0:1579      Sequence
0:1579        move second child to first child ( temp highp float)
0:1579          'SampleWeightInv' ( temp highp float)
0:1579          Test condition and select ( temp highp float)
0:1579            Condition
0:1579            Compare Greater Than ( temp bool)
0:1579              'HemisphereSide' ( temp highp float)
0:1579              Constant:
0:1579                0.000000
0:1579            true case
0:1579            'SampleWeightInvReflection' ( temp highp float)
0:1579            false case
0:1579            'SampleWeightInvRefraction' ( temp highp float)
0:1581      move second child to first child ( temp highp 3-component vector of float)
0:1581        HalfVec: direct index for structure ( global highp 3-component vector of float)
0:1581          'Entry' ( inout structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1581          Constant:
0:1581            3 (const int)
0:1581        'H' ( temp highp 3-component vector of float)
0:1582      move second child to first child ( temp highp 3-component vector of float)
0:1582        Origin: direct index for structure ( global highp 3-component vector of float)
0:1582          IncomingRay: direct index for structure ( global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:1582            'Entry' ( inout structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1582            Constant:
0:1582              1 (const int)
0:1582          Constant:
0:1582            0 (const int)
0:1582        add ( temp highp 3-component vector of float)
0:1582          IntersectionPoint: direct index for structure ( global highp 3-component vector of float)
0:1582            HitInfo: direct index for structure ( global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:1582              'Entry' ( inout structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1582              Constant:
0:1582                0 (const int)
0:1582            Constant:
0:1582              2 (const int)
0:1583          vector-scale ( temp highp 3-component vector of float)
0:1583            component-wise multiply ( temp highp float)
0:1583              'HemisphereSide' ( temp highp float)
0:1583              Constant:
0:1583                0.000010
0:1583            Normal: direct index for structure ( global highp 3-component vector of float)
0:1583              HitInfo: direct index for structure ( global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:1583                'Entry' ( inout structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1583                Constant:
0:1583                  0 (const int)
0:1583              Constant:
0:1583                0 (const int)
0:1584      move second child to first child ( temp highp 3-component vector of float)
0:1584        Direction: direct index for structure ( global highp 3-component vector of float)
0:1584          IncomingRay: direct index for structure ( global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:1584            'Entry' ( inout structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1584            Constant:
0:1584              1 (const int)
0:1584          Constant:
0:1584            1 (const int)
0:1584        'LightDir' ( temp highp 3-component vector of float)
0:1585      move second child to first child ( temp highp float)
0:1585        IncomingSampleWeight: direct index for structure ( global highp float)
0:1585          'Entry' ( inout structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1585          Constant:
0:1585            5 (const int)
0:1585        'SampleWeightInv' ( temp highp float)
0:1586      move second child to first child ( temp highp float)
0:1586        InterfaceRefractiveIndex: direct index for structure ( global highp float)
0:1586          'Entry' ( inout structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1586          Constant:
0:1586            4 (const int)
0:1586        divide ( temp highp float)
0:1586          Constant:
0:1586            1.000000
0:1586          'RefractiveIndex' ( in highp float)
0:1588      Branch: Return with expression
0:1588        Compare Greater Than ( temp bool)
0:1588          component-wise multiply ( temp highp float)
0:1588            dot-product ( global highp float)
0:1588              'LightDir' ( temp highp 3-component vector of float)
0:1588              'Normal' ( temp highp 3-component vector of float)
0:1588            'HemisphereSide' ( temp highp float)
0:1588          Constant:
0:1588            0.000000
0:1598  Function Definition: GlobalIllumination(struct-StackEntry-struct-CollisionInfo-vf3-f1-vf3-f1-struct-Material-vf3-f1-f1-f1-f1-f11-struct-LightProperties-vf31-u1-b1-b11-struct-Ray-vf3-vf31-struct-Ray-vf3-vf31-vf3-f1-f11[20];i1;b1; ( global highp 3-component vector of float)
0:1598    Function Parameters: 
0:1598      'stack' ( in 20-element array of structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1598      'depth' ( in highp int)
0:1598      'foundLightSrc' ( in bool)
0:1601    Sequence
0:1601      Test condition and select ( temp void)
0:1601        Condition
0:1601        Compare Less Than ( temp bool)
0:1601          'depth' ( in highp int)
0:1601          Constant:
0:1601            0 (const int)
0:1601        true case
0:1602        Branch: Return with expression
0:1602          Constant:
0:1602            0.000000
0:1602            0.000000
0:1602            0.000000
0:1604      Sequence
0:1604        move second child to first child ( temp highp uint)
0:1604          'TransmissionCount' ( temp highp uint)
0:1604          Constant:
0:1604            0 (const uint)
0:1606      Sequence
0:1606        move second child to first child ( temp structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1606          'LastEntry' ( temp structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1606          indirect index ( temp structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1606            'stack' ( in 20-element array of structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1606            Post-Decrement ( temp highp int)
0:1606              'depth' ( in highp int)
0:1607      Sequence
0:1607        move second child to first child ( temp structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1607          'SecondLastEntry' ( temp structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1607          indirect index ( temp structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1607            'stack' ( in 20-element array of structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1607            Post-Decrement ( temp highp int)
0:1607              'depth' ( in highp int)
0:1611      move second child to first child ( temp highp 3-component vector of float)
0:1611        Normal: direct index for structure ( global highp 3-component vector of float)
0:1611          'bsdfInput' ( temp structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:1611          Constant:
0:1611            2 (const int)
0:1611        Normal: direct index for structure ( global highp 3-component vector of float)
0:1611          HitInfo: direct index for structure ( global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:1611            'SecondLastEntry' ( temp structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1611            Constant:
0:1611              0 (const int)
0:1611          Constant:
0:1611            0 (const int)
0:1612      move second child to first child ( temp highp 3-component vector of float)
0:1612        LightDir: direct index for structure ( global highp 3-component vector of float)
0:1612          'bsdfInput' ( temp structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:1612          Constant:
0:1612            0 (const int)
0:1612        Direction: direct index for structure ( global highp 3-component vector of float)
0:1612          IncomingRay: direct index for structure ( global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:1612            'SecondLastEntry' ( temp structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1612            Constant:
0:1612              1 (const int)
0:1612          Constant:
0:1612            1 (const int)
0:1613      move second child to first child ( temp highp 3-component vector of float)
0:1613        HalfVec: direct index for structure ( global highp 3-component vector of float)
0:1613          'bsdfInput' ( temp structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:1613          Constant:
0:1613            4 (const int)
0:1613        HalfVec: direct index for structure ( global highp 3-component vector of float)
0:1613          'SecondLastEntry' ( temp structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1613          Constant:
0:1613            3 (const int)
0:1615      move second child to first child ( temp highp float)
0:1615        RefractiveIndexRatio: direct index for structure ( global highp float)
0:1615          'bsdfInput' ( temp structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:1615          Constant:
0:1615            7 (const int)
0:1615        InterfaceRefractiveIndex: direct index for structure ( global highp float)
0:1615          'SecondLastEntry' ( temp structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1615          Constant:
0:1615            4 (const int)
0:1617      move second child to first child ( temp highp float)
0:1617        InterfaceRoughness: direct index for structure ( global highp float)
0:1617          'bsdfInput' ( temp structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:1617          Constant:
0:1617            1 (const int)
0:1617        Roughness: direct index for structure ( global highp float)
0:1617          ObjectMaterial: direct index for structure ( global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex})
0:1617            HitInfo: direct index for structure ( global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:1617              'SecondLastEntry' ( temp structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1617              Constant:
0:1617                0 (const int)
0:1617            Constant:
0:1617              4 (const int)
0:1617          Constant:
0:1617            2 (const int)
0:1618      move second child to first child ( temp highp float)
0:1618        InterfaceMetallic: direct index for structure ( global highp float)
0:1618          'bsdfInput' ( temp structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:1618          Constant:
0:1618            3 (const int)
0:1618        Metallic: direct index for structure ( global highp float)
0:1618          ObjectMaterial: direct index for structure ( global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex})
0:1618            HitInfo: direct index for structure ( global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:1618              'SecondLastEntry' ( temp structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1618              Constant:
0:1618                0 (const int)
0:1618            Constant:
0:1618              4 (const int)
0:1618          Constant:
0:1618            1 (const int)
0:1619      move second child to first child ( temp highp float)
0:1619        TransmissionWeight: direct index for structure ( global highp float)
0:1619          'bsdfInput' ( temp structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:1619          Constant:
0:1619            5 (const int)
0:1619        Transmission: direct index for structure ( global highp float)
0:1619          ObjectMaterial: direct index for structure ( global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex})
0:1619            HitInfo: direct index for structure ( global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:1619              'SecondLastEntry' ( temp structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1619              Constant:
0:1619                0 (const int)
0:1619            Constant:
0:1619              4 (const int)
0:1619          Constant:
0:1619            3 (const int)
0:1620      move second child to first child ( temp highp 3-component vector of float)
0:1620        BaseColor: direct index for structure ( global highp 3-component vector of float)
0:1620          'bsdfInput' ( temp structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:1620          Constant:
0:1620            6 (const int)
0:1620        Albedo: direct index for structure ( global highp 3-component vector of float)
0:1620          ObjectMaterial: direct index for structure ( global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex})
0:1620            HitInfo: direct index for structure ( global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:1620              'SecondLastEntry' ( temp structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1620              Constant:
0:1620                0 (const int)
0:1620            Constant:
0:1620              4 (const int)
0:1620          Constant:
0:1620            0 (const int)
0:1622      Sequence
0:1622        move second child to first child ( temp highp float)
0:1622          'Hemisphere' ( temp highp float)
0:1622          Test condition and select ( temp highp float)
0:1622            Condition
0:1622            Compare Greater Than ( temp bool)
0:1622              dot-product ( global highp float)
0:1622                LightDir: direct index for structure ( global highp 3-component vector of float)
0:1622                  'bsdfInput' ( temp structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:1622                  Constant:
0:1622                    0 (const int)
0:1622                Normal: direct index for structure ( global highp 3-component vector of float)
0:1622                  'bsdfInput' ( temp structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:1622                  Constant:
0:1622                    2 (const int)
0:1622              Constant:
0:1622                0.000000
0:1622            true case
0:1622            Constant:
0:1622              0.000000
0:1622            false case
0:1622            Constant:
0:1622              1.000000
0:1625      add second child into first child ( temp highp uint)
0:1625        'TransmissionCount' ( temp highp uint)
0:1625        Convert int to uint ( temp highp uint)
0:1625          Test condition and select ( temp highp int)
0:1625            Condition
0:1625            Compare Greater Than ( temp bool)
0:1625              'Hemisphere' ( temp highp float)
0:1625              Constant:
0:1625                0.500000
0:1625            true case
0:1625            Constant:
0:1625              1 (const int)
0:1625            false case
0:1625            Constant:
0:1625              0 (const int)
0:1627      Sequence
0:1627        move second child to first child ( temp highp 3-component vector of float)
0:1627          'ViewDir' ( temp highp 3-component vector of float)
0:1627          Negate value ( temp highp 3-component vector of float)
0:1627            Direction: direct index for structure ( global highp 3-component vector of float)
0:1627              OutgoingRay: direct index for structure ( global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:1627                'SecondLastEntry' ( temp structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1627                Constant:
0:1627                  2 (const int)
0:1627              Constant:
0:1627                1 (const int)
0:1629      Sequence
0:1629        move second child to first child ( temp highp 3-component vector of float)
0:1629          'LightSrcColor' ( temp highp 3-component vector of float)
0:1629          Test condition and select ( temp highp 3-component vector of float)
0:1629            Condition
0:1629            'foundLightSrc' ( in bool)
0:1629            true case
0:1629            Color: direct index for structure ( global highp 3-component vector of float)
0:1629              LightProps: direct index for structure ( global structure{ global highp 3-component vector of float Color})
0:1629                HitInfo: direct index for structure ( global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:1629                  'LastEntry' ( temp structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1629                  Constant:
0:1629                    0 (const int)
0:1629                Constant:
0:1629                  5 (const int)
0:1629              Constant:
0:1629                0 (const int)
0:1629            false case
0:1630            Function Call: SampleCubeMap(vf3;f1; ( global highp 3-component vector of float)
0:1630              LightDir: direct index for structure ( global highp 3-component vector of float)
0:1630                'bsdfInput' ( temp structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:1630                Constant:
0:1630                  0 (const int)
0:1630              Constant:
0:1630                0.000000
0:1633      Sequence
0:1633        move second child to first child ( temp highp 3-component vector of float)
0:1633          'Radiance' ( temp highp 3-component vector of float)
0:1633          Function Call: CookTorranceBSDF(struct-BSDF_Input-vf3-f1-vf3-f1-vf3-f1-vf3-f11;f1; ( global highp 3-component vector of float)
0:1633            'bsdfInput' ( temp structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:1633            'Hemisphere' ( temp highp float)
0:1635      multiply second child into first child ( temp highp 3-component vector of float)
0:1635        'Radiance' ( temp highp 3-component vector of float)
0:1635        'LightSrcColor' ( temp highp 3-component vector of float)
0:1636      divide second child into first child ( temp highp 3-component vector of float)
0:1636        'Radiance' ( temp highp 3-component vector of float)
0:1636        IncomingSampleWeight: direct index for structure ( global highp float)
0:1636          'SecondLastEntry' ( temp structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1636          Constant:
0:1636            5 (const int)
0:1638      move second child to first child ( temp highp 3-component vector of float)
0:1638        'Radiance' ( temp highp 3-component vector of float)
0:1638        min ( global highp 3-component vector of float)
0:1638          'Radiance' ( temp highp 3-component vector of float)
0:1638          Constant:
0:1638            100.000000
0:1638            100.000000
0:1638            100.000000
0:1641      Loop with condition tested first
0:1641        Loop Condition
0:1641        Compare Greater Than or Equal ( temp bool)
0:1641          'depth' ( in highp int)
0:1641          Constant:
0:1641            0 (const int)
0:1641        Loop Body
0:1643        Sequence
0:1643          Sequence
0:1643            move second child to first child ( temp structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1643              'Entry' ( temp structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1643              indirect index ( temp structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1643                'stack' ( in 20-element array of structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1643                Post-Decrement ( temp highp int)
0:1643                  'depth' ( in highp int)
0:1645          move second child to first child ( temp highp 3-component vector of float)
0:1645            Normal: direct index for structure ( global highp 3-component vector of float)
0:1645              'bsdfInput' ( temp structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:1645              Constant:
0:1645                2 (const int)
0:1645            Normal: direct index for structure ( global highp 3-component vector of float)
0:1645              HitInfo: direct index for structure ( global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:1645                'Entry' ( temp structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1645                Constant:
0:1645                  0 (const int)
0:1645              Constant:
0:1645                0 (const int)
0:1646          move second child to first child ( temp highp 3-component vector of float)
0:1646            LightDir: direct index for structure ( global highp 3-component vector of float)
0:1646              'bsdfInput' ( temp structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:1646              Constant:
0:1646                0 (const int)
0:1646            Direction: direct index for structure ( global highp 3-component vector of float)
0:1646              IncomingRay: direct index for structure ( global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:1646                'Entry' ( temp structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1646                Constant:
0:1646                  1 (const int)
0:1646              Constant:
0:1646                1 (const int)
0:1647          move second child to first child ( temp highp 3-component vector of float)
0:1647            HalfVec: direct index for structure ( global highp 3-component vector of float)
0:1647              'bsdfInput' ( temp structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:1647              Constant:
0:1647                4 (const int)
0:1647            HalfVec: direct index for structure ( global highp 3-component vector of float)
0:1647              'Entry' ( temp structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1647              Constant:
0:1647                3 (const int)
0:1649          move second child to first child ( temp highp float)
0:1649            RefractiveIndexRatio: direct index for structure ( global highp float)
0:1649              'bsdfInput' ( temp structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:1649              Constant:
0:1649                7 (const int)
0:1649            InterfaceRefractiveIndex: direct index for structure ( global highp float)
0:1649              'Entry' ( temp structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1649              Constant:
0:1649                4 (const int)
0:1651          move second child to first child ( temp highp float)
0:1651            InterfaceRoughness: direct index for structure ( global highp float)
0:1651              'bsdfInput' ( temp structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:1651              Constant:
0:1651                1 (const int)
0:1651            Roughness: direct index for structure ( global highp float)
0:1651              ObjectMaterial: direct index for structure ( global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex})
0:1651                HitInfo: direct index for structure ( global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:1651                  'Entry' ( temp structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1651                  Constant:
0:1651                    0 (const int)
0:1651                Constant:
0:1651                  4 (const int)
0:1651              Constant:
0:1651                2 (const int)
0:1652          move second child to first child ( temp highp float)
0:1652            InterfaceMetallic: direct index for structure ( global highp float)
0:1652              'bsdfInput' ( temp structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:1652              Constant:
0:1652                3 (const int)
0:1652            Metallic: direct index for structure ( global highp float)
0:1652              ObjectMaterial: direct index for structure ( global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex})
0:1652                HitInfo: direct index for structure ( global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:1652                  'Entry' ( temp structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1652                  Constant:
0:1652                    0 (const int)
0:1652                Constant:
0:1652                  4 (const int)
0:1652              Constant:
0:1652                1 (const int)
0:1653          move second child to first child ( temp highp float)
0:1653            TransmissionWeight: direct index for structure ( global highp float)
0:1653              'bsdfInput' ( temp structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:1653              Constant:
0:1653                5 (const int)
0:1653            Transmission: direct index for structure ( global highp float)
0:1653              ObjectMaterial: direct index for structure ( global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex})
0:1653                HitInfo: direct index for structure ( global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:1653                  'Entry' ( temp structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1653                  Constant:
0:1653                    0 (const int)
0:1653                Constant:
0:1653                  4 (const int)
0:1653              Constant:
0:1653                3 (const int)
0:1654          move second child to first child ( temp highp 3-component vector of float)
0:1654            BaseColor: direct index for structure ( global highp 3-component vector of float)
0:1654              'bsdfInput' ( temp structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:1654              Constant:
0:1654                6 (const int)
0:1654            Albedo: direct index for structure ( global highp 3-component vector of float)
0:1654              ObjectMaterial: direct index for structure ( global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex})
0:1654                HitInfo: direct index for structure ( global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:1654                  'Entry' ( temp structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1654                  Constant:
0:1654                    0 (const int)
0:1654                Constant:
0:1654                  4 (const int)
0:1654              Constant:
0:1654                0 (const int)
0:1656          move second child to first child ( temp highp float)
0:1656            'Hemisphere' ( temp highp float)
0:1656            Test condition and select ( temp highp float)
0:1656              Condition
0:1656              Compare Greater Than ( temp bool)
0:1656                dot-product ( global highp float)
0:1656                  LightDir: direct index for structure ( global highp 3-component vector of float)
0:1656                    'bsdfInput' ( temp structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:1656                    Constant:
0:1656                      0 (const int)
0:1656                  Normal: direct index for structure ( global highp 3-component vector of float)
0:1656                    'bsdfInput' ( temp structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:1656                    Constant:
0:1656                      2 (const int)
0:1656                Constant:
0:1656                  0.000000
0:1656              true case
0:1656              Constant:
0:1656                0.000000
0:1656              false case
0:1656              Constant:
0:1656                1.000000
0:1659          add second child into first child ( temp highp uint)
0:1659            'TransmissionCount' ( temp highp uint)
0:1659            Convert int to uint ( temp highp uint)
0:1659              Test condition and select ( temp highp int)
0:1659                Condition
0:1659                Compare Greater Than ( temp bool)
0:1659                  'Hemisphere' ( temp highp float)
0:1659                  Constant:
0:1659                    0.500000
0:1659                true case
0:1659                Constant:
0:1659                  1 (const int)
0:1659                false case
0:1659                Constant:
0:1659                  0 (const int)
0:1661          move second child to first child ( temp highp 3-component vector of float)
0:1661            'ViewDir' ( temp highp 3-component vector of float)
0:1661            Negate value ( temp highp 3-component vector of float)
0:1661              Direction: direct index for structure ( global highp 3-component vector of float)
0:1661                OutgoingRay: direct index for structure ( global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:1661                  'Entry' ( temp structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1661                  Constant:
0:1661                    2 (const int)
0:1661                Constant:
0:1661                  1 (const int)
0:1664          Sequence
0:1664            move second child to first child ( temp highp 3-component vector of float)
0:1664              'NewRadiance' ( temp highp 3-component vector of float)
0:1664              Function Call: CookTorranceBSDF(struct-BSDF_Input-vf3-f1-vf3-f1-vf3-f1-vf3-f11;f1; ( global highp 3-component vector of float)
0:1664                'bsdfInput' ( temp structure{ global highp 3-component vector of float LightDir,  global highp float InterfaceRoughness,  global highp 3-component vector of float Normal,  global highp float InterfaceMetallic,  global highp 3-component vector of float HalfVec,  global highp float TransmissionWeight,  global highp 3-component vector of float BaseColor,  global highp float RefractiveIndexRatio})
0:1664                'Hemisphere' ( temp highp float)
0:1666          multiply second child into first child ( temp highp 3-component vector of float)
0:1666            'NewRadiance' ( temp highp 3-component vector of float)
0:1666            'Radiance' ( temp highp 3-component vector of float)
0:1668          divide second child into first child ( temp highp 3-component vector of float)
0:1668            'NewRadiance' ( temp highp 3-component vector of float)
0:1668            IncomingSampleWeight: direct index for structure ( global highp float)
0:1668              'Entry' ( temp structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1668              Constant:
0:1668                5 (const int)
0:1669          move second child to first child ( temp highp 3-component vector of float)
0:1669            'Radiance' ( temp highp 3-component vector of float)
0:1669            'NewRadiance' ( temp highp 3-component vector of float)
0:1671          move second child to first child ( temp highp 3-component vector of float)
0:1671            'Radiance' ( temp highp 3-component vector of float)
0:1671            min ( global highp 3-component vector of float)
0:1671              'Radiance' ( temp highp 3-component vector of float)
0:1671              Constant:
0:1671                100.000000
0:1671                100.000000
0:1671                100.000000
0:1674      move second child to first child ( temp highp 3-component vector of float)
0:1674        'Radiance' ( temp highp 3-component vector of float)
0:1674        min ( global highp 3-component vector of float)
0:1674          'Radiance' ( temp highp 3-component vector of float)
0:1674          Constant:
0:1674            100.000000
0:1674            100.000000
0:1674            100.000000
0:1679      Branch: Return with expression
0:1679        'Radiance' ( temp highp 3-component vector of float)
0:1682  Function Definition: TraceRayMonteCarlo(struct-Ray-vf3-vf31; ( global highp 3-component vector of float)
0:1682    Function Parameters: 
0:1682      'ray' ( in structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:?     Sequence
0:1685      Sequence
0:1685        move second child to first child ( temp highp int)
0:1685          'stackPtr' ( temp highp int)
0:1685          Constant:
0:1685            0 (const int)
0:1688      Sequence
0:1688        move second child to first child ( temp highp int)
0:1688          'layerPtr' ( temp highp int)
0:1688          Constant:
0:1688            0 (const int)
0:1691      Function Call: CheckForRayCollisions(struct-CollisionInfo-vf3-f1-vf3-f1-struct-Material-vf3-f1-f1-f1-f1-f11-struct-LightProperties-vf31-u1-b1-b11;struct-Ray-vf3-vf31; ( global void)
0:1691        'hitInfo' ( temp structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:1691        'ray' ( in structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:1693      Test condition and select ( temp void)
0:1693        Condition
0:1693        Negate conditional ( temp bool)
0:1693          HitOccured: direct index for structure ( global bool)
0:1693            'hitInfo' ( temp structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:1693            Constant:
0:1693              7 (const int)
0:1693        true case
0:1694        Branch: Return with expression
0:1694          Function Call: SampleCubeMap(vf3;f1; ( global highp 3-component vector of float)
0:1694            Direction: direct index for structure ( global highp 3-component vector of float)
0:1694              'ray' ( in structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:1694              Constant:
0:1694                1 (const int)
0:1694            Constant:
0:1694              0.000000
0:1696      Test condition and select ( temp void)
0:1696        Condition
0:1696        IsLightSrc: direct index for structure ( global bool)
0:1696          'hitInfo' ( temp structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:1696          Constant:
0:1696            8 (const int)
0:1696        true case
0:1697        Branch: Return with expression
0:1697          vector-scale ( temp highp 3-component vector of float)
0:1697            Color: direct index for structure ( global highp 3-component vector of float)
0:1697              LightProps: direct index for structure ( global structure{ global highp 3-component vector of float Color})
0:1697                'hitInfo' ( temp structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:1697                Constant:
0:1697                  5 (const int)
0:1697              Constant:
0:1697                0 (const int)
0:1697            NormalInverted: direct index for structure ( global highp float)
0:1697              'hitInfo' ( temp structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:1697              Constant:
0:1697                3 (const int)
0:1699      move second child to first child ( temp structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:1699        HitInfo: direct index for structure ( global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:1699          indirect index ( temp structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1699            'stack' ( temp 20-element array of structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1699            'stackPtr' ( temp highp int)
0:1699          Constant:
0:1699            0 (const int)
0:1699        'hitInfo' ( temp structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:1700      move second child to first child ( temp structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:1700        OutgoingRay: direct index for structure ( global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:1700          indirect index ( temp structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1700            'stack' ( temp 20-element array of structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1700            'stackPtr' ( temp highp int)
0:1700          Constant:
0:1700            2 (const int)
0:1700        'ray' ( in structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:1702      move second child to first child ( temp highp float)
0:1702        indirect index ( temp highp float)
0:1702          'RayRefractiveIndex' ( temp 20-element array of highp float)
0:1702          'layerPtr' ( temp highp int)
0:1702        Constant:
0:1702          1.000000
0:1704      Sequence
0:1704        move second child to first child ( temp bool)
0:1704          'FoundLightSrc' ( temp bool)
0:1704          Constant:
0:1704            false (const bool)
0:1705      Sequence
0:1705        move second child to first child ( temp highp uint)
0:1705          'i' ( temp highp uint)
0:1705          Constant:
0:1705            0 (const uint)
0:1708      Sequence
0:1708        Loop with condition tested first
0:1708          Loop Condition
0:1708          Compare Less Than ( temp bool)
0:1708            'i' ( temp highp uint)
0:1708            MaxBounceLimit: direct index for structure (layout( column_major std140 offset=32) uniform highp uint)
0:1708              'uSceneInfo' (layout( set=1 binding=6 column_major std140) uniform block{layout( column_major std140 offset=0) uniform highp 2-component vector of int MinBound, layout( column_major std140 offset=8) uniform highp 2-component vector of int MaxBound, layout( column_major std140 offset=16) uniform highp 2-component vector of int ImageResolution, layout( column_major std140 offset=24) uniform highp uint MeshCount, layout( column_major std140 offset=28) uniform highp uint LightCount, layout( column_major std140 offset=32) uniform highp uint MaxBounceLimit, layout( column_major std140 offset=36) uniform highp uint PixelSamples, layout( column_major std140 offset=40) uniform highp uint RandomSeed, layout( column_major std140 offset=44) uniform highp uint ResetImage, layout( column_major std140 offset=48) uniform highp uint FrameCount})
0:1708              Constant:
0:1708                5 (const int)
0:1708          Loop Body
0:1710          Sequence
0:1710            subtract second child into first child ( temp highp int)
0:1710              'layerPtr' ( temp highp int)
0:1710              Convert float to int ( temp highp int)
0:1710                add ( temp highp float)
0:1710                  divide ( temp highp float)
0:1710                    add ( temp highp float)
0:1710                      Negate value ( temp highp float)
0:1710                        NormalInverted: direct index for structure ( global highp float)
0:1710                          'hitInfo' ( temp structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:1710                          Constant:
0:1710                            3 (const int)
0:1710                      Constant:
0:1710                        1.000000
0:1710                    Constant:
0:1710                      2.000000
0:1710                  Constant:
0:1710                    0.500000
0:1711            Sequence
0:1711              move second child to first child ( temp highp float)
0:1711                'RefractiveIndex' ( temp highp float)
0:1711                divide ( temp highp float)
0:1711                  indirect index ( temp highp float)
0:1711                    'RayRefractiveIndex' ( temp 20-element array of highp float)
0:1711                    'layerPtr' ( temp highp int)
0:1711                  RefractiveIndex: direct index for structure ( global highp float)
0:1711                    ObjectMaterial: direct index for structure ( global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex})
0:1711                      'hitInfo' ( temp structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:1711                      Constant:
0:1711                        4 (const int)
0:1711                    Constant:
0:1711                      5 (const int)
0:1713            move second child to first child ( temp highp float)
0:1713              'RefractiveIndex' ( temp highp float)
0:1713              pow ( global highp float)
0:1713                'RefractiveIndex' ( temp highp float)
0:1713                NormalInverted: direct index for structure ( global highp float)
0:1713                  'hitInfo' ( temp structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:1713                  Constant:
0:1713                    3 (const int)
0:1715            Test condition and select ( temp void)
0:1715              Condition
0:1715              Negate conditional ( temp bool)
0:1715                Function Call: SampleUnitVec(struct-StackEntry-struct-CollisionInfo-vf3-f1-vf3-f1-struct-Material-vf3-f1-f1-f1-f1-f11-struct-LightProperties-vf31-u1-b1-b11-struct-Ray-vf3-vf31-struct-Ray-vf3-vf31-vf3-f1-f11;f1; ( global bool)
0:1715                  indirect index ( temp structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1715                    'stack' ( temp 20-element array of structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1715                    'stackPtr' ( temp highp int)
0:1715                  'RefractiveIndex' ( temp highp float)
0:1715              true case
0:1716              Branch: Return with expression
0:1716                Constant:
0:1716                  0.000000
0:1716                  0.000000
0:1716                  0.000000
0:1718            move second child to first child ( temp highp float)
0:1718              indirect index ( temp highp float)
0:1718                'RayRefractiveIndex' ( temp 20-element array of highp float)
0:1718                Pre-Increment ( temp highp int)
0:1718                  'layerPtr' ( temp highp int)
0:1718              RefractiveIndex: direct index for structure ( global highp float)
0:1718                ObjectMaterial: direct index for structure ( global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex})
0:1718                  'hitInfo' ( temp structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:1718                  Constant:
0:1718                    4 (const int)
0:1718                Constant:
0:1718                  5 (const int)
0:1720            subtract second child into first child ( temp highp int)
0:1720              'layerPtr' ( temp highp int)
0:1721              Test condition and select ( temp highp int)
0:1721                Condition
0:1721                Compare Greater Than ( temp bool)
0:1720                  component-wise multiply ( temp highp float)
0:1720                    dot-product ( global highp float)
0:1720                      Direction: direct index for structure ( global highp 3-component vector of float)
0:1720                        IncomingRay: direct index for structure ( global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:1720                          indirect index ( temp structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1720                            'stack' ( temp 20-element array of structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1720                            'stackPtr' ( temp highp int)
0:1720                          Constant:
0:1720                            1 (const int)
0:1720                        Constant:
0:1720                          1 (const int)
0:1720                      Normal: direct index for structure ( global highp 3-component vector of float)
0:1720                        'hitInfo' ( temp structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:1720                        Constant:
0:1720                          0 (const int)
0:1721                    NormalInverted: direct index for structure ( global highp float)
0:1721                      'hitInfo' ( temp structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:1721                      Constant:
0:1721                        3 (const int)
0:1721                  Constant:
0:1721                    0.000000
0:1721                true case
0:1721                Constant:
0:1721                  1 (const int)
0:1721                false case
0:1721                Constant:
0:1721                  0 (const int)
0:1723            Function Call: CheckForRayCollisions(struct-CollisionInfo-vf3-f1-vf3-f1-struct-Material-vf3-f1-f1-f1-f1-f11-struct-LightProperties-vf31-u1-b1-b11;struct-Ray-vf3-vf31; ( global void)
0:1723              'hitInfo' ( temp structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:1723              IncomingRay: direct index for structure ( global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:1723                indirect index ( temp structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1723                  'stack' ( temp 20-element array of structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1723                  'stackPtr' ( temp highp int)
0:1723                Constant:
0:1723                  1 (const int)
0:1724            Post-Increment ( temp highp int)
0:1724              'stackPtr' ( temp highp int)
0:1726            move second child to first child ( temp structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:1726              HitInfo: direct index for structure ( global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:1726                indirect index ( temp structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1726                  'stack' ( temp 20-element array of structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1726                  'stackPtr' ( temp highp int)
0:1726                Constant:
0:1726                  0 (const int)
0:1726              'hitInfo' ( temp structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:1727            move second child to first child ( temp structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:1727              OutgoingRay: direct index for structure ( global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:1727                indirect index ( temp structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1727                  'stack' ( temp 20-element array of structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1727                  'stackPtr' ( temp highp int)
0:1727                Constant:
0:1727                  2 (const int)
0:1727              IncomingRay: direct index for structure ( global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:1727                indirect index ( temp structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1727                  'stack' ( temp 20-element array of structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1727                  subtract ( temp highp int)
0:1727                    'stackPtr' ( temp highp int)
0:1727                    Constant:
0:1727                      1 (const int)
0:1727                Constant:
0:1727                  1 (const int)
0:1729            Test condition and select ( temp void)
0:1729              Condition
0:1729              logical-or ( temp bool)
0:1729                Negate conditional ( temp bool)
0:1729                  HitOccured: direct index for structure ( global bool)
0:1729                    'hitInfo' ( temp structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:1729                    Constant:
0:1729                      7 (const int)
0:1729                IsLightSrc: direct index for structure ( global bool)
0:1729                  'hitInfo' ( temp structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:1729                  Constant:
0:1729                    8 (const int)
0:1729              true case
0:1731              Sequence
0:1731                move second child to first child ( temp bool)
0:1731                  'FoundLightSrc' ( temp bool)
0:1731                  IsLightSrc: direct index for structure ( global bool)
0:1731                    'hitInfo' ( temp structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc})
0:1731                    Constant:
0:1731                      8 (const int)
0:1732                Branch: Break
0:1708          Loop Terminal Expression
0:1708          Post-Increment ( temp highp uint)
0:1708            'i' ( temp highp uint)
0:1736      Sequence
0:1736        move second child to first child ( temp highp 3-component vector of float)
0:1736          'IncomingLight' ( temp highp 3-component vector of float)
0:1736          Test condition and select ( temp highp 3-component vector of float)
0:1736            Condition
0:1736            logical-or ( temp bool)
0:1736              Compare Not Equal ( temp bool)
0:1736                'i' ( temp highp uint)
0:1736                MaxBounceLimit: direct index for structure (layout( column_major std140 offset=32) uniform highp uint)
0:1736                  'uSceneInfo' (layout( set=1 binding=6 column_major std140) uniform block{layout( column_major std140 offset=0) uniform highp 2-component vector of int MinBound, layout( column_major std140 offset=8) uniform highp 2-component vector of int MaxBound, layout( column_major std140 offset=16) uniform highp 2-component vector of int ImageResolution, layout( column_major std140 offset=24) uniform highp uint MeshCount, layout( column_major std140 offset=28) uniform highp uint LightCount, layout( column_major std140 offset=32) uniform highp uint MaxBounceLimit, layout( column_major std140 offset=36) uniform highp uint PixelSamples, layout( column_major std140 offset=40) uniform highp uint RandomSeed, layout( column_major std140 offset=44) uniform highp uint ResetImage, layout( column_major std140 offset=48) uniform highp uint FrameCount})
0:1736                  Constant:
0:1736                    5 (const int)
0:1736              'FoundLightSrc' ( temp bool)
0:1736            true case
0:1737            Function Call: GlobalIllumination(struct-StackEntry-struct-CollisionInfo-vf3-f1-vf3-f1-struct-Material-vf3-f1-f1-f1-f1-f11-struct-LightProperties-vf31-u1-b1-b11-struct-Ray-vf3-vf31-struct-Ray-vf3-vf31-vf3-f1-f11[20];i1;b1; ( global highp 3-component vector of float)
0:1737              'stack' ( temp 20-element array of structure{ global structure{ global highp 3-component vector of float Normal,  global highp float RayDis,  global highp 3-component vector of float IntersectionPoint,  global highp float NormalInverted,  global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} ObjectMaterial,  global structure{ global highp 3-component vector of float Color} LightProps,  global highp uint PrimitiveID,  global bool HitOccured,  global bool IsLightSrc} HitInfo,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} IncomingRay,  global structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction} OutgoingRay,  global highp 3-component vector of float HalfVec,  global highp float InterfaceRefractiveIndex,  global highp float IncomingSampleWeight})
0:1737              'stackPtr' ( temp highp int)
0:1737              'FoundLightSrc' ( temp bool)
0:1736            false case
0:1737            Constant:
0:1737              0.000000
0:1737              0.000000
0:1737              0.000000
0:1739      Branch: Return with expression
0:1739        'IncomingLight' ( temp highp 3-component vector of float)
0:1754  Function Definition: main( ( global void)
0:1754    Function Parameters: 
0:1756    Sequence
0:1756      Sequence
0:1756        move second child to first child ( temp highp 2-component vector of uint)
0:1756          'Position' ( temp highp 2-component vector of uint)
0:1756          vector swizzle ( temp highp 2-component vector of uint)
0:1756            'gl_GlobalInvocationID' ( in highp 3-component vector of uint GlobalInvocationID)
0:1756            Sequence
0:1756              Constant:
0:1756                0 (const int)
0:1756              Constant:
0:1756                1 (const int)
0:1759      move second child to first child ( temp highp uint)
0:1759        'sRandomGeneratorSeed' ( global highp uint)
0:1760        add ( temp highp uint)
0:1759          add ( temp highp uint)
0:1759            component-wise multiply ( temp highp uint)
0:1759              direct index ( temp highp uint)
0:1759                'Position' ( temp highp 2-component vector of uint)
0:1759                Constant:
0:1759                  0 (const int)
0:1759              RandomSeed: direct index for structure (layout( column_major std140 offset=40) uniform highp uint)
0:1759                'uSceneInfo' (layout( set=1 binding=6 column_major std140) uniform block{layout( column_major std140 offset=0) uniform highp 2-component vector of int MinBound, layout( column_major std140 offset=8) uniform highp 2-component vector of int MaxBound, layout( column_major std140 offset=16) uniform highp 2-component vector of int ImageResolution, layout( column_major std140 offset=24) uniform highp uint MeshCount, layout( column_major std140 offset=28) uniform highp uint LightCount, layout( column_major std140 offset=32) uniform highp uint MaxBounceLimit, layout( column_major std140 offset=36) uniform highp uint PixelSamples, layout( column_major std140 offset=40) uniform highp uint RandomSeed, layout( column_major std140 offset=44) uniform highp uint ResetImage, layout( column_major std140 offset=48) uniform highp uint FrameCount})
0:1759                Constant:
0:1759                  7 (const int)
0:1759            component-wise multiply ( temp highp uint)
0:1759              direct index ( temp highp uint)
0:1759                'Position' ( temp highp 2-component vector of uint)
0:1759                Constant:
0:1759                  1 (const int)
0:1760              add ( temp highp uint)
0:1760                direct index ( temp highp uint)
0:1760                  'Position' ( temp highp 2-component vector of uint)
0:1760                  Constant:
0:1760                    0 (const int)
0:1760                RandomSeed: direct index for structure (layout( column_major std140 offset=40) uniform highp uint)
0:1760                  'uSceneInfo' (layout( set=1 binding=6 column_major std140) uniform block{layout( column_major std140 offset=0) uniform highp 2-component vector of int MinBound, layout( column_major std140 offset=8) uniform highp 2-component vector of int MaxBound, layout( column_major std140 offset=16) uniform highp 2-component vector of int ImageResolution, layout( column_major std140 offset=24) uniform highp uint MeshCount, layout( column_major std140 offset=28) uniform highp uint LightCount, layout( column_major std140 offset=32) uniform highp uint MaxBounceLimit, layout( column_major std140 offset=36) uniform highp uint PixelSamples, layout( column_major std140 offset=40) uniform highp uint RandomSeed, layout( column_major std140 offset=44) uniform highp uint ResetImage, layout( column_major std140 offset=48) uniform highp uint FrameCount})
0:1760                  Constant:
0:1760                    7 (const int)
0:1760          RandomSeed: direct index for structure (layout( column_major std140 offset=40) uniform highp uint)
0:1760            'uSceneInfo' (layout( set=1 binding=6 column_major std140) uniform block{layout( column_major std140 offset=0) uniform highp 2-component vector of int MinBound, layout( column_major std140 offset=8) uniform highp 2-component vector of int MaxBound, layout( column_major std140 offset=16) uniform highp 2-component vector of int ImageResolution, layout( column_major std140 offset=24) uniform highp uint MeshCount, layout( column_major std140 offset=28) uniform highp uint LightCount, layout( column_major std140 offset=32) uniform highp uint MaxBounceLimit, layout( column_major std140 offset=36) uniform highp uint PixelSamples, layout( column_major std140 offset=40) uniform highp uint RandomSeed, layout( column_major std140 offset=44) uniform highp uint ResetImage, layout( column_major std140 offset=48) uniform highp uint FrameCount})
0:1760            Constant:
0:1760              7 (const int)
0:1762      Sequence
0:1762        move second child to first child ( temp highp 2-component vector of int)
0:1762          'ImageResolution' ( temp highp 2-component vector of int)
0:1762          subtract ( temp highp 2-component vector of int)
0:1762            MaxBound: direct index for structure (layout( column_major std140 offset=8) uniform highp 2-component vector of int)
0:1762              'uSceneInfo' (layout( set=1 binding=6 column_major std140) uniform block{layout( column_major std140 offset=0) uniform highp 2-component vector of int MinBound, layout( column_major std140 offset=8) uniform highp 2-component vector of int MaxBound, layout( column_major std140 offset=16) uniform highp 2-component vector of int ImageResolution, layout( column_major std140 offset=24) uniform highp uint MeshCount, layout( column_major std140 offset=28) uniform highp uint LightCount, layout( column_major std140 offset=32) uniform highp uint MaxBounceLimit, layout( column_major std140 offset=36) uniform highp uint PixelSamples, layout( column_major std140 offset=40) uniform highp uint RandomSeed, layout( column_major std140 offset=44) uniform highp uint ResetImage, layout( column_major std140 offset=48) uniform highp uint FrameCount})
0:1762              Constant:
0:1762                1 (const int)
0:1762            MinBound: direct index for structure (layout( column_major std140 offset=0) uniform highp 2-component vector of int)
0:1762              'uSceneInfo' (layout( set=1 binding=6 column_major std140) uniform block{layout( column_major std140 offset=0) uniform highp 2-component vector of int MinBound, layout( column_major std140 offset=8) uniform highp 2-component vector of int MaxBound, layout( column_major std140 offset=16) uniform highp 2-component vector of int ImageResolution, layout( column_major std140 offset=24) uniform highp uint MeshCount, layout( column_major std140 offset=28) uniform highp uint LightCount, layout( column_major std140 offset=32) uniform highp uint MaxBounceLimit, layout( column_major std140 offset=36) uniform highp uint PixelSamples, layout( column_major std140 offset=40) uniform highp uint RandomSeed, layout( column_major std140 offset=44) uniform highp uint ResetImage, layout( column_major std140 offset=48) uniform highp uint FrameCount})
0:1762              Constant:
0:1762                0 (const int)
0:1764      Test condition and select ( temp void)
0:1764        Condition
0:1764        logical-or ( temp bool)
0:1764          Compare Greater Than or Equal ( temp bool)
0:1764            direct index ( temp highp uint)
0:1764              'Position' ( temp highp 2-component vector of uint)
0:1764              Constant:
0:1764                0 (const int)
0:1764            Convert int to uint ( temp uint)
0:1764              direct index ( temp highp int)
0:1764                subtract ( temp highp 2-component vector of int)
0:1764                  MaxBound: direct index for structure (layout( column_major std140 offset=8) uniform highp 2-component vector of int)
0:1764                    'uSceneInfo' (layout( set=1 binding=6 column_major std140) uniform block{layout( column_major std140 offset=0) uniform highp 2-component vector of int MinBound, layout( column_major std140 offset=8) uniform highp 2-component vector of int MaxBound, layout( column_major std140 offset=16) uniform highp 2-component vector of int ImageResolution, layout( column_major std140 offset=24) uniform highp uint MeshCount, layout( column_major std140 offset=28) uniform highp uint LightCount, layout( column_major std140 offset=32) uniform highp uint MaxBounceLimit, layout( column_major std140 offset=36) uniform highp uint PixelSamples, layout( column_major std140 offset=40) uniform highp uint RandomSeed, layout( column_major std140 offset=44) uniform highp uint ResetImage, layout( column_major std140 offset=48) uniform highp uint FrameCount})
0:1764                    Constant:
0:1764                      1 (const int)
0:1764                  MinBound: direct index for structure (layout( column_major std140 offset=0) uniform highp 2-component vector of int)
0:1764                    'uSceneInfo' (layout( set=1 binding=6 column_major std140) uniform block{layout( column_major std140 offset=0) uniform highp 2-component vector of int MinBound, layout( column_major std140 offset=8) uniform highp 2-component vector of int MaxBound, layout( column_major std140 offset=16) uniform highp 2-component vector of int ImageResolution, layout( column_major std140 offset=24) uniform highp uint MeshCount, layout( column_major std140 offset=28) uniform highp uint LightCount, layout( column_major std140 offset=32) uniform highp uint MaxBounceLimit, layout( column_major std140 offset=36) uniform highp uint PixelSamples, layout( column_major std140 offset=40) uniform highp uint RandomSeed, layout( column_major std140 offset=44) uniform highp uint ResetImage, layout( column_major std140 offset=48) uniform highp uint FrameCount})
0:1764                    Constant:
0:1764                      0 (const int)
0:1764                Constant:
0:1764                  0 (const int)
0:1765          Compare Greater Than or Equal ( temp bool)
0:1765            direct index ( temp highp uint)
0:1765              'Position' ( temp highp 2-component vector of uint)
0:1765              Constant:
0:1765                1 (const int)
0:1765            Convert int to uint ( temp uint)
0:1765              direct index ( temp highp int)
0:1765                subtract ( temp highp 2-component vector of int)
0:1765                  MaxBound: direct index for structure (layout( column_major std140 offset=8) uniform highp 2-component vector of int)
0:1765                    'uSceneInfo' (layout( set=1 binding=6 column_major std140) uniform block{layout( column_major std140 offset=0) uniform highp 2-component vector of int MinBound, layout( column_major std140 offset=8) uniform highp 2-component vector of int MaxBound, layout( column_major std140 offset=16) uniform highp 2-component vector of int ImageResolution, layout( column_major std140 offset=24) uniform highp uint MeshCount, layout( column_major std140 offset=28) uniform highp uint LightCount, layout( column_major std140 offset=32) uniform highp uint MaxBounceLimit, layout( column_major std140 offset=36) uniform highp uint PixelSamples, layout( column_major std140 offset=40) uniform highp uint RandomSeed, layout( column_major std140 offset=44) uniform highp uint ResetImage, layout( column_major std140 offset=48) uniform highp uint FrameCount})
0:1765                    Constant:
0:1765                      1 (const int)
0:1765                  MinBound: direct index for structure (layout( column_major std140 offset=0) uniform highp 2-component vector of int)
0:1765                    'uSceneInfo' (layout( set=1 binding=6 column_major std140) uniform block{layout( column_major std140 offset=0) uniform highp 2-component vector of int MinBound, layout( column_major std140 offset=8) uniform highp 2-component vector of int MaxBound, layout( column_major std140 offset=16) uniform highp 2-component vector of int ImageResolution, layout( column_major std140 offset=24) uniform highp uint MeshCount, layout( column_major std140 offset=28) uniform highp uint LightCount, layout( column_major std140 offset=32) uniform highp uint MaxBounceLimit, layout( column_major std140 offset=36) uniform highp uint PixelSamples, layout( column_major std140 offset=40) uniform highp uint RandomSeed, layout( column_major std140 offset=44) uniform highp uint ResetImage, layout( column_major std140 offset=48) uniform highp uint FrameCount})
0:1765                    Constant:
0:1765                      0 (const int)
0:1765                Constant:
0:1765                  1 (const int)
0:1764        true case
0:1766        Branch: Return
0:1768      Sequence
0:1768        move second child to first child ( temp highp 2-component vector of int)
0:1768          'PositionOnImage' ( temp highp 2-component vector of int)
0:1768          add ( temp highp 2-component vector of int)
0:1768            Convert uint to int ( temp highp 2-component vector of int)
0:1768              'Position' ( temp highp 2-component vector of uint)
0:1768            MinBound: direct index for structure (layout( column_major std140 offset=0) uniform highp 2-component vector of int)
0:1768              'uSceneInfo' (layout( set=1 binding=6 column_major std140) uniform block{layout( column_major std140 offset=0) uniform highp 2-component vector of int MinBound, layout( column_major std140 offset=8) uniform highp 2-component vector of int MaxBound, layout( column_major std140 offset=16) uniform highp 2-component vector of int ImageResolution, layout( column_major std140 offset=24) uniform highp uint MeshCount, layout( column_major std140 offset=28) uniform highp uint LightCount, layout( column_major std140 offset=32) uniform highp uint MaxBounceLimit, layout( column_major std140 offset=36) uniform highp uint PixelSamples, layout( column_major std140 offset=40) uniform highp uint RandomSeed, layout( column_major std140 offset=44) uniform highp uint ResetImage, layout( column_major std140 offset=48) uniform highp uint FrameCount})
0:1768              Constant:
0:1768                0 (const int)
0:1770      Sequence
0:1770        move second child to first child ( temp highp 2-component vector of float)
0:1770          'RawOffset' ( temp highp 2-component vector of float)
0:1770          divide ( temp highp 2-component vector of float)
0:1770            subtract ( temp highp 2-component vector of float)
0:1770              Convert int to float ( temp highp 2-component vector of float)
0:1770                'PositionOnImage' ( temp highp 2-component vector of int)
0:1770              divide ( temp highp 2-component vector of float)
0:1770                Convert int to float ( temp highp 2-component vector of float)
0:1770                  ImageResolution: direct index for structure (layout( column_major std140 offset=16) uniform highp 2-component vector of int)
0:1770                    'uSceneInfo' (layout( set=1 binding=6 column_major std140) uniform block{layout( column_major std140 offset=0) uniform highp 2-component vector of int MinBound, layout( column_major std140 offset=8) uniform highp 2-component vector of int MaxBound, layout( column_major std140 offset=16) uniform highp 2-component vector of int ImageResolution, layout( column_major std140 offset=24) uniform highp uint MeshCount, layout( column_major std140 offset=28) uniform highp uint LightCount, layout( column_major std140 offset=32) uniform highp uint MaxBounceLimit, layout( column_major std140 offset=36) uniform highp uint PixelSamples, layout( column_major std140 offset=40) uniform highp uint RandomSeed, layout( column_major std140 offset=44) uniform highp uint ResetImage, layout( column_major std140 offset=48) uniform highp uint FrameCount})
0:1770                    Constant:
0:1770                      2 (const int)
0:1770                Constant:
0:1770                  2.000000
0:1771            Convert int to float ( temp highp 2-component vector of float)
0:1771              ImageResolution: direct index for structure (layout( column_major std140 offset=16) uniform highp 2-component vector of int)
0:1771                'uSceneInfo' (layout( set=1 binding=6 column_major std140) uniform block{layout( column_major std140 offset=0) uniform highp 2-component vector of int MinBound, layout( column_major std140 offset=8) uniform highp 2-component vector of int MaxBound, layout( column_major std140 offset=16) uniform highp 2-component vector of int ImageResolution, layout( column_major std140 offset=24) uniform highp uint MeshCount, layout( column_major std140 offset=28) uniform highp uint LightCount, layout( column_major std140 offset=32) uniform highp uint MaxBounceLimit, layout( column_major std140 offset=36) uniform highp uint PixelSamples, layout( column_major std140 offset=40) uniform highp uint RandomSeed, layout( column_major std140 offset=44) uniform highp uint ResetImage, layout( column_major std140 offset=48) uniform highp uint FrameCount})
0:1771                Constant:
0:1771                  2 (const int)
0:1773      multiply second child into first child ( temp highp float)
0:1773        direct index ( temp highp float)
0:1773          'RawOffset' ( temp highp 2-component vector of float)
0:1773          Constant:
0:1773            1 (const int)
0:1773        Constant:
0:1773          0.562500
0:1775      vector scale second child into first child ( temp highp 2-component vector of float)
0:1775        'RawOffset' ( temp highp 2-component vector of float)
0:1775        Constant:
0:1775          2.000000
0:1779      move second child to first child ( temp highp 3-component vector of float)
0:1779        Origin: direct index for structure ( global highp 3-component vector of float)
0:1779          'ray' ( temp structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:1779          Constant:
0:1779            0 (const int)
0:1779        Position: direct index for structure (layout( column_major std140 offset=0) uniform highp 3-component vector of float)
0:1779          'uCamera' (layout( set=1 binding=0 column_major std140) uniform block{layout( column_major std140 offset=0) uniform highp 3-component vector of float Position, layout( column_major std140 offset=16) uniform highp 3-component vector of float Direction, layout( column_major std140 offset=32) uniform highp 3-component vector of float Tangent, layout( column_major std140 offset=48) uniform highp 3-component vector of float Bitangent})
0:1779          Constant:
0:1779            0 (const int)
0:1780      move second child to first child ( temp highp 3-component vector of float)
0:1780        Direction: direct index for structure ( global highp 3-component vector of float)
0:1780          'ray' ( temp structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:1780          Constant:
0:1780            1 (const int)
0:1780        normalize ( global highp 3-component vector of float)
0:1780          add ( temp highp 3-component vector of float)
0:1780            Direction: direct index for structure (layout( column_major std140 offset=16) uniform highp 3-component vector of float)
0:1780              'uCamera' (layout( set=1 binding=0 column_major std140) uniform block{layout( column_major std140 offset=0) uniform highp 3-component vector of float Position, layout( column_major std140 offset=16) uniform highp 3-component vector of float Direction, layout( column_major std140 offset=32) uniform highp 3-component vector of float Tangent, layout( column_major std140 offset=48) uniform highp 3-component vector of float Bitangent})
0:1780              Constant:
0:1780                1 (const int)
0:1781            subtract ( temp highp 3-component vector of float)
0:1781              vector-scale ( temp highp 3-component vector of float)
0:1781                Tangent: direct index for structure (layout( column_major std140 offset=32) uniform highp 3-component vector of float)
0:1781                  'uCamera' (layout( set=1 binding=0 column_major std140) uniform block{layout( column_major std140 offset=0) uniform highp 3-component vector of float Position, layout( column_major std140 offset=16) uniform highp 3-component vector of float Direction, layout( column_major std140 offset=32) uniform highp 3-component vector of float Tangent, layout( column_major std140 offset=48) uniform highp 3-component vector of float Bitangent})
0:1781                  Constant:
0:1781                    2 (const int)
0:1781                direct index ( temp highp float)
0:1781                  'RawOffset' ( temp highp 2-component vector of float)
0:1781                  Constant:
0:1781                    0 (const int)
0:1781              vector-scale ( temp highp 3-component vector of float)
0:1781                Bitangent: direct index for structure (layout( column_major std140 offset=48) uniform highp 3-component vector of float)
0:1781                  'uCamera' (layout( set=1 binding=0 column_major std140) uniform block{layout( column_major std140 offset=0) uniform highp 3-component vector of float Position, layout( column_major std140 offset=16) uniform highp 3-component vector of float Direction, layout( column_major std140 offset=32) uniform highp 3-component vector of float Tangent, layout( column_major std140 offset=48) uniform highp 3-component vector of float Bitangent})
0:1781                  Constant:
0:1781                    3 (const int)
0:1781                direct index ( temp highp float)
0:1781                  'RawOffset' ( temp highp 2-component vector of float)
0:1781                  Constant:
0:1781                    1 (const int)
0:1783      Sequence
0:1783        move second child to first child ( temp highp 3-component vector of float)
0:1783          'IncomingLight' ( temp highp 3-component vector of float)
0:1783          Constant:
0:1783            0.000000
0:1783            0.000000
0:1783            0.000000
0:1785      Sequence
0:1785        Sequence
0:1785          move second child to first child ( temp highp int)
0:1785            'i' ( temp highp int)
0:1785            Constant:
0:1785              0 (const int)
0:1785        Loop with condition tested first
0:1785          Loop Condition
0:1785          Compare Less Than ( temp bool)
0:1785            Convert int to uint ( temp uint)
0:1785              'i' ( temp highp int)
0:1785            PixelSamples: direct index for structure (layout( column_major std140 offset=36) uniform highp uint)
0:1785              'uSceneInfo' (layout( set=1 binding=6 column_major std140) uniform block{layout( column_major std140 offset=0) uniform highp 2-component vector of int MinBound, layout( column_major std140 offset=8) uniform highp 2-component vector of int MaxBound, layout( column_major std140 offset=16) uniform highp 2-component vector of int ImageResolution, layout( column_major std140 offset=24) uniform highp uint MeshCount, layout( column_major std140 offset=28) uniform highp uint LightCount, layout( column_major std140 offset=32) uniform highp uint MaxBounceLimit, layout( column_major std140 offset=36) uniform highp uint PixelSamples, layout( column_major std140 offset=40) uniform highp uint RandomSeed, layout( column_major std140 offset=44) uniform highp uint ResetImage, layout( column_major std140 offset=48) uniform highp uint FrameCount})
0:1785              Constant:
0:1785                6 (const int)
0:1785          Loop Body
0:1786          add second child into first child ( temp highp 3-component vector of float)
0:1786            'IncomingLight' ( temp highp 3-component vector of float)
0:1786            Function Call: TraceRayMonteCarlo(struct-Ray-vf3-vf31; ( global highp 3-component vector of float)
0:1786              'ray' ( temp structure{ global highp 3-component vector of float Origin,  global highp 3-component vector of float Direction})
0:1785          Loop Terminal Expression
0:1785          Post-Increment ( temp highp int)
0:1785            'i' ( temp highp int)
0:1788      divide second child into first child ( temp highp 3-component vector of float)
0:1788        'IncomingLight' ( temp highp 3-component vector of float)
0:1788        Convert uint to float ( temp highp float)
0:1788          PixelSamples: direct index for structure (layout( column_major std140 offset=36) uniform highp uint)
0:1788            'uSceneInfo' (layout( set=1 binding=6 column_major std140) uniform block{layout( column_major std140 offset=0) uniform highp 2-component vector of int MinBound, layout( column_major std140 offset=8) uniform highp 2-component vector of int MaxBound, layout( column_major std140 offset=16) uniform highp 2-component vector of int ImageResolution, layout( column_major std140 offset=24) uniform highp uint MeshCount, layout( column_major std140 offset=28) uniform highp uint LightCount, layout( column_major std140 offset=32) uniform highp uint MaxBounceLimit, layout( column_major std140 offset=36) uniform highp uint PixelSamples, layout( column_major std140 offset=40) uniform highp uint RandomSeed, layout( column_major std140 offset=44) uniform highp uint ResetImage, layout( column_major std140 offset=48) uniform highp uint FrameCount})
0:1788            Constant:
0:1788              6 (const int)
0:1790      Sequence
0:1790        move second child to first child ( temp highp 3-component vector of float)
0:1790          'ExistingColor' ( temp highp 3-component vector of float)
0:1790          vector swizzle ( temp highp 3-component vector of float)
0:1790            imageLoad ( global highp 4-component vector of float)
0:1790              'ColorSum' (layout( set=0 binding=1 rgba32f) uniform highp image2D)
0:1790              Convert uint to int ( temp highp 2-component vector of int)
0:1790                'Position' ( temp highp 2-component vector of uint)
0:1790            Sequence
0:1790              Constant:
0:1790                0 (const int)
0:1790              Constant:
0:1790                1 (const int)
0:1790              Constant:
0:1790                2 (const int)
0:1792      Sequence
0:1792        move second child to first child ( temp highp 3-component vector of float)
0:1792          'Delta' ( temp highp 3-component vector of float)
0:1792          subtract ( temp highp 3-component vector of float)
0:1792            'IncomingLight' ( temp highp 3-component vector of float)
0:1792            'ExistingColor' ( temp highp 3-component vector of float)
0:1793      Sequence
0:1793        move second child to first child ( temp highp 3-component vector of float)
0:1793          'Color' ( temp highp 3-component vector of float)
0:1793          add ( temp highp 3-component vector of float)
0:1793            'ExistingColor' ( temp highp 3-component vector of float)
0:1793            divide ( temp highp 3-component vector of float)
0:1793              'Delta' ( temp highp 3-component vector of float)
0:1793              Convert uint to float ( temp highp float)
0:1793                FrameCount: direct index for structure (layout( column_major std140 offset=48) uniform highp uint)
0:1793                  'uSceneInfo' (layout( set=1 binding=6 column_major std140) uniform block{layout( column_major std140 offset=0) uniform highp 2-component vector of int MinBound, layout( column_major std140 offset=8) uniform highp 2-component vector of int MaxBound, layout( column_major std140 offset=16) uniform highp 2-component vector of int ImageResolution, layout( column_major std140 offset=24) uniform highp uint MeshCount, layout( column_major std140 offset=28) uniform highp uint LightCount, layout( column_major std140 offset=32) uniform highp uint MaxBounceLimit, layout( column_major std140 offset=36) uniform highp uint PixelSamples, layout( column_major std140 offset=40) uniform highp uint RandomSeed, layout( column_major std140 offset=44) uniform highp uint ResetImage, layout( column_major std140 offset=48) uniform highp uint FrameCount})
0:1793                  Constant:
0:1793                    9 (const int)
0:1795      Test condition and select ( temp void)
0:1795        Condition
0:1795        Convert uint to bool ( temp bool)
0:1795          ResetImage: direct index for structure (layout( column_major std140 offset=44) uniform highp uint)
0:1795            'uSceneInfo' (layout( set=1 binding=6 column_major std140) uniform block{layout( column_major std140 offset=0) uniform highp 2-component vector of int MinBound, layout( column_major std140 offset=8) uniform highp 2-component vector of int MaxBound, layout( column_major std140 offset=16) uniform highp 2-component vector of int ImageResolution, layout( column_major std140 offset=24) uniform highp uint MeshCount, layout( column_major std140 offset=28) uniform highp uint LightCount, layout( column_major std140 offset=32) uniform highp uint MaxBounceLimit, layout( column_major std140 offset=36) uniform highp uint PixelSamples, layout( column_major std140 offset=40) uniform highp uint RandomSeed, layout( column_major std140 offset=44) uniform highp uint ResetImage, layout( column_major std140 offset=48) uniform highp uint FrameCount})
0:1795            Constant:
0:1795              8 (const int)
0:1795        true case
0:1796        move second child to first child ( temp highp 3-component vector of float)
0:1796          'Color' ( temp highp 3-component vector of float)
0:1796          'IncomingLight' ( temp highp 3-component vector of float)
0:1798      Sequence
0:1798        move second child to first child ( temp highp 3-component vector of float)
0:1798          'FinalColor' ( temp highp 3-component vector of float)
0:1798          Function Call: ToneMap(vf3;f1; ( global highp 3-component vector of float)
0:1798            'Color' ( temp highp 3-component vector of float)
0:1798            Constant:
0:1798              0.500000
0:1799      move second child to first child ( temp highp 3-component vector of float)
0:1799        'FinalColor' ( temp highp 3-component vector of float)
0:1799        Function Call: GammaCorrection(vf3; ( global highp 3-component vector of float)
0:1799          'FinalColor' ( temp highp 3-component vector of float)
0:1801      Test condition and select ( temp void)
0:1801        Condition
0:1801        Compare Greater Than ( temp bool)
0:1801          FrameCount: direct index for structure (layout( column_major std140 offset=48) uniform highp uint)
0:1801            'uSceneInfo' (layout( set=1 binding=6 column_major std140) uniform block{layout( column_major std140 offset=0) uniform highp 2-component vector of int MinBound, layout( column_major std140 offset=8) uniform highp 2-component vector of int MaxBound, layout( column_major std140 offset=16) uniform highp 2-component vector of int ImageResolution, layout( column_major std140 offset=24) uniform highp uint MeshCount, layout( column_major std140 offset=28) uniform highp uint LightCount, layout( column_major std140 offset=32) uniform highp uint MaxBounceLimit, layout( column_major std140 offset=36) uniform highp uint PixelSamples, layout( column_major std140 offset=40) uniform highp uint RandomSeed, layout( column_major std140 offset=44) uniform highp uint ResetImage, layout( column_major std140 offset=48) uniform highp uint FrameCount})
0:1801            Constant:
0:1801              9 (const int)
0:1801          Constant:
0:1801            100 (const uint)
0:1801        true case
0:1806        Sequence
0:1806          Sequence
0:1806            move second child to first child ( temp highp 3-component vector of float)
0:1806              'PercentageChange' ( temp highp 3-component vector of float)
0:1806              divide ( temp highp 3-component vector of float)
0:1806                subtract ( temp highp 3-component vector of float)
0:1806                  'Color' ( temp highp 3-component vector of float)
0:1806                  'ExistingColor' ( temp highp 3-component vector of float)
0:1806                'ExistingColor' ( temp highp 3-component vector of float)
0:1808          AtomicAnd ( global highp uint)
0:1808            Finished: direct index for structure (layout( column_major std430 offset=0) writeonly buffer highp uint)
0:1808              'uCPU_Feedback' (layout( set=2 binding=0 column_major std430) writeonly buffer block{layout( column_major std430 offset=0) writeonly buffer highp uint Finished})
0:1808              Constant:
0:1808                0 (const int)
0:1808            Convert bool to uint ( temp highp uint)
0:1808              Compare Less Than ( temp bool)
0:1808                length ( global highp float)
0:1808                  'PercentageChange' ( temp highp 3-component vector of float)
0:1808                Constant:
0:1808                  0.010000
0:1810          Test condition and select ( temp void)
0:1810            Condition
0:1810            Compare Less Than ( temp bool)
0:1810              length ( global highp float)
0:1810                subtract ( temp highp 3-component vector of float)
0:1810                  'Color' ( temp highp 3-component vector of float)
0:1810                  'ExistingColor' ( temp highp 3-component vector of float)
0:1810              Constant:
0:1810                0.000100
0:1810            true case
0:1811            AtomicAnd ( global highp uint)
0:1811              Finished: direct index for structure (layout( column_major std430 offset=0) writeonly buffer highp uint)
0:1811                'uCPU_Feedback' (layout( set=2 binding=0 column_major std430) writeonly buffer block{layout( column_major std430 offset=0) writeonly buffer highp uint Finished})
0:1811                Constant:
0:1811                  0 (const int)
0:1811              Constant:
0:1811                1 (const uint)
0:1801        false case
0:1815        Sequence
0:1815          move second child to first child ( temp highp uint)
0:1815            Finished: direct index for structure (layout( column_major std430 offset=0) writeonly buffer highp uint)
0:1815              'uCPU_Feedback' (layout( set=2 binding=0 column_major std430) writeonly buffer block{layout( column_major std430 offset=0) writeonly buffer highp uint Finished})
0:1815              Constant:
0:1815                0 (const int)
0:1815            Constant:
0:1815              0 (const uint)
0:1818      imageStore ( global highp void)
0:1818        'ColorSum' (layout( set=0 binding=1 rgba32f) uniform highp image2D)
0:1818        Convert uint to int ( temp highp 2-component vector of int)
0:1818          'Position' ( temp highp 2-component vector of uint)
0:1818        Construct vec4 ( temp highp 4-component vector of float)
0:1818          'Color' ( temp highp 3-component vector of float)
0:1818          Constant:
0:1818            1.000000
0:1819      imageStore ( global highp void)
0:1819        'ImageOutput' (layout( set=0 binding=0 rgba8) uniform highp image2D)
0:1819        Convert uint to int ( temp highp 2-component vector of int)
0:1819          add ( temp highp 2-component vector of uint)
0:1819            'Position' ( temp highp 2-component vector of uint)
0:1819            Convert int to uint ( temp highp 2-component vector of uint)
0:1819              MinBound: direct index for structure (layout( column_major std140 offset=0) uniform highp 2-component vector of int)
0:1819                'uSceneInfo' (layout( set=1 binding=6 column_major std140) uniform block{layout( column_major std140 offset=0) uniform highp 2-component vector of int MinBound, layout( column_major std140 offset=8) uniform highp 2-component vector of int MaxBound, layout( column_major std140 offset=16) uniform highp 2-component vector of int ImageResolution, layout( column_major std140 offset=24) uniform highp uint MeshCount, layout( column_major std140 offset=28) uniform highp uint LightCount, layout( column_major std140 offset=32) uniform highp uint MaxBounceLimit, layout( column_major std140 offset=36) uniform highp uint PixelSamples, layout( column_major std140 offset=40) uniform highp uint RandomSeed, layout( column_major std140 offset=44) uniform highp uint ResetImage, layout( column_major std140 offset=48) uniform highp uint FrameCount})
0:1819                Constant:
0:1819                  0 (const int)
0:1819        Construct vec4 ( temp highp 4-component vector of float)
0:1819          'FinalColor' ( temp highp 3-component vector of float)
0:1819          Constant:
0:1819            1.000000
0:?   Linker Objects
0:?     'uCamera' (layout( set=1 binding=0 column_major std140) uniform block{layout( column_major std140 offset=0) uniform highp 3-component vector of float Position, layout( column_major std140 offset=16) uniform highp 3-component vector of float Direction, layout( column_major std140 offset=32) uniform highp 3-component vector of float Tangent, layout( column_major std140 offset=48) uniform highp 3-component vector of float Bitangent})
0:?     'sVertexBuffer' (layout( set=1 binding=1 column_major std430) readonly buffer block{layout( column_major std430 offset=0) readonly buffer runtime-sized array of highp 3-component vector of float Positions})
0:?     'sIndexBuffer' (layout( set=1 binding=2 column_major std430) readonly buffer block{layout( column_major std430 offset=0) readonly buffer runtime-sized array of highp 4-component vector of uint Indices})
0:?     'sNodeBuffer' (layout( set=1 binding=3 column_major std430) readonly buffer block{layout( column_major std430 offset=0) readonly buffer runtime-sized array of structure{ global highp 3-component vector of float MinBound,  global highp uint BeginIndex,  global highp 3-component vector of float MaxBound,  global highp uint EndIndex,  global highp uint FirstChildIndex,  global highp uint Padding,  global highp uint SecondChildIndex} Nodes})
0:?     'sMeshInfos' (layout( set=1 binding=4 column_major std430) readonly buffer block{layout( column_major std430 offset=0) readonly buffer runtime-sized array of structure{ global highp uint BeginIndex,  global highp uint Padding,  global highp uint EndIndex, layout( column_major std430) global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} SurfaceMaterial} Infos})
0:?     'sLightInfos' (layout( set=1 binding=5 column_major std430) readonly buffer block{layout( column_major std430 offset=0) readonly buffer runtime-sized array of structure{ global highp uint BeginIndex,  global highp uint Padding,  global highp uint EndIndex, layout( column_major std430) global structure{ global highp 3-component vector of float Color} Props} Infos})
0:?     'uSceneInfo' (layout( set=1 binding=6 column_major std140) uniform block{layout( column_major std140 offset=0) uniform highp 2-component vector of int MinBound, layout( column_major std140 offset=8) uniform highp 2-component vector of int MaxBound, layout( column_major std140 offset=16) uniform highp 2-component vector of int ImageResolution, layout( column_major std140 offset=24) uniform highp uint MeshCount, layout( column_major std140 offset=28) uniform highp uint LightCount, layout( column_major std140 offset=32) uniform highp uint MaxBounceLimit, layout( column_major std140 offset=36) uniform highp uint PixelSamples, layout( column_major std140 offset=40) uniform highp uint RandomSeed, layout( column_major std140 offset=44) uniform highp uint ResetImage, layout( column_major std140 offset=48) uniform highp uint FrameCount})
0:?     'uCubeMap' (layout( set=1 binding=7) uniform highp sampler2D)
0:?     'FLT_MAX' ( const highp float)
0:?       3.4028235000000e+38
0:?     'TOLERENCE' ( const highp float)
0:?       0.000010
0:?     'sRandomGeneratorSeed' ( global highp uint)
0:?     'MaxRadiance' ( const highp 3-component vector of float)
0:?       100.000000
0:?       100.000000
0:?       100.000000
0:?     'gl_WorkGroupSize' ( const highp 3-component vector of uint WorkGroupSize)
0:?       8 (const uint)
0:?       4 (const uint)
0:?       1 (const uint)
0:?     'ImageOutput' (layout( set=0 binding=0 rgba8) uniform highp image2D)
0:?     'ColorSum' (layout( set=0 binding=1 rgba32f) uniform highp image2D)
0:?     'uCPU_Feedback' (layout( set=2 binding=0 column_major std430) writeonly buffer block{layout( column_major std430 offset=0) writeonly buffer highp uint Finished})
              length ( global highp float)
0:1189                subtract ( temp highp 3-component vector of float)
0:1189                  'Color' ( temp highp 3-component vector of float)
0:1189                  'ExistingColor' ( temp highp 3-component vector of float)
0:1189              Constant:
0:1189                0.000100
0:1189            true case
0:1190            AtomicAnd ( global highp uint)
0:1190              Finished: direct index for structure (layout( column_major std430 offset=0) writeonly buffer highp uint)
0:1190                'uCPU_Feedback' (layout( set=2 binding=0 column_major std430) writeonly buffer block{layout( column_major std430 offset=0) writeonly buffer highp uint Finished})
0:1190                Constant:
0:1190                  0 (const int)
0:1190              Constant:
0:1190                1 (const uint)
0:1180        false case
0:1194        Sequence
0:1194          move second child to first child ( temp highp uint)
0:1194            Finished: direct index for structure (layout( column_major std430 offset=0) writeonly buffer highp uint)
0:1194              'uCPU_Feedback' (layout( set=2 binding=0 column_major std430) writeonly buffer block{layout( column_major std430 offset=0) writeonly buffer highp uint Finished})
0:1194              Constant:
0:1194                0 (const int)
0:1194            Constant:
0:1194              0 (const uint)
0:1197      imageStore ( global highp void)
0:1197        'ColorSum' (layout( set=0 binding=1 rgba32f) uniform highp image2D)
0:1197        Convert uint to int ( temp highp 2-component vector of int)
0:1197          'Position' ( temp highp 2-component vector of uint)
0:1197        Construct vec4 ( temp highp 4-component vector of float)
0:1197          'Color' ( temp highp 3-component vector of float)
0:1197          Constant:
0:1197            1.000000
0:1198      imageStore ( global highp void)
0:1198        'ImageOutput' (layout( set=0 binding=0 rgba8) uniform highp image2D)
0:1198        Convert uint to int ( temp highp 2-component vector of int)
0:1198          add ( temp highp 2-component vector of uint)
0:1198            'Position' ( temp highp 2-component vector of uint)
0:1198            Convert int to uint ( temp highp 2-component vector of uint)
0:1198              MinBound: direct index for structure (layout( column_major std140 offset=0) uniform highp 2-component vector of int)
0:1198                'uSceneInfo' (layout( set=1 binding=6 column_major std140) uniform block{layout( column_major std140 offset=0) uniform highp 2-component vector of int MinBound, layout( column_major std140 offset=8) uniform highp 2-component vector of int MaxBound, layout( column_major std140 offset=16) uniform highp 2-component vector of int ImageResolution, layout( column_major std140 offset=24) uniform highp uint MeshCount, layout( column_major std140 offset=28) uniform highp uint LightCount, layout( column_major std140 offset=32) uniform highp uint MaxBounceLimit, layout( column_major std140 offset=36) uniform highp uint PixelSamples, layout( column_major std140 offset=40) uniform highp uint RandomSeed, layout( column_major std140 offset=44) uniform highp uint ResetImage, layout( column_major std140 offset=48) uniform highp uint FrameCount})
0:1198                Constant:
0:1198                  0 (const int)
0:1198        Construct vec4 ( temp highp 4-component vector of float)
0:1198          'FinalColor' ( temp highp 3-component vector of float)
0:1198          Constant:
0:1198            1.000000
0:?   Linker Objects
0:?     'uCamera' (layout( set=1 binding=0 column_major std140) uniform block{layout( column_major std140 offset=0) uniform highp 3-component vector of float Position, layout( column_major std140 offset=16) uniform highp 3-component vector of float Direction, layout( column_major std140 offset=32) uniform highp 3-component vector of float Tangent, layout( column_major std140 offset=48) uniform highp 3-component vector of float Bitangent})
0:?     'sVertexBuffer' (layout( set=1 binding=1 column_major std430) readonly buffer block{layout( column_major std430 offset=0) readonly buffer runtime-sized array of highp 3-component vector of float Positions})
0:?     'sIndexBuffer' (layout( set=1 binding=2 column_major std430) readonly buffer block{layout( column_major std430 offset=0) readonly buffer runtime-sized array of highp 4-component vector of uint Indices})
0:?     'sNodeBuffer' (layout( set=1 binding=3 column_major std430) readonly buffer block{layout( column_major std430 offset=0) readonly buffer runtime-sized array of structure{ global highp 3-component vector of float MinBound,  global highp uint BeginIndex,  global highp 3-component vector of float MaxBound,  global highp uint EndIndex,  global highp uint FirstChildIndex,  global highp uint Padding,  global highp uint SecondChildIndex} Nodes})
0:?     'sMeshInfos' (layout( set=1 binding=4 column_major std430) readonly buffer block{layout( column_major std430 offset=0) readonly buffer runtime-sized array of structure{ global highp uint BeginIndex,  global highp uint Padding,  global highp uint EndIndex, layout( column_major std430) global structure{ global highp 3-component vector of float Albedo,  global highp float Metallic,  global highp float Roughness,  global highp float Transmission,  global highp float Padding1,  global highp float RefractiveIndex} SurfaceMaterial} Infos})
0:?     'sLightInfos' (layout( set=1 binding=5 column_major std430) readonly buffer block{layout( column_major std430 offset=0) readonly buffer runtime-sized array of structure{ global highp uint BeginIndex,  global highp uint Padding,  global highp uint EndIndex, layout( column_major std430) global structure{ global highp 3-component vector of float Color} Props} Infos})
0:?     'uSceneInfo' (layout( set=1 binding=6 column_major std140) uniform block{layout( column_major std140 offset=0) uniform highp 2-component vector of int MinBound, layout( column_major std140 offset=8) uniform highp 2-component vector of int MaxBound, layout( column_major std140 offset=16) uniform highp 2-component vector of int ImageResolution, layout( column_major std140 offset=24) uniform highp uint MeshCount, layout( column_major std140 offset=28) uniform highp uint LightCount, layout( column_major std140 offset=32) uniform highp uint MaxBounceLimit, layout( column_major std140 offset=36) uniform highp uint PixelSamples, layout( column_major std140 offset=40) uniform highp uint RandomSeed, layout( column_major std140 offset=44) uniform highp uint ResetImage, layout( column_major std140 offset=48) uniform highp uint FrameCount})
0:?     'uCubeMap' (layout( set=1 binding=7) uniform highp sampler2D)
0:?     'FLT_MAX' ( const highp float)
0:?       3.4028235000000e+38
0:?     'TOLERENCE' ( const highp float)
0:?       0.000010
0:?     'sRandomGeneratorSeed' ( global highp uint)
0:?     'MaxRadiance' ( const highp 3-component vector of float)
0:?       100.000000
0:?       100.000000
0:?       100.000000
0:?     'gl_WorkGroupSize' ( const highp 3-component vector of uint WorkGroupSize)
0:?       8 (const uint)
0:?       4 (const uint)
0:?       1 (const uint)
0:?     'ImageOutput' (layout( set=0 binding=0 rgba8) uniform highp image2D)
0:?     'ColorSum' (layout( set=0 binding=1 rgba32f) uniform highp image2D)
0:?     'uCPU_Feedback' (layout( set=2 binding=0 column_major std430) writeonly buffer block{layout( column_major std430 offset=0) writeonly buffer highp uint Finished})
